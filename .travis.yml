language: cpp
script: make unit
dist: trusty

before_install:
  - eval "${MATRIX_EVAL}"

env:
  global:
    - CIBW_BUILD='cp37-* cp27-*'
    - CIBW_TEST_REQUIRES='pytest'
    - CIBW_BEFORE_BUILD='pip install "numpy>=1.16" && pip install "pandas>=0.24" && pip install "pytest>=4.3" && pip install cmake==3.13.3'
    - CIBW_TEST_COMMAND='python -m pytest {project}/tests'


matrix:
  include:

    - os: osx
      name: Xcode 11.0 Debug
      osx_image: xcode11


    - os: osx
      name: Xcode 11.0
      osx_image: xcode11

      before_install:
        - pip install --user boto3
      script:
        - (mkdir -p build/release && cd build/release && cmake -DCMAKE_BUILD_TYPE=Release ../.. && cmake --build .)
        - build/release/test/unittest
        - python3 tools/shell/shell-test.py build/release/duckdb_cli

      after_success:
        - python tools/upload-s3.py lib-osx build/release/src/libduckdb.dylib build/release/src/libduckdb_static.a build/release/duckdb_cli


    - os: linux
      name: Clang 6
      dist: xenial
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - clang-6.0
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
        - TREAT_WARNINGS_AS_ERRORS=1


    - os: linux
      name: GCC 4.9
      addons:
         apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9 binutils-2.26
      env:
         - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"


    - os: linux
      dist: xenial
      name: GCC 9 Debug

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
        - TREAT_WARNINGS_AS_ERRORS=1


    - os: linux
      dist: bionic
      name: Valgrind

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - valgrind

      script:
        - mkdir -p build/debug
        - (cd build/debug && cmake -DCMAKE_BUILD_TYPE=Debug -DENABLE_SANITIZER=FALSE ../.. && cmake --build .)
        - valgrind ./build/debug/test/unittest -s "Test TPC-H SF0.01"


    - os: linux
      dist: xenial
      name: REST Server

      before_install:
        - pip install --user boto3

      script:
        - cd tools/rest
        - python3 test_the_rest.py

      # after_success:
      #   - python tools/upload-s3.py lib-linux-amd64 build/release/src/libduckdb*.so build/release/src/libduckdb*.a



    - os: linux
      dist: bionic
      name: GCC 9
      python: 3.7

      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
            - sourceline: 'ppa:deadsnakes/ppa'
          packages:
            - g++-9 python3.7
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
      before_install:
        - eval "${MATRIX_EVAL}"
        - pip install --user boto3
      script:
        - mkdir -p build/release
        - (cd build/release && cmake -DCMAKE_BUILD_TYPE=Release ../.. && cmake --build .)
        - build/release/test/unittest "*"
        - python3.7 tools/shell/shell-test.py build/release/duckdb_cli
        - (cd examples/embedded-c; make)
        - (cd examples/embedded-c++; make)
        - (cd examples/programmatic-querying; make)


      after_success:
        - python tools/upload-s3.py lib-linux-amd64 build/release/src/libduckdb*.so build/release/src/libduckdb*.a build/release/duckdb_cli


    - os: linux
      dist: xenial
      name: GCC 9 32 Bit

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9 libc6-dev-i386 g++-9-multilib gcc-9-multilib gcc-multilib g++-multilib lib32readline6-dev lib32readline6

      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
      before_install:
        - eval "${MATRIX_EVAL}"
        - pip install --user boto3
      script:
        - mkdir -p build/release
        - (cd build/release && cmake -DFORCE_32_BIT=1 -DCMAKE_BUILD_TYPE=Release ../.. && cmake --build .)
        - build/release/test/unittest "*"

      after_success:
        - python tools/upload-s3.py lib-linux-i386 build/release/src/libduckdb*.so build/release/src/libduckdb*.a build/release/duckdb_cli


    - os: linux
      dist: xenial
      name: Code Coverage

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test

      before_install:
        - pip install --user cpp-coveralls

      script:
        - mkdir -p build/coverage
        - (cd build/coverage && cmake -E env CXXFLAGS="--coverage" cmake -DCMAKE_BUILD_TYPE=Debug ../.. && make)
        - build/coverage/test/unittest

      after_success:
        - coveralls -b build/coverage -E '.*CMakeCXXCompilerId.cpp' --exclude tools --exclude benchmark --exclude examples --exclude third_party --exclude test --exclude src/common/enums --exclude src/parser/transform/helpers/nodetype_to_string.cpp --exclude build/coverage/third_party/libpg_query/grammar --gcov-options '\-lp'


    - os: linux
      dist: xenial
      name: GCC 5 (ARM64)
      arch: arm64

      script:
        - mkdir -p build/debug
        - (cd build/debug && cmake -DEXPLICIT_EXCEPTIONS=TRUE -DCMAKE_BUILD_TYPE=Debug ../.. && cmake --build .)
        - build/debug/test/unittest -s "[tpch]"


    - os: windows
      name: VS 2017
      filter_secrets: false

      language: c

      before_script:
        - choco install python3 --version 3.7.3 -y --params "/InstallDir:C:\Python37-x64"
        - choco install curl -y --force

      script:
        - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_GENERATOR_PLATFORM=x64
        - cmake --build . --target duckdb --config Release
        - cmake --build . --target unittest --config Release
        - cmake --build . --target shell --config Release
        - test/Release/unittest.exe
        - C:/Python37-x64/python.exe tools/shell/shell-test.py Release/duckdb_cli.exe

      after_success:
        - C:/Python37-x64/python.exe tools/upload-s3.py lib-windows-amd64 src/Release/duckdb.dll Release/duckdb_cli.exe


    - os: windows
      name: VS 2017 32 Bit
      filter_secrets: false

      language: c

      before_script:
        - choco install python3 --version 3.7.3 -y --params "/InstallDir:C:\Python37-x64"
        - choco install curl -y --force

      script:
        - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_GENERATOR_PLATFORM=Win32
        - cmake --build . --target duckdb --config Release
        - cmake --build . --target unittest --config Release
        - cmake --build . --target shell --config Release
        - test/Release/unittest.exe
        - C:/Python37-x64/python.exe tools/shell/shell-test.py Release/duckdb_cli.exe

      after_success:
        - C:/Python37-x64/python.exe tools/upload-s3.py lib-windows-i386 src/Release/duckdb.dll Release/duckdb_cli.exe


    - os: linux
      name: R Package

      dist: xenial
      language: r
      r: devel

      before_install:
        - pip install --user boto3
        - cd tools/rpkg
        - R -f dependencies.R

      install:
        - ./configure
        - R CMD build .
        - R CMD INSTALL duckdb_*.tar.gz

      script:
        - (cd tests && R -f testthat.R)
        - R -f ../../examples/R/dbi.R
        - R -f ../../examples/R/dplyr.R

      after_success:
        - R -e "tools::write_PACKAGES(dir = '.', type = 'source')"
        - python ../upload-s3.py rstats/src/contrib duckdb_*.tar.gz PACKAGES*
        - python ../upload-s3.py rstats duckdb_*.tar.gz


    - os: osx
      osx_image: xcode11
      name: R Package

      language: r
      #r: devel

      before_install:
        - pip install --user boto3
        - cd tools/rpkg
        - R -f dependencies.R

      install:
        - ./configure
        - R CMD build .
        - R CMD INSTALL --build duckdb_*.tar.gz
        - R CMD INSTALL duckdb_*.tgz

      script:
        - (cd tests && R -f testthat.R)

      after_success:
        - R -e "tools::write_PACKAGES(dir = '.', type = 'mac.binary')"
        - python ../upload-s3.py rstats/bin/macosx/el-capitan/contrib/3.6 duckdb_*.tgz PACKAGES*
        - python ../upload-s3.py rstats duckdb_*.tgz


    - os: windows
      name: R Package
      filter_secrets: false

      language: cpp

      before_script:
        - choco install r.project -y --version 3.6.0
        - wget "https://github.com/hannesmuehleisen/choco-rtools/raw/master/rtools.3.5.0.nupkg"
        - choco install rtools -s rtools.3.5.0.nupkg -f -y
        - choco install python3 --version 3.7.3 -y --params "/InstallDir:C:\Python37-x64"
        - choco install curl -y --force

      script:
        - export "PATH=/c/Rtools/bin:$PATH"
        - cd tools/rpkg
        - C:/Program\ Files/R/R-3.6.0/bin/R.exe -f dependencies.R
        - sh configure
        - C:/Program\ Files/R/R-3.6.0/bin/R.exe CMD build .
        - C:/Program\ Files/R/R-3.6.0/bin/R.exe CMD INSTALL --build --no-multiarch duckdb_*.tar.gz
        - C:/Program\ Files/R/R-3.6.0/bin/R.exe CMD INSTALL duckdb_*.zip
        - (cd tests; C:/Program\ Files/R/R-3.6.0/bin/R.exe -f testthat.R)

      after_success:
        - C:/Python37-x64/python.exe ../upload-s3.py rstats duckdb_*.zip
        - C:/Program\ Files/R/R-3.6.0/bin/R.exe -e "tools::write_PACKAGES(dir = '.', type = 'win.binary')"
        - C:/Python37-x64/python.exe ../upload-s3.py rstats/bin/windows/contrib/3.6 duckdb_*.zip PACKAGES*


    - os: linux
      name: Python 3 Package

      dist: xenial
      language: python
      cache: pip
      env:
        - CIBW_BUILD='cp37-*'
      python: 3.7

      script:
        - pip install cibuildwheel==0.10.2 boto3
        - cd tools/pythonpkg
        - python setup.py sdist
        - mkdir duckdb_tarball && tar xvf dist/duckdb-*.tar.gz --strip-components=1 -C duckdb_tarball
        - cibuildwheel --output-dir wheelhouse duckdb_tarball
        - cd ../..
      after_success:
        python tools/upload-s3.py python tools/pythonpkg/wheelhouse/*.whl tools/pythonpkg/dist/duckdb-*.tar.gz

    - os: linux
      name: Python 2 Package

      dist: xenial
      language: python
      cache: pip
      env:
        - CIBW_BUILD='cp27-*'
      python: 3.7

      script:
        - pip install cibuildwheel==0.10.2 boto3
        - cd tools/pythonpkg
        - python setup.py sdist
        - mkdir duckdb_tarball && tar xvf dist/duckdb-*.tar.gz --strip-components=1 -C duckdb_tarball
        - cibuildwheel --output-dir wheelhouse duckdb_tarball
        - cd ../..
      after_success:
        python tools/upload-s3.py python tools/pythonpkg/wheelhouse/*.whl tools/pythonpkg/dist/duckdb-*.tar.gz


    - os: osx
      name: Python Package
      language: generic
      osx_image: xcode11

      script:
        - pip install cibuildwheel==0.10.2 boto3
        - cd tools/pythonpkg
        - python setup.py sdist
        - mkdir duckdb_tarball && tar xvf dist/duckdb-*.tar.gz --strip-components=1 -C duckdb_tarball
        - cibuildwheel --output-dir wheelhouse duckdb_tarball
        - cd ../..

      after_success:
        python tools/upload-s3.py python tools/pythonpkg/wheelhouse/*.whl


    - os: windows
      name: Python Package
      language: cpp
      filter_secrets: false
      # no python 27 because no C++11 support in its windows toolchain
      env:
        - CIBW_BUILD='cp37-*'

      before_install:
        - choco install python3 --version 3.7.3 --sidebyside -y --forcex86 --force --params "/InstallDir:C:\Python37"
        - choco install python3 --version 3.7.3 --sidebyside -y --force --params "/InstallDir:C:\Python37-x64"
        - choco install python3 --version 3.6.8 --sidebyside -y --force --params "/InstallDir:C:\Python36-x64"
        - choco install python3 --version 3.6.8 --sidebyside -y --forcex86 --force --params "/InstallDir:C:\Python36"
        - choco install python2 --version 2.7.16 --sidebyside -y --forcex86 --force --params "/InstallDir:C:\Python27"
        - choco install python2 --version 2.7.16 --sidebyside -y --force --params "/InstallDir:C:\Python27-x64"
        - choco install curl -y --force
        - C:/Python37-x64/python.exe -m pip install --upgrade pip
        - C:/Python37-x64/python.exe -m pip install "cibuildwheel==0.10.2"
        - C:/Python37-x64/python.exe -m pip install "numpy>=1.16" "pandas>=0.24" "pytest>=4.3"

      script:
        - cd tools/pythonpkg
        - C:/Python37-x64/python.exe  setup.py sdist
        - mkdir duckdb_tarball && tar xvf dist/duckdb-*.tar.gz --strip-components=1 -C duckdb_tarball
        - C:/Python37-x64/python.exe -m cibuildwheel --platform windows --output-dir wheelhouse duckdb_tarball
        - cd ../..

      after_success:
        C:/Python37-x64/python.exe tools/upload-s3.py python tools/pythonpkg/wheelhouse/*.whl

    - os: osx
      name: Xcode 11.0 (Amalgamation)
      osx_image: xcode11
      script:
        - python scripts/amalgamation.py
        - (mkdir -p build/release && cd build/release && cmake -DAMALGAMATION_BUILD=1 -DCMAKE_BUILD_TYPE=Release ../.. && cmake --build .)
        - build/release/test/unittest

    - os: linux
      dist: xenial
      name: GCC 9 (Amalgamation)
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
      before_install:
        - eval "${MATRIX_EVAL}"
      script:
        - python scripts/amalgamation.py
        - mkdir -p build/release
        - (cd build/release && cmake -DAMALGAMATION_BUILD=1 -DCMAKE_BUILD_TYPE=Release ../.. && cmake --build .)
        - build/release/test/unittest "*"

      after_success:
        - (cd src/amalgamation; zip ../../build/duckdb.zip duckdb.*)
        - python tools/upload-s3.py src-amalgamation build/duckdb.zip


    - os: windows
      name: VS 2017 (Amalgamation)
      filter_secrets: false
      language: c
      before_script:
        - choco install python3 --version 3.7.3 -y --params "/InstallDir:C:\Python37-x64"
      script:
        - C:/Python37-x64/python.exe scripts/amalgamation.py
        - cmake -DAMALGAMATION_BUILD=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_GENERATOR_PLATFORM=x64
        - cmake --build . --target duckdb --config Release
        - cmake --build . --target unittest --config Release
        - test/Release/unittest.exe
