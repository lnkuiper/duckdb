/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LESS_EQUALS = 270,
     GREATER_EQUALS = 271,
     NOT_EQUALS = 272,
     ABORT_P = 273,
     ABSOLUTE_P = 274,
     ACCESS = 275,
     ACTION = 276,
     ADD_P = 277,
     ADMIN = 278,
     AFTER = 279,
     AGGREGATE = 280,
     ALL = 281,
     ALSO = 282,
     ALTER = 283,
     ALWAYS = 284,
     ANALYSE = 285,
     ANALYZE = 286,
     AND = 287,
     ANY = 288,
     ARRAY = 289,
     AS = 290,
     ASC_P = 291,
     ASSERTION = 292,
     ASSIGNMENT = 293,
     ASYMMETRIC = 294,
     AT = 295,
     ATTACH = 296,
     ATTRIBUTE = 297,
     AUTHORIZATION = 298,
     BACKWARD = 299,
     BEFORE = 300,
     BEGIN_P = 301,
     BETWEEN = 302,
     BIGINT = 303,
     BINARY = 304,
     BIT = 305,
     BOOLEAN_P = 306,
     BOTH = 307,
     BY = 308,
     CACHE = 309,
     CALLED = 310,
     CASCADE = 311,
     CASCADED = 312,
     CASE = 313,
     CAST = 314,
     CATALOG_P = 315,
     CHAIN = 316,
     CHAR_P = 317,
     CHARACTER = 318,
     CHARACTERISTICS = 319,
     CHECK_P = 320,
     CHECKPOINT = 321,
     CLASS = 322,
     CLOSE = 323,
     CLUSTER = 324,
     COALESCE = 325,
     COLLATE = 326,
     COLLATION = 327,
     COLUMN = 328,
     COLUMNS = 329,
     COMMENT = 330,
     COMMENTS = 331,
     COMMIT = 332,
     COMMITTED = 333,
     CONCURRENTLY = 334,
     CONFIGURATION = 335,
     CONFLICT = 336,
     CONNECTION = 337,
     CONSTRAINT = 338,
     CONSTRAINTS = 339,
     CONTENT_P = 340,
     CONTINUE_P = 341,
     CONVERSION_P = 342,
     COPY = 343,
     COST = 344,
     CREATE_P = 345,
     CROSS = 346,
     CSV = 347,
     CUBE = 348,
     CURRENT_P = 349,
     CURRENT_CATALOG = 350,
     CURRENT_DATE = 351,
     CURRENT_ROLE = 352,
     CURRENT_SCHEMA = 353,
     CURRENT_TIME = 354,
     CURRENT_TIMESTAMP = 355,
     CURRENT_USER = 356,
     CURSOR = 357,
     CYCLE = 358,
     DATA_P = 359,
     DATABASE = 360,
     DAY_P = 361,
     DEALLOCATE = 362,
     DEC = 363,
     DECIMAL_P = 364,
     DECLARE = 365,
     DEFAULT = 366,
     DEFAULTS = 367,
     DEFERRABLE = 368,
     DEFERRED = 369,
     DEFINER = 370,
     DELETE_P = 371,
     DELIMITER = 372,
     DELIMITERS = 373,
     DEPENDS = 374,
     DESC_P = 375,
     DETACH = 376,
     DICTIONARY = 377,
     DISABLE_P = 378,
     DISCARD = 379,
     DISTINCT = 380,
     DO = 381,
     DOCUMENT_P = 382,
     DOMAIN_P = 383,
     DOUBLE_P = 384,
     DROP = 385,
     EACH = 386,
     ELSE = 387,
     ENABLE_P = 388,
     ENCODING = 389,
     ENCRYPTED = 390,
     END_P = 391,
     ENUM_P = 392,
     ESCAPE = 393,
     EVENT = 394,
     EXCEPT = 395,
     EXCLUDE = 396,
     EXCLUDING = 397,
     EXCLUSIVE = 398,
     EXECUTE = 399,
     EXISTS = 400,
     EXPLAIN = 401,
     EXTENSION = 402,
     EXTERNAL = 403,
     EXTRACT = 404,
     FALSE_P = 405,
     FAMILY = 406,
     FETCH = 407,
     FILTER = 408,
     FIRST_P = 409,
     FLOAT_P = 410,
     FOLLOWING = 411,
     FOR = 412,
     FORCE = 413,
     FOREIGN = 414,
     FORWARD = 415,
     FREEZE = 416,
     FROM = 417,
     FULL = 418,
     FUNCTION = 419,
     FUNCTIONS = 420,
     GENERATED = 421,
     GLOBAL = 422,
     GRANT = 423,
     GRANTED = 424,
     GREATEST = 425,
     GROUP_P = 426,
     GROUPING = 427,
     HANDLER = 428,
     HAVING = 429,
     HEADER_P = 430,
     HOLD = 431,
     HOUR_P = 432,
     IDENTITY_P = 433,
     IF_P = 434,
     ILIKE = 435,
     IMMEDIATE = 436,
     IMMUTABLE = 437,
     IMPLICIT_P = 438,
     IMPORT_P = 439,
     IN_P = 440,
     INCLUDING = 441,
     INCREMENT = 442,
     INDEX = 443,
     INDEXES = 444,
     INHERIT = 445,
     INHERITS = 446,
     INITIALLY = 447,
     INLINE_P = 448,
     INNER_P = 449,
     INOUT = 450,
     INPUT_P = 451,
     INSENSITIVE = 452,
     INSERT = 453,
     INSTEAD = 454,
     INT_P = 455,
     INTEGER = 456,
     INTERSECT = 457,
     INTERVAL = 458,
     INTO = 459,
     INVOKER = 460,
     IS = 461,
     ISNULL = 462,
     ISOLATION = 463,
     JOIN = 464,
     KEY = 465,
     LABEL = 466,
     LANGUAGE = 467,
     LARGE_P = 468,
     LAST_P = 469,
     LATERAL_P = 470,
     LEADING = 471,
     LEAKPROOF = 472,
     LEAST = 473,
     LEFT = 474,
     LEVEL = 475,
     LIKE = 476,
     LIMIT = 477,
     LISTEN = 478,
     LOAD = 479,
     LOCAL = 480,
     LOCALTIME = 481,
     LOCALTIMESTAMP = 482,
     LOCATION = 483,
     LOCK_P = 484,
     LOCKED = 485,
     LOGGED = 486,
     MAPPING = 487,
     MATCH = 488,
     MATERIALIZED = 489,
     MAXVALUE = 490,
     METHOD = 491,
     MINUTE_P = 492,
     MINVALUE = 493,
     MODE = 494,
     MONTH_P = 495,
     MOVE = 496,
     NAME_P = 497,
     NAMES = 498,
     NATIONAL = 499,
     NATURAL = 500,
     NCHAR = 501,
     NEW = 502,
     NEXT = 503,
     NO = 504,
     NONE = 505,
     NOT = 506,
     NOTHING = 507,
     NOTIFY = 508,
     NOTNULL = 509,
     NOWAIT = 510,
     NULL_P = 511,
     NULLIF = 512,
     NULLS_P = 513,
     NUMERIC = 514,
     OBJECT_P = 515,
     OF = 516,
     OFF = 517,
     OFFSET = 518,
     OIDS = 519,
     OLD = 520,
     ON = 521,
     ONLY = 522,
     OPERATOR = 523,
     OPTION = 524,
     OPTIONS = 525,
     OR = 526,
     ORDER = 527,
     ORDINALITY = 528,
     OUT_P = 529,
     OUTER_P = 530,
     OVER = 531,
     OVERLAPS = 532,
     OVERLAY = 533,
     OVERRIDING = 534,
     OWNED = 535,
     OWNER = 536,
     PARALLEL = 537,
     PARSER = 538,
     PARTIAL = 539,
     PARTITION = 540,
     PASSING = 541,
     PASSWORD = 542,
     PLACING = 543,
     PLANS = 544,
     POLICY = 545,
     POSITION = 546,
     PRAGMA_P = 547,
     PRECEDING = 548,
     PRECISION = 549,
     PREPARE = 550,
     PREPARED = 551,
     PRESERVE = 552,
     PRIMARY = 553,
     PRIOR = 554,
     PRIVILEGES = 555,
     PROCEDURAL = 556,
     PROCEDURE = 557,
     PROGRAM = 558,
     PUBLICATION = 559,
     QUOTE = 560,
     RANGE = 561,
     READ_P = 562,
     REAL = 563,
     REASSIGN = 564,
     RECHECK = 565,
     RECURSIVE = 566,
     REF = 567,
     REFERENCES = 568,
     REFERENCING = 569,
     REFRESH = 570,
     REINDEX = 571,
     RELATIVE_P = 572,
     RELEASE = 573,
     RENAME = 574,
     REPEATABLE = 575,
     REPLACE = 576,
     REPLICA = 577,
     RESET = 578,
     RESTART = 579,
     RESTRICT = 580,
     RETURNING = 581,
     RETURNS = 582,
     REVOKE = 583,
     RIGHT = 584,
     ROLE = 585,
     ROLLBACK = 586,
     ROLLUP = 587,
     ROW = 588,
     ROWS = 589,
     RULE = 590,
     SAVEPOINT = 591,
     SCHEMA = 592,
     SCHEMAS = 593,
     SCROLL = 594,
     SEARCH = 595,
     SECOND_P = 596,
     SECURITY = 597,
     SELECT = 598,
     SEQUENCE = 599,
     SEQUENCES = 600,
     SERIALIZABLE = 601,
     SERVER = 602,
     SESSION = 603,
     SESSION_USER = 604,
     SET = 605,
     SETOF = 606,
     SETS = 607,
     SHARE = 608,
     SHOW = 609,
     SIMILAR = 610,
     SIMPLE = 611,
     SKIP = 612,
     SMALLINT = 613,
     SNAPSHOT = 614,
     SOME = 615,
     SQL_P = 616,
     STABLE = 617,
     STANDALONE_P = 618,
     START = 619,
     STATEMENT = 620,
     STATISTICS = 621,
     STDIN = 622,
     STDOUT = 623,
     STORAGE = 624,
     STRICT_P = 625,
     STRIP_P = 626,
     SUBSCRIPTION = 627,
     SUBSTRING = 628,
     SYMMETRIC = 629,
     SYSID = 630,
     SYSTEM_P = 631,
     TABLE = 632,
     TABLES = 633,
     TABLESAMPLE = 634,
     TABLESPACE = 635,
     TEMP = 636,
     TEMPLATE = 637,
     TEMPORARY = 638,
     TEXT_P = 639,
     THEN = 640,
     TIME = 641,
     TIMESTAMP = 642,
     TO = 643,
     TRAILING = 644,
     TRANSACTION = 645,
     TRANSFORM = 646,
     TREAT = 647,
     TRIGGER = 648,
     TRIM = 649,
     TRUE_P = 650,
     TRUNCATE = 651,
     TRUSTED = 652,
     TYPE_P = 653,
     TYPES_P = 654,
     UNBOUNDED = 655,
     UNCOMMITTED = 656,
     UNENCRYPTED = 657,
     UNION = 658,
     UNIQUE = 659,
     UNKNOWN = 660,
     UNLISTEN = 661,
     UNLOGGED = 662,
     UNTIL = 663,
     UPDATE = 664,
     USER = 665,
     USING = 666,
     VACUUM = 667,
     VALID = 668,
     VALIDATE = 669,
     VALIDATOR = 670,
     VALUE_P = 671,
     VALUES = 672,
     VARCHAR = 673,
     VARIADIC = 674,
     VARYING = 675,
     VERBOSE = 676,
     VERSION_P = 677,
     VIEW = 678,
     VIEWS = 679,
     VOLATILE = 680,
     WHEN = 681,
     WHERE = 682,
     WHITESPACE_P = 683,
     WINDOW = 684,
     WITH = 685,
     WITHIN = 686,
     WITHOUT = 687,
     WORK = 688,
     WRAPPER = 689,
     WRITE_P = 690,
     XML_P = 691,
     XMLATTRIBUTES = 692,
     XMLCONCAT = 693,
     XMLELEMENT = 694,
     XMLEXISTS = 695,
     XMLFOREST = 696,
     XMLNAMESPACES = 697,
     XMLPARSE = 698,
     XMLPI = 699,
     XMLROOT = 700,
     XMLSERIALIZE = 701,
     XMLTABLE = 702,
     YEAR_P = 703,
     YES_P = 704,
     ZONE = 705,
     NOT_LA = 706,
     NULLS_LA = 707,
     WITH_LA = 708,
     POSTFIXOP = 709,
     UMINUS = 710
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LESS_EQUALS 270
#define GREATER_EQUALS 271
#define NOT_EQUALS 272
#define ABORT_P 273
#define ABSOLUTE_P 274
#define ACCESS 275
#define ACTION 276
#define ADD_P 277
#define ADMIN 278
#define AFTER 279
#define AGGREGATE 280
#define ALL 281
#define ALSO 282
#define ALTER 283
#define ALWAYS 284
#define ANALYSE 285
#define ANALYZE 286
#define AND 287
#define ANY 288
#define ARRAY 289
#define AS 290
#define ASC_P 291
#define ASSERTION 292
#define ASSIGNMENT 293
#define ASYMMETRIC 294
#define AT 295
#define ATTACH 296
#define ATTRIBUTE 297
#define AUTHORIZATION 298
#define BACKWARD 299
#define BEFORE 300
#define BEGIN_P 301
#define BETWEEN 302
#define BIGINT 303
#define BINARY 304
#define BIT 305
#define BOOLEAN_P 306
#define BOTH 307
#define BY 308
#define CACHE 309
#define CALLED 310
#define CASCADE 311
#define CASCADED 312
#define CASE 313
#define CAST 314
#define CATALOG_P 315
#define CHAIN 316
#define CHAR_P 317
#define CHARACTER 318
#define CHARACTERISTICS 319
#define CHECK_P 320
#define CHECKPOINT 321
#define CLASS 322
#define CLOSE 323
#define CLUSTER 324
#define COALESCE 325
#define COLLATE 326
#define COLLATION 327
#define COLUMN 328
#define COLUMNS 329
#define COMMENT 330
#define COMMENTS 331
#define COMMIT 332
#define COMMITTED 333
#define CONCURRENTLY 334
#define CONFIGURATION 335
#define CONFLICT 336
#define CONNECTION 337
#define CONSTRAINT 338
#define CONSTRAINTS 339
#define CONTENT_P 340
#define CONTINUE_P 341
#define CONVERSION_P 342
#define COPY 343
#define COST 344
#define CREATE_P 345
#define CROSS 346
#define CSV 347
#define CUBE 348
#define CURRENT_P 349
#define CURRENT_CATALOG 350
#define CURRENT_DATE 351
#define CURRENT_ROLE 352
#define CURRENT_SCHEMA 353
#define CURRENT_TIME 354
#define CURRENT_TIMESTAMP 355
#define CURRENT_USER 356
#define CURSOR 357
#define CYCLE 358
#define DATA_P 359
#define DATABASE 360
#define DAY_P 361
#define DEALLOCATE 362
#define DEC 363
#define DECIMAL_P 364
#define DECLARE 365
#define DEFAULT 366
#define DEFAULTS 367
#define DEFERRABLE 368
#define DEFERRED 369
#define DEFINER 370
#define DELETE_P 371
#define DELIMITER 372
#define DELIMITERS 373
#define DEPENDS 374
#define DESC_P 375
#define DETACH 376
#define DICTIONARY 377
#define DISABLE_P 378
#define DISCARD 379
#define DISTINCT 380
#define DO 381
#define DOCUMENT_P 382
#define DOMAIN_P 383
#define DOUBLE_P 384
#define DROP 385
#define EACH 386
#define ELSE 387
#define ENABLE_P 388
#define ENCODING 389
#define ENCRYPTED 390
#define END_P 391
#define ENUM_P 392
#define ESCAPE 393
#define EVENT 394
#define EXCEPT 395
#define EXCLUDE 396
#define EXCLUDING 397
#define EXCLUSIVE 398
#define EXECUTE 399
#define EXISTS 400
#define EXPLAIN 401
#define EXTENSION 402
#define EXTERNAL 403
#define EXTRACT 404
#define FALSE_P 405
#define FAMILY 406
#define FETCH 407
#define FILTER 408
#define FIRST_P 409
#define FLOAT_P 410
#define FOLLOWING 411
#define FOR 412
#define FORCE 413
#define FOREIGN 414
#define FORWARD 415
#define FREEZE 416
#define FROM 417
#define FULL 418
#define FUNCTION 419
#define FUNCTIONS 420
#define GENERATED 421
#define GLOBAL 422
#define GRANT 423
#define GRANTED 424
#define GREATEST 425
#define GROUP_P 426
#define GROUPING 427
#define HANDLER 428
#define HAVING 429
#define HEADER_P 430
#define HOLD 431
#define HOUR_P 432
#define IDENTITY_P 433
#define IF_P 434
#define ILIKE 435
#define IMMEDIATE 436
#define IMMUTABLE 437
#define IMPLICIT_P 438
#define IMPORT_P 439
#define IN_P 440
#define INCLUDING 441
#define INCREMENT 442
#define INDEX 443
#define INDEXES 444
#define INHERIT 445
#define INHERITS 446
#define INITIALLY 447
#define INLINE_P 448
#define INNER_P 449
#define INOUT 450
#define INPUT_P 451
#define INSENSITIVE 452
#define INSERT 453
#define INSTEAD 454
#define INT_P 455
#define INTEGER 456
#define INTERSECT 457
#define INTERVAL 458
#define INTO 459
#define INVOKER 460
#define IS 461
#define ISNULL 462
#define ISOLATION 463
#define JOIN 464
#define KEY 465
#define LABEL 466
#define LANGUAGE 467
#define LARGE_P 468
#define LAST_P 469
#define LATERAL_P 470
#define LEADING 471
#define LEAKPROOF 472
#define LEAST 473
#define LEFT 474
#define LEVEL 475
#define LIKE 476
#define LIMIT 477
#define LISTEN 478
#define LOAD 479
#define LOCAL 480
#define LOCALTIME 481
#define LOCALTIMESTAMP 482
#define LOCATION 483
#define LOCK_P 484
#define LOCKED 485
#define LOGGED 486
#define MAPPING 487
#define MATCH 488
#define MATERIALIZED 489
#define MAXVALUE 490
#define METHOD 491
#define MINUTE_P 492
#define MINVALUE 493
#define MODE 494
#define MONTH_P 495
#define MOVE 496
#define NAME_P 497
#define NAMES 498
#define NATIONAL 499
#define NATURAL 500
#define NCHAR 501
#define NEW 502
#define NEXT 503
#define NO 504
#define NONE 505
#define NOT 506
#define NOTHING 507
#define NOTIFY 508
#define NOTNULL 509
#define NOWAIT 510
#define NULL_P 511
#define NULLIF 512
#define NULLS_P 513
#define NUMERIC 514
#define OBJECT_P 515
#define OF 516
#define OFF 517
#define OFFSET 518
#define OIDS 519
#define OLD 520
#define ON 521
#define ONLY 522
#define OPERATOR 523
#define OPTION 524
#define OPTIONS 525
#define OR 526
#define ORDER 527
#define ORDINALITY 528
#define OUT_P 529
#define OUTER_P 530
#define OVER 531
#define OVERLAPS 532
#define OVERLAY 533
#define OVERRIDING 534
#define OWNED 535
#define OWNER 536
#define PARALLEL 537
#define PARSER 538
#define PARTIAL 539
#define PARTITION 540
#define PASSING 541
#define PASSWORD 542
#define PLACING 543
#define PLANS 544
#define POLICY 545
#define POSITION 546
#define PRAGMA_P 547
#define PRECEDING 548
#define PRECISION 549
#define PREPARE 550
#define PREPARED 551
#define PRESERVE 552
#define PRIMARY 553
#define PRIOR 554
#define PRIVILEGES 555
#define PROCEDURAL 556
#define PROCEDURE 557
#define PROGRAM 558
#define PUBLICATION 559
#define QUOTE 560
#define RANGE 561
#define READ_P 562
#define REAL 563
#define REASSIGN 564
#define RECHECK 565
#define RECURSIVE 566
#define REF 567
#define REFERENCES 568
#define REFERENCING 569
#define REFRESH 570
#define REINDEX 571
#define RELATIVE_P 572
#define RELEASE 573
#define RENAME 574
#define REPEATABLE 575
#define REPLACE 576
#define REPLICA 577
#define RESET 578
#define RESTART 579
#define RESTRICT 580
#define RETURNING 581
#define RETURNS 582
#define REVOKE 583
#define RIGHT 584
#define ROLE 585
#define ROLLBACK 586
#define ROLLUP 587
#define ROW 588
#define ROWS 589
#define RULE 590
#define SAVEPOINT 591
#define SCHEMA 592
#define SCHEMAS 593
#define SCROLL 594
#define SEARCH 595
#define SECOND_P 596
#define SECURITY 597
#define SELECT 598
#define SEQUENCE 599
#define SEQUENCES 600
#define SERIALIZABLE 601
#define SERVER 602
#define SESSION 603
#define SESSION_USER 604
#define SET 605
#define SETOF 606
#define SETS 607
#define SHARE 608
#define SHOW 609
#define SIMILAR 610
#define SIMPLE 611
#define SKIP 612
#define SMALLINT 613
#define SNAPSHOT 614
#define SOME 615
#define SQL_P 616
#define STABLE 617
#define STANDALONE_P 618
#define START 619
#define STATEMENT 620
#define STATISTICS 621
#define STDIN 622
#define STDOUT 623
#define STORAGE 624
#define STRICT_P 625
#define STRIP_P 626
#define SUBSCRIPTION 627
#define SUBSTRING 628
#define SYMMETRIC 629
#define SYSID 630
#define SYSTEM_P 631
#define TABLE 632
#define TABLES 633
#define TABLESAMPLE 634
#define TABLESPACE 635
#define TEMP 636
#define TEMPLATE 637
#define TEMPORARY 638
#define TEXT_P 639
#define THEN 640
#define TIME 641
#define TIMESTAMP 642
#define TO 643
#define TRAILING 644
#define TRANSACTION 645
#define TRANSFORM 646
#define TREAT 647
#define TRIGGER 648
#define TRIM 649
#define TRUE_P 650
#define TRUNCATE 651
#define TRUSTED 652
#define TYPE_P 653
#define TYPES_P 654
#define UNBOUNDED 655
#define UNCOMMITTED 656
#define UNENCRYPTED 657
#define UNION 658
#define UNIQUE 659
#define UNKNOWN 660
#define UNLISTEN 661
#define UNLOGGED 662
#define UNTIL 663
#define UPDATE 664
#define USER 665
#define USING 666
#define VACUUM 667
#define VALID 668
#define VALIDATE 669
#define VALIDATOR 670
#define VALUE_P 671
#define VALUES 672
#define VARCHAR 673
#define VARIADIC 674
#define VARYING 675
#define VERBOSE 676
#define VERSION_P 677
#define VIEW 678
#define VIEWS 679
#define VOLATILE 680
#define WHEN 681
#define WHERE 682
#define WHITESPACE_P 683
#define WINDOW 684
#define WITH 685
#define WITHIN 686
#define WITHOUT 687
#define WORK 688
#define WRAPPER 689
#define WRITE_P 690
#define XML_P 691
#define XMLATTRIBUTES 692
#define XMLCONCAT 693
#define XMLELEMENT 694
#define XMLEXISTS 695
#define XMLFOREST 696
#define XMLNAMESPACES 697
#define XMLPARSE 698
#define XMLPI 699
#define XMLROOT 700
#define XMLSERIALIZE 701
#define XMLTABLE 702
#define YEAR_P 703
#define YES_P 704
#define ZONE 705
#define NOT_LA 706
#define NULLS_LA 707
#define WITH_LA 708
#define POSTFIXOP 709
#define UMINUS 710




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"


/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "parser/parse_expr.hpp"
#include "utils/datetime.hpp"

#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static PGNode *makeParamRefCast(int number, int location, PGTypeName *tpname);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 171 "third_party/libpg_query/grammar/grammar.y.tmp"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1218 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1243 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  512
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   44082

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  474
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  337
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1547
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2591

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   710

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,   462,     2,     2,
     467,   468,   460,   458,   471,   459,   469,   461,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   473,   470,
     454,   456,   455,   472,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   465,     2,   466,   463,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   457,
     464
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    70,    75,    82,    87,    94,
      99,   106,   111,   118,   120,   123,   127,   130,   132,   136,
     139,   143,   145,   149,   152,   158,   162,   169,   174,   181,
     188,   195,   201,   207,   214,   224,   229,   235,   243,   250,
     255,   264,   269,   272,   277,   281,   288,   293,   296,   299,
     302,   305,   307,   310,   311,   313,   316,   319,   322,   324,
     328,   333,   336,   337,   340,   344,   347,   351,   358,   365,
     374,   381,   390,   397,   406,   413,   422,   431,   442,   451,
     462,   464,   465,   473,   475,   480,   485,   493,   496,   498,
     502,   507,   511,   512,   514,   515,   518,   522,   528,   537,
     543,   544,   550,   556,   564,   567,   568,   570,   572,   574,
     578,   581,   582,   584,   585,   587,   591,   593,   597,   599,
     603,   606,   609,   614,   620,   626,   635,   637,   638,   642,
     652,   665,   669,   670,   675,   682,   684,   687,   689,   691,
     692,   694,   697,   700,   702,   705,   708,   710,   713,   717,
     720,   723,   726,   729,   733,   737,   741,   743,   747,   749,
     750,   752,   755,   758,   761,   764,   767,   770,   773,   776,
     778,   780,   781,   791,   804,   805,   808,   810,   812,   814,
     816,   818,   820,   824,   825,   827,   830,   832,   834,   837,
     840,   844,   846,   848,   851,   854,   856,   859,   863,   869,
     872,   878,   884,   887,   891,   893,   895,   898,   901,   902,
     907,   908,   912,   917,   922,   923,   927,   930,   931,   935,
     937,   939,   941,   943,   945,   947,   949,   951,   953,   955,
     959,   963,   965,   968,   971,   974,   977,   980,   983,   984,
     988,   992,   996,   997,   999,  1002,  1004,  1007,  1010,  1013,
    1016,  1021,  1023,  1027,  1029,  1033,  1035,  1037,  1039,  1041,
    1045,  1047,  1050,  1051,  1053,  1054,  1056,  1060,  1061,  1064,
    1065,  1069,  1073,  1075,  1081,  1085,  1087,  1091,  1093,  1098,
    1104,  1110,  1117,  1121,  1129,  1134,  1146,  1148,  1152,  1155,
    1158,  1161,  1162,  1166,  1168,  1170,  1173,  1176,  1179,  1182,
    1184,  1185,  1187,  1190,  1197,  1202,  1209,  1214,  1221,  1230,
    1232,  1234,  1236,  1239,  1241,  1244,  1246,  1248,  1250,  1254,
    1258,  1262,  1266,  1269,  1272,  1274,  1278,  1280,  1282,  1284,
    1286,  1290,  1292,  1294,  1295,  1297,  1299,  1301,  1310,  1322,
    1332,  1334,  1336,  1340,  1341,  1343,  1347,  1349,  1350,  1352,
    1353,  1355,  1356,  1358,  1362,  1364,  1366,  1368,  1372,  1373,
    1376,  1379,  1380,  1383,  1384,  1386,  1387,  1389,  1391,  1393,
    1397,  1401,  1403,  1405,  1409,  1413,  1417,  1421,  1426,  1430,
    1433,  1435,  1437,  1439,  1441,  1443,  1447,  1449,  1451,  1455,
    1459,  1461,  1464,  1469,  1474,  1477,  1481,  1487,  1493,  1495,
    1497,  1507,  1517,  1519,  1522,  1527,  1532,  1537,  1540,  1543,
    1547,  1549,  1553,  1560,  1563,  1564,  1568,  1572,  1577,  1582,
    1587,  1592,  1596,  1599,  1601,  1603,  1604,  1606,  1608,  1609,
    1611,  1617,  1619,  1620,  1622,  1623,  1627,  1629,  1633,  1638,
    1642,  1644,  1646,  1647,  1650,  1653,  1654,  1657,  1660,  1662,
    1664,  1666,  1667,  1670,  1675,  1681,  1686,  1689,  1693,  1695,
    1697,  1699,  1701,  1704,  1707,  1709,  1711,  1713,  1715,  1717,
    1719,  1723,  1724,  1726,  1730,  1732,  1734,  1737,  1740,  1741,
    1743,  1747,  1749,  1750,  1752,  1755,  1759,  1762,  1767,  1770,
    1774,  1777,  1778,  1780,  1783,  1784,  1789,  1795,  1798,  1799,
    1801,  1805,  1808,  1812,  1815,  1819,  1822,  1826,  1828,  1833,
    1837,  1842,  1848,  1853,  1859,  1864,  1870,  1873,  1878,  1880,
    1882,  1883,  1885,  1890,  1896,  1901,  1902,  1905,  1908,  1911,
    1913,  1915,  1916,  1921,  1924,  1926,  1929,  1932,  1937,  1944,
    1949,  1950,  1953,  1960,  1963,  1965,  1969,  1974,  1975,  1978,
    1979,  1982,  1983,  1985,  1989,  1993,  1996,  1997,  2000,  2004,
    2010,  2017,  2020,  2024,  2028,  2033,  2034,  2036,  2038,  2040,
    2042,  2044,  2047,  2052,  2054,  2056,  2058,  2060,  2063,  2067,
    2071,  2072,  2074,  2076,  2078,  2080,  2082,  2085,  2088,  2091,
    2094,  2097,  2099,  2103,  2104,  2106,  2108,  2110,  2112,  2118,
    2121,  2123,  2125,  2127,  2129,  2134,  2136,  2139,  2142,  2144,
    2148,  2152,  2155,  2157,  2158,  2164,  2167,  2173,  2176,  2178,
    2182,  2186,  2187,  2189,  2191,  2193,  2195,  2197,  2199,  2203,
    2207,  2211,  2215,  2219,  2223,  2227,  2228,  2230,  2235,  2237,
    2241,  2245,  2251,  2254,  2257,  2261,  2265,  2269,  2273,  2277,
    2281,  2285,  2289,  2293,  2297,  2301,  2305,  2309,  2312,  2315,
    2319,  2323,  2326,  2329,  2333,  2339,  2344,  2351,  2355,  2361,
    2366,  2373,  2378,  2385,  2391,  2399,  2403,  2406,  2411,  2414,
    2418,  2422,  2427,  2431,  2436,  2440,  2445,  2451,  2458,  2465,
    2473,  2480,  2488,  2495,  2503,  2507,  2512,  2517,  2524,  2526,
    2528,  2532,  2535,  2538,  2542,  2546,  2550,  2554,  2558,  2562,
    2566,  2570,  2574,  2578,  2582,  2586,  2590,  2593,  2596,  2602,
    2609,  2616,  2624,  2626,  2628,  2631,  2634,  2639,  2641,  2643,
    2645,  2648,  2651,  2655,  2661,  2668,  2677,  2684,  2691,  2696,
    2701,  2703,  2705,  2707,  2713,  2715,  2717,  2722,  2724,  2729,
    2731,  2736,  2738,  2743,  2745,  2747,  2749,  2751,  2753,  2755,
    2762,  2767,  2772,  2777,  2782,  2789,  2795,  2801,  2807,  2812,
    2819,  2824,  2829,  2834,  2840,  2841,  2847,  2848,  2851,  2852,
    2854,  2858,  2862,  2865,  2868,  2869,  2876,  2878,  2879,  2883,
    2884,  2887,  2890,  2891,  2893,  2898,  2901,  2904,  2907,  2910,
    2913,  2918,  2922,  2928,  2930,  2932,  2934,  2936,  2938,  2940,
    2942,  2944,  2946,  2948,  2950,  2952,  2954,  2956,  2958,  2960,
    2962,  2964,  2969,  2971,  2976,  2978,  2983,  2985,  2988,  2990,
    2993,  2995,  2999,  3001,  3005,  3007,  3011,  3013,  3017,  3021,
    3023,  3027,  3031,  3032,  3034,  3036,  3038,  3040,  3042,  3044,
    3046,  3048,  3053,  3057,  3060,  3064,  3065,  3069,  3073,  3076,
    3079,  3081,  3082,  3085,  3088,  3092,  3095,  3097,  3099,  3103,
    3109,  3111,  3114,  3119,  3122,  3123,  3125,  3126,  3128,  3131,
    3134,  3137,  3141,  3147,  3149,  3150,  3152,  3155,  3156,  3159,
    3161,  3162,  3164,  3165,  3167,  3171,  3175,  3178,  3180,  3182,
    3184,  3188,  3190,  3193,  3195,  3199,  3201,  3203,  3205,  3208,
    3210,  3212,  3214,  3216,  3218,  3221,  3228,  3231,  3235,  3241,
    3248,  3250,  3252,  3254,  3256,  3258,  3260,  3262,  3264,  3266,
    3268,  3270,  3272,  3275,  3278,  3282,  3286,  3287,  3289,  3291,
    3293,  3295,  3297,  3299,  3305,  3309,  3310,  3312,  3314,  3316,
    3318,  3323,  3331,  3334,  3335,  3337,  3339,  3341,  3343,  3357,
    3374,  3376,  3379,  3380,  3382,  3383,  3385,  3386,  3389,  3390,
    3392,  3393,  3400,  3409,  3416,  3425,  3432,  3441,  3443,  3446,
    3451,  3455,  3461,  3463,  3464,  3466,  3468,  3469,  3471,  3473,
    3475,  3477,  3479,  3481,  3483,  3485,  3487,  3489,  3491,  3493,
    3497,  3499,  3501,  3503,  3505,  3507,  3509,  3512,  3514,  3516,
    3519,  3523,  3527,  3529,  3533,  3537,  3540,  3544,  3548,  3552,
    3556,  3558,  3560,  3562,  3564,  3568,  3574,  3576,  3578,  3580,
    3582,  3586,  3589,  3591,  3596,  3602,  3608,  3613,  3620,  3622,
    3624,  3626,  3628,  3630,  3632,  3633,  3635,  3639,  3641,  3642,
    3650,  3652,  3655,  3659,  3662,  3663,  3666,  3667,  3670,  3675,
    3678,  3680,  3682,  3684,  3687,  3691,  3694,  3698,  3703,  3706,
    3708,  3712,  3722,  3734,  3747,  3762,  3766,  3771,  3776,  3777,
    3785,  3796,  3799,  3803,  3804,  3809,  3811,  3813,  3815,  3817,
    3819,  3821,  3823,  3825,  3827,  3829,  3831,  3833,  3835,  3837,
    3839,  3841,  3843,  3845,  3847,  3849,  3851,  3853,  3855,  3857,
    3859,  3861,  3863,  3865,  3867,  3869,  3871,  3873,  3875,  3877,
    3879,  3881,  3883,  3885,  3887,  3889,  3891,  3893,  3895,  3897,
    3899,  3901,  3903,  3905,  3907,  3909,  3911,  3913,  3915,  3917,
    3919,  3921,  3923,  3925,  3927,  3929,  3931,  3933,  3935,  3937,
    3939,  3941,  3943,  3945,  3947,  3949,  3951,  3953,  3955,  3957,
    3959,  3961,  3963,  3965,  3967,  3969,  3971,  3973,  3975,  3977,
    3979,  3981,  3983,  3985,  3987,  3989,  3991,  3993,  3995,  3997,
    3999,  4001,  4003,  4005,  4007,  4009,  4011,  4013,  4015,  4017,
    4019,  4021,  4023,  4025,  4027,  4029,  4031,  4033,  4035,  4037,
    4039,  4041,  4043,  4045,  4047,  4049,  4051,  4053,  4055,  4057,
    4059,  4061,  4063,  4065,  4067,  4069,  4071,  4073,  4075,  4077,
    4079,  4081,  4083,  4085,  4087,  4089,  4091,  4093,  4095,  4097,
    4099,  4101,  4103,  4105,  4107,  4109,  4111,  4113,  4115,  4117,
    4119,  4121,  4123,  4125,  4127,  4129,  4131,  4133,  4135,  4137,
    4139,  4141,  4143,  4145,  4147,  4149,  4151,  4153,  4155,  4157,
    4159,  4161,  4163,  4165,  4167,  4169,  4171,  4173,  4175,  4177,
    4179,  4181,  4183,  4185,  4187,  4189,  4191,  4193,  4195,  4197,
    4199,  4201,  4203,  4205,  4207,  4209,  4211,  4213,  4215,  4217,
    4219,  4221,  4223,  4225,  4227,  4229,  4231,  4233,  4235,  4237,
    4239,  4241,  4243,  4245,  4247,  4249,  4251,  4253,  4255,  4257,
    4259,  4261,  4263,  4265,  4267,  4269,  4271,  4273,  4275,  4277,
    4279,  4281,  4283,  4285,  4287,  4289,  4291,  4293,  4295,  4297,
    4299,  4301,  4303,  4305,  4307,  4309,  4311,  4313,  4315,  4317,
    4319,  4321,  4323,  4325,  4327,  4329,  4331,  4333,  4335,  4337,
    4339,  4341,  4343,  4345,  4347,  4349,  4351,  4353,  4355,  4357,
    4359,  4361,  4363,  4365,  4367,  4369,  4371,  4373,  4375,  4377,
    4379,  4381,  4383,  4385,  4387,  4389,  4391,  4393,  4395,  4397,
    4399,  4401,  4403,  4405,  4407,  4409,  4411,  4413,  4415,  4417,
    4419,  4421,  4423,  4425,  4427,  4429,  4431,  4433,  4435,  4437,
    4439,  4441,  4443,  4445,  4447,  4449,  4451,  4453,  4455,  4457,
    4459,  4461,  4463,  4465,  4467,  4469,  4471,  4473,  4475,  4477,
    4479,  4481,  4483,  4485,  4487,  4489,  4491,  4493,  4495,  4497,
    4499,  4501,  4503,  4505,  4507,  4509,  4511,  4513,  4515,  4517,
    4519,  4521,  4523,  4525,  4527,  4529,  4531,  4533,  4535,  4537,
    4539,  4541,  4543,  4545,  4547,  4549,  4551,  4553,  4555,  4557,
    4559,  4561,  4563,  4565,  4567,  4569,  4571,  4573,  4575,  4577,
    4579,  4581,  4583,  4585,  4587,  4589,  4591,  4593,  4595,  4597,
    4599,  4601,  4603,  4605,  4607,  4609,  4611,  4613,  4615,  4617,
    4619,  4621,  4623,  4625,  4627,  4629,  4631,  4633,  4635,  4637,
    4639,  4641,  4643,  4645,  4647,  4649,  4651,  4653,  4655,  4657,
    4659,  4661,  4663,  4665,  4667,  4669,  4671,  4673
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     475,     0,    -1,   476,    -1,   476,   470,   477,    -1,   477,
      -1,   766,    -1,   515,    -1,   478,    -1,   796,    -1,   767,
      -1,   577,    -1,   804,    -1,   756,    -1,   511,    -1,   524,
      -1,   489,    -1,   792,    -1,   570,    -1,   513,    -1,   768,
      -1,   759,    -1,   492,    -1,   785,    -1,   510,    -1,   753,
      -1,   490,    -1,   594,    -1,   522,    -1,   576,    -1,   787,
      -1,   797,    -1,   779,    -1,   800,    -1,   802,    -1,    -1,
      28,   377,   647,   486,    -1,    28,   377,   179,   145,   647,
     486,    -1,    28,   188,   738,   486,    -1,    28,   188,   179,
     145,   738,   486,    -1,    28,   344,   738,   486,    -1,    28,
     344,   179,   145,   738,   486,    -1,    28,   423,   738,   486,
      -1,    28,   423,   179,   145,   738,   486,    -1,   481,    -1,
     479,   481,    -1,   350,   111,   682,    -1,   130,   111,    -1,
     324,    -1,   324,   517,   518,    -1,   350,   519,    -1,   350,
     166,   569,    -1,   485,    -1,   482,   471,   485,    -1,    22,
     549,    -1,    22,   179,   251,   145,   549,    -1,    22,    73,
     549,    -1,    22,    73,   179,   251,   145,   549,    -1,    28,
     491,   746,   480,    -1,    28,   491,   746,   130,   251,   256,
      -1,    28,   491,   746,   350,   251,   256,    -1,    28,   491,
     746,   350,   366,   521,    -1,    28,   491,   746,   350,   537,
      -1,    28,   491,   746,   323,   537,    -1,    28,   491,   746,
     350,   369,   746,    -1,    28,   491,   746,    22,   166,   569,
      35,   178,   527,    -1,    28,   491,   746,   479,    -1,    28,
     491,   746,   130,   178,    -1,    28,   491,   746,   130,   178,
     179,   145,    -1,   130,   491,   179,   145,   746,   574,    -1,
     130,   491,   746,   574,    -1,    28,   491,   746,   488,   398,
     659,   658,   484,    -1,    28,   491,   746,   487,    -1,    22,
     539,    -1,    28,    83,   740,   525,    -1,   414,    83,   740,
      -1,   130,    83,   179,   145,   740,   574,    -1,   130,    83,
     740,   574,    -1,   350,   231,    -1,   350,   407,    -1,   350,
     537,    -1,   323,   537,    -1,   487,    -1,   411,   682,    -1,
      -1,   532,    -1,   350,   532,    -1,    22,   532,    -1,   130,
     547,    -1,   483,    -1,   486,   471,   483,    -1,   270,   467,
     482,   468,    -1,   350,   104,    -1,    -1,   107,   740,    -1,
     107,   295,   740,    -1,   107,    26,    -1,   107,   295,    26,
      -1,    28,   337,   740,   319,   388,   740,    -1,    28,   377,
     647,   319,   388,   740,    -1,    28,   377,   179,   145,   647,
     319,   388,   740,    -1,    28,   344,   738,   319,   388,   740,
      -1,    28,   344,   179,   145,   738,   319,   388,   740,    -1,
      28,   423,   738,   319,   388,   740,    -1,    28,   423,   179,
     145,   738,   319,   388,   740,    -1,    28,   188,   738,   319,
     388,   740,    -1,    28,   188,   179,   145,   738,   319,   388,
     740,    -1,    28,   377,   647,   319,   491,   740,   388,   740,
      -1,    28,   377,   179,   145,   647,   319,   491,   740,   388,
     740,    -1,    28,   377,   647,   319,    83,   740,   388,   740,
      -1,    28,   377,   179,   145,   647,   319,    83,   740,   388,
     740,    -1,    73,    -1,    -1,   496,   198,   204,   494,   493,
     499,   501,    -1,   594,    -1,   279,   502,   416,   594,    -1,
     467,   506,   468,   594,    -1,   467,   506,   468,   279,   502,
     416,   594,    -1,   111,   417,    -1,   738,    -1,   738,    35,
     746,    -1,   467,   508,   468,   655,    -1,   266,    83,   740,
      -1,    -1,   599,    -1,    -1,   746,   732,    -1,   509,   456,
     682,    -1,   467,   503,   468,   456,   682,    -1,   266,    81,
     495,   126,   409,   350,   507,   655,    -1,   266,    81,   495,
     126,   252,    -1,    -1,   746,   504,   505,   612,   613,    -1,
     687,   504,   505,   612,   613,    -1,   467,   682,   468,   504,
     505,   612,   613,    -1,   326,   735,    -1,    -1,   410,    -1,
     376,    -1,   509,    -1,   503,   471,   509,    -1,    71,   748,
      -1,    -1,   748,    -1,    -1,   497,    -1,   506,   471,   497,
      -1,   498,    -1,   507,   471,   498,    -1,   500,    -1,   508,
     471,   500,    -1,   746,   732,    -1,   292,   746,    -1,   292,
     746,   456,   784,    -1,   292,   746,   467,   710,   468,    -1,
      90,   568,   344,   738,   512,    -1,    90,   568,   344,   179,
     251,   145,   738,   512,    -1,   516,    -1,    -1,   144,   740,
     514,    -1,    90,   568,   377,   806,    35,   144,   740,   514,
     805,    -1,    90,   568,   377,   179,   251,   145,   806,    35,
     144,   740,   514,   805,    -1,   467,   709,   468,    -1,    -1,
      28,   344,   738,   516,    -1,    28,   344,   179,   145,   738,
     516,    -1,   519,    -1,   516,   519,    -1,   430,    -1,   453,
      -1,    -1,     4,    -1,   458,     4,    -1,   459,     4,    -1,
     521,    -1,    35,   661,    -1,    54,   518,    -1,   103,    -1,
     249,   103,    -1,   187,   520,   518,    -1,   235,   518,    -1,
     238,   518,    -1,   249,   235,    -1,   249,   238,    -1,   280,
      53,   748,    -1,   344,   242,   748,    -1,   364,   517,   518,
      -1,   324,    -1,   324,   517,   518,    -1,    53,    -1,    -1,
     744,    -1,   458,   744,    -1,   459,   744,    -1,    18,   523,
      -1,    46,   523,    -1,   364,   523,    -1,    77,   523,    -1,
     136,   523,    -1,   331,   523,    -1,   433,    -1,   390,    -1,
      -1,    90,   568,   377,   738,   467,   556,   468,   544,   536,
      -1,    90,   568,   377,   179,   251,   145,   738,   467,   556,
     468,   544,   536,    -1,    -1,   525,   548,    -1,   563,    -1,
     810,    -1,   706,    -1,   518,    -1,   745,    -1,   250,    -1,
     467,   516,   468,    -1,    -1,   745,    -1,   249,    21,    -1,
     325,    -1,    56,    -1,   350,   256,    -1,   350,   111,    -1,
      83,   740,   531,    -1,   531,    -1,   543,    -1,    71,   748,
      -1,   251,   256,    -1,   256,    -1,   404,   555,    -1,   298,
     210,   555,    -1,    65,   467,   682,   468,   538,    -1,   111,
     683,    -1,   166,   569,    35,   178,   527,    -1,   313,   738,
     558,   566,   534,    -1,   547,   528,    -1,   266,   409,   529,
      -1,   533,    -1,   560,    -1,   533,   560,    -1,   560,   533,
      -1,    -1,   270,   467,   550,   468,    -1,    -1,   266,    77,
     130,    -1,   266,    77,   116,   334,    -1,   266,    77,   297,
     334,    -1,    -1,   467,   541,   468,    -1,   249,   190,    -1,
      -1,    83,   740,   564,    -1,   564,    -1,    76,    -1,    84,
      -1,   112,    -1,   178,    -1,   189,    -1,   366,    -1,   369,
      -1,    26,    -1,   561,    -1,   541,   471,   561,    -1,   411,
     188,   552,    -1,   113,    -1,   251,   113,    -1,   192,   114,
      -1,   192,   181,    -1,   430,   537,    -1,   430,   264,    -1,
     432,   264,    -1,    -1,   467,   551,   468,    -1,   546,   186,
     540,    -1,   546,   142,   540,    -1,    -1,   752,    -1,   251,
     113,    -1,   113,    -1,   192,   181,    -1,   192,   114,    -1,
     251,   413,    -1,   249,   190,    -1,   746,   659,   535,   559,
      -1,   532,    -1,   550,   471,   532,    -1,   554,    -1,   551,
     471,   554,    -1,   746,    -1,   549,    -1,   567,    -1,   539,
      -1,   752,   456,   526,    -1,   752,    -1,   430,   545,    -1,
      -1,   565,    -1,    -1,   746,    -1,   467,   562,   468,    -1,
      -1,   559,   530,    -1,    -1,   266,   116,   529,    -1,   752,
     456,   526,    -1,   752,    -1,   752,   469,   752,   456,   526,
      -1,   752,   469,   752,    -1,   557,    -1,   562,   471,   557,
      -1,   659,    -1,   747,   749,   462,   398,    -1,   351,   747,
     749,   462,   398,    -1,    65,   467,   682,   468,   525,    -1,
     404,   467,   562,   468,   555,   525,    -1,   404,   542,   525,
      -1,   298,   210,   467,   562,   468,   555,   525,    -1,   298,
     210,   542,   525,    -1,   159,   210,   467,   562,   468,   313,
     738,   558,   566,   534,   525,    -1,   553,    -1,   565,   471,
     553,    -1,   233,   163,    -1,   233,   284,    -1,   233,   356,
      -1,    -1,   221,   738,   546,    -1,   383,    -1,   381,    -1,
     225,   383,    -1,   225,   381,    -1,   167,   383,    -1,   167,
     381,    -1,   407,    -1,    -1,    29,    -1,    53,   111,    -1,
     130,   571,   179,   145,   573,   574,    -1,   130,   571,   573,
     574,    -1,   130,   572,   179,   145,   739,   574,    -1,   130,
     572,   739,   574,    -1,   130,   575,   740,   266,   748,   574,
      -1,   130,   575,   179,   145,   740,   266,   748,   574,    -1,
     377,    -1,   344,    -1,   423,    -1,   234,   423,    -1,   188,
      -1,   159,   377,    -1,    72,    -1,    87,    -1,   366,    -1,
     384,   340,   283,    -1,   384,   340,   122,    -1,   384,   340,
     382,    -1,   384,   340,    80,    -1,    20,   236,    -1,   139,
     393,    -1,   147,    -1,   159,   104,   434,    -1,   304,    -1,
     337,    -1,   347,    -1,   748,    -1,   573,   471,   748,    -1,
      56,    -1,   325,    -1,    -1,   290,    -1,   335,    -1,   393,
      -1,   496,   409,   793,   350,   507,   637,   794,   501,    -1,
      88,   589,   738,   558,   587,   578,   583,   592,   579,   517,
     584,    -1,    88,   467,   755,   468,   388,   583,   592,   517,
     584,    -1,   162,    -1,   388,    -1,   581,   118,   745,    -1,
      -1,   591,    -1,   580,   471,   591,    -1,   411,    -1,    -1,
      35,    -1,    -1,   303,    -1,    -1,   588,    -1,   467,   593,
     468,    -1,   776,    -1,   518,    -1,   460,    -1,   467,   580,
     468,    -1,    -1,   752,   585,    -1,   430,   264,    -1,    -1,
     588,   590,    -1,    -1,    49,    -1,    -1,    49,    -1,   264,
      -1,   161,    -1,   117,   582,   745,    -1,   256,   582,   745,
      -1,    92,    -1,   175,    -1,   305,   582,   745,    -1,   138,
     582,   745,    -1,   158,   305,   562,    -1,   158,   305,   460,
      -1,   158,   251,   256,   562,    -1,   158,   256,   562,    -1,
     134,   745,    -1,   776,    -1,   745,    -1,   367,    -1,   368,
      -1,   586,    -1,   593,   471,   586,    -1,   596,    -1,   595,
      -1,   467,   596,   468,    -1,   467,   595,   468,    -1,   598,
      -1,   597,   609,    -1,   597,   608,   629,   615,    -1,   597,
     608,   614,   630,    -1,   599,   597,    -1,   599,   597,   609,
      -1,   599,   597,   608,   629,   615,    -1,   599,   597,   608,
     614,   630,    -1,   598,    -1,   595,    -1,   343,   607,   734,
     602,   637,   655,   624,   628,   691,    -1,   343,   606,   735,
     602,   637,   655,   624,   628,   691,    -1,   636,    -1,   377,
     647,    -1,   597,   403,   605,   597,    -1,   597,   202,   605,
     597,    -1,   597,   140,   605,   597,    -1,   430,   600,    -1,
     453,   600,    -1,   430,   311,   600,    -1,   601,    -1,   600,
     471,   601,    -1,   740,   750,    35,   467,   755,   468,    -1,
     204,   603,    -1,    -1,   383,   604,   738,    -1,   381,   604,
     738,    -1,   225,   383,   604,   738,    -1,   225,   381,   604,
     738,    -1,   167,   383,   604,   738,    -1,   167,   381,   604,
     738,    -1,   407,   604,   738,    -1,   377,   738,    -1,   738,
      -1,   377,    -1,    -1,    26,    -1,   125,    -1,    -1,   125,
      -1,   125,   266,   467,   709,   468,    -1,    26,    -1,    -1,
     609,    -1,    -1,   272,    53,   610,    -1,   611,    -1,   610,
     471,   611,    -1,   682,   411,   706,   613,    -1,   682,   612,
     613,    -1,    36,    -1,   120,    -1,    -1,   452,   154,    -1,
     452,   214,    -1,    -1,   616,   617,    -1,   617,   616,    -1,
     616,    -1,   617,    -1,   614,    -1,    -1,   222,   618,    -1,
     222,   618,   471,   619,    -1,   152,   623,   620,   622,   267,
      -1,   152,   623,   622,   267,    -1,   263,   619,    -1,   263,
     620,   622,    -1,   682,    -1,    26,    -1,   682,    -1,   684,
      -1,   458,   621,    -1,   459,   621,    -1,   744,    -1,     4,
      -1,   333,    -1,   334,    -1,   154,    -1,   248,    -1,   171,
      53,   625,    -1,    -1,   626,    -1,   625,   471,   626,    -1,
     682,    -1,   627,    -1,   467,   468,    -1,   174,   682,    -1,
      -1,   631,    -1,   157,   307,   267,    -1,   629,    -1,    -1,
     632,    -1,   631,   632,    -1,   633,   634,   635,    -1,   157,
     409,    -1,   157,   249,   210,   409,    -1,   157,   353,    -1,
     157,   210,   353,    -1,   261,   737,    -1,    -1,   255,    -1,
     357,   230,    -1,    -1,   417,   467,   709,   468,    -1,   636,
     471,   467,   709,   468,    -1,   162,   638,    -1,    -1,   639,
      -1,   638,   471,   639,    -1,   647,   642,    -1,   647,   642,
     648,    -1,   650,   643,    -1,   215,   650,   643,    -1,   595,
     642,    -1,   215,   595,   642,    -1,   640,    -1,   467,   640,
     468,   641,    -1,   467,   640,   468,    -1,   639,    91,   209,
     639,    -1,   639,   644,   209,   639,   646,    -1,   639,   209,
     639,   646,    -1,   639,   245,   644,   209,   639,    -1,   639,
     245,   209,   639,    -1,    35,   746,   467,   739,   468,    -1,
      35,   746,    -1,   746,   467,   739,   468,    -1,   746,    -1,
     641,    -1,    -1,   641,    -1,    35,   467,   656,   468,    -1,
      35,   746,   467,   656,   468,    -1,   746,   467,   656,   468,
      -1,    -1,   163,   645,    -1,   219,   645,    -1,   329,   645,
      -1,   194,    -1,   275,    -1,    -1,   411,   467,   739,   468,
      -1,   266,   682,    -1,   738,    -1,   738,   460,    -1,   267,
     738,    -1,   267,   467,   738,   468,    -1,   379,   742,   467,
     709,   468,   649,    -1,   320,   467,   682,   468,    -1,    -1,
     687,   654,    -1,   334,   162,   467,   652,   468,   654,    -1,
     687,   653,    -1,   651,    -1,   652,   471,   651,    -1,    35,
     467,   656,   468,    -1,    -1,   453,   273,    -1,    -1,   427,
     682,    -1,    -1,   657,    -1,   656,   471,   657,    -1,   746,
     659,   658,    -1,    71,   748,    -1,    -1,   661,   660,    -1,
     351,   661,   660,    -1,   661,    34,   465,   744,   466,    -1,
     351,   661,    34,   465,   744,   466,    -1,   661,    34,    -1,
     351,   661,    34,    -1,   660,   465,   466,    -1,   660,   465,
     744,   466,    -1,    -1,   663,    -1,   665,    -1,   667,    -1,
     671,    -1,   677,    -1,   678,   680,    -1,   678,   467,   744,
     468,    -1,   665,    -1,   668,    -1,   672,    -1,   677,    -1,
     747,   664,    -1,   747,   749,   664,    -1,   467,   709,   468,
      -1,    -1,   200,    -1,   201,    -1,   358,    -1,    48,    -1,
     308,    -1,   155,   666,    -1,   129,   294,    -1,   109,   664,
      -1,   108,   664,    -1,   259,   664,    -1,    51,    -1,   467,
     744,   468,    -1,    -1,   669,    -1,   670,    -1,   669,    -1,
     670,    -1,    50,   676,   467,   709,   468,    -1,    50,   676,
      -1,   673,    -1,   674,    -1,   673,    -1,   674,    -1,   675,
     467,   744,   468,    -1,   675,    -1,    63,   676,    -1,    62,
     676,    -1,   418,    -1,   244,    63,   676,    -1,   244,    62,
     676,    -1,   246,   676,    -1,   420,    -1,    -1,   387,   467,
     744,   468,   679,    -1,   387,   679,    -1,   386,   467,   744,
     468,   679,    -1,   386,   679,    -1,   203,    -1,   453,   386,
     450,    -1,   432,   386,   450,    -1,    -1,   448,    -1,   240,
      -1,   106,    -1,   177,    -1,   237,    -1,   681,    -1,   448,
     388,   240,    -1,   106,   388,   177,    -1,   106,   388,   237,
      -1,   106,   388,   681,    -1,   177,   388,   237,    -1,   177,
     388,   681,    -1,   237,   388,   681,    -1,    -1,   341,    -1,
     341,   467,   744,   468,    -1,   684,    -1,   682,    11,   659,
      -1,   682,    71,   748,    -1,   682,    40,   386,   450,   682,
      -1,   458,   682,    -1,   459,   682,    -1,   682,   458,   682,
      -1,   682,   459,   682,    -1,   682,   460,   682,    -1,   682,
     461,   682,    -1,   682,   462,   682,    -1,   682,   463,   682,
      -1,   682,   454,   682,    -1,   682,   455,   682,    -1,   682,
     456,   682,    -1,   682,    15,   682,    -1,   682,    16,   682,
      -1,   682,    17,   682,    -1,   682,   705,   682,    -1,   705,
     682,    -1,   682,   705,    -1,   682,    32,   682,    -1,   682,
     271,   682,    -1,   251,   682,    -1,   451,   682,    -1,   682,
     221,   682,    -1,   682,   221,   682,   138,   682,    -1,   682,
     451,   221,   682,    -1,   682,   451,   221,   682,   138,   682,
      -1,   682,   180,   682,    -1,   682,   180,   682,   138,   682,
      -1,   682,   451,   180,   682,    -1,   682,   451,   180,   682,
     138,   682,    -1,   682,   355,   388,   682,    -1,   682,   355,
     388,   682,   138,   682,    -1,   682,   451,   355,   388,   682,
      -1,   682,   451,   355,   388,   682,   138,   682,    -1,   682,
     206,   256,    -1,   682,   207,    -1,   682,   206,   251,   256,
      -1,   682,   254,    -1,   701,   277,   701,    -1,   682,   206,
     395,    -1,   682,   206,   251,   395,    -1,   682,   206,   150,
      -1,   682,   206,   251,   150,    -1,   682,   206,   405,    -1,
     682,   206,   251,   405,    -1,   682,   206,   125,   162,   682,
      -1,   682,   206,   251,   125,   162,   682,    -1,   682,   206,
     261,   467,   712,   468,    -1,   682,   206,   251,   261,   467,
     712,   468,    -1,   682,    47,   733,   683,    32,   682,    -1,
     682,   451,    47,   733,   683,    32,   682,    -1,   682,    47,
     374,   683,    32,   682,    -1,   682,   451,    47,   374,   683,
      32,   682,    -1,   682,   185,   722,    -1,   682,   451,   185,
     722,    -1,   682,   707,   702,   595,    -1,   682,   707,   702,
     467,   682,   468,    -1,   111,    -1,   684,    -1,   683,    11,
     659,    -1,   458,   683,    -1,   459,   683,    -1,   683,   458,
     683,    -1,   683,   459,   683,    -1,   683,   460,   683,    -1,
     683,   461,   683,    -1,   683,   462,   683,    -1,   683,   463,
     683,    -1,   683,   454,   683,    -1,   683,   455,   683,    -1,
     683,   456,   683,    -1,   683,    15,   683,    -1,   683,    16,
     683,    -1,   683,    17,   683,    -1,   683,   705,   683,    -1,
     705,   683,    -1,   683,   705,    -1,   683,   206,   125,   162,
     683,    -1,   683,   206,   251,   125,   162,   683,    -1,   683,
     206,   261,   467,   712,   468,    -1,   683,   206,   251,   261,
     467,   712,   468,    -1,   728,    -1,   743,    -1,   472,   732,
      -1,    10,   732,    -1,   467,   682,   468,   732,    -1,   723,
      -1,   686,    -1,   595,    -1,   595,   731,    -1,   145,   595,
      -1,   742,   467,   468,    -1,   742,   467,   710,   608,   468,
      -1,   742,   467,   419,   711,   608,   468,    -1,   742,   467,
     710,   471,   419,   711,   608,   468,    -1,   742,   467,    26,
     710,   608,   468,    -1,   742,   467,   125,   710,   608,   468,
      -1,   742,   467,   460,   468,    -1,   685,   689,   690,   694,
      -1,   688,    -1,   685,    -1,   688,    -1,    72,   157,   467,
     682,   468,    -1,    96,    -1,    99,    -1,    99,   467,   744,
     468,    -1,   100,    -1,   100,   467,   744,   468,    -1,   226,
      -1,   226,   467,   744,   468,    -1,   227,    -1,   227,   467,
     744,   468,    -1,    97,    -1,   101,    -1,   349,    -1,   410,
      -1,    95,    -1,    98,    -1,    59,   467,   682,    35,   659,
     468,    -1,   149,   467,   713,   468,    -1,   278,   467,   715,
     468,    -1,   291,   467,   717,   468,    -1,   373,   467,   718,
     468,    -1,   392,   467,   682,    35,   659,   468,    -1,   394,
     467,    52,   721,   468,    -1,   394,   467,   216,   721,   468,
      -1,   394,   467,   389,   721,   468,    -1,   394,   467,   721,
     468,    -1,   257,   467,   682,   471,   682,   468,    -1,    70,
     467,   709,   468,    -1,   170,   467,   709,   468,    -1,   218,
     467,   709,   468,    -1,   431,   171,   467,   609,   468,    -1,
      -1,   153,   467,   427,   682,   468,    -1,    -1,   429,   692,
      -1,    -1,   693,    -1,   692,   471,   693,    -1,   746,    35,
     695,    -1,   276,   695,    -1,   276,   746,    -1,    -1,   467,
     696,   697,   608,   698,   468,    -1,   746,    -1,    -1,   285,
      53,   709,    -1,    -1,   306,   699,    -1,   334,   699,    -1,
      -1,   700,    -1,    47,   700,    32,   700,    -1,   400,   293,
      -1,   400,   156,    -1,    94,   333,    -1,   682,   293,    -1,
     682,   156,    -1,   333,   467,   709,   468,    -1,   333,   467,
     468,    -1,   467,   709,   471,   682,   468,    -1,    33,    -1,
     360,    -1,    26,    -1,     8,    -1,   704,    -1,   458,    -1,
     459,    -1,   460,    -1,   461,    -1,   462,    -1,   463,    -1,
     454,    -1,   455,    -1,   456,    -1,    15,    -1,    16,    -1,
      17,    -1,     8,    -1,   268,   467,   708,   468,    -1,   703,
      -1,   268,   467,   708,   468,    -1,   703,    -1,   268,   467,
     708,   468,    -1,   221,    -1,   451,   221,    -1,   180,    -1,
     451,   180,    -1,   703,    -1,   746,   469,   708,    -1,   682,
      -1,   709,   471,   682,    -1,   711,    -1,   710,   471,   711,
      -1,   682,    -1,   751,    13,   682,    -1,   751,    14,   682,
      -1,   659,    -1,   712,   471,   659,    -1,   714,   162,   682,
      -1,    -1,     3,    -1,   448,    -1,   240,    -1,   106,    -1,
     177,    -1,   237,    -1,   341,    -1,   745,    -1,   682,   716,
     719,   720,    -1,   682,   716,   719,    -1,   288,   682,    -1,
     683,   185,   683,    -1,    -1,   682,   719,   720,    -1,   682,
     720,   719,    -1,   682,   719,    -1,   682,   720,    -1,   709,
      -1,    -1,   162,   682,    -1,   157,   682,    -1,   682,   162,
     709,    -1,   162,   709,    -1,   709,    -1,   595,    -1,   467,
     709,   468,    -1,    58,   727,   724,   726,   136,    -1,   725,
      -1,   724,   725,    -1,   426,   682,   385,   682,    -1,   132,
     682,    -1,    -1,   682,    -1,    -1,   746,    -1,   746,   731,
      -1,   469,   741,    -1,   469,   460,    -1,   465,   682,   466,
      -1,   465,   730,   473,   730,   466,    -1,   682,    -1,    -1,
     729,    -1,   731,   729,    -1,    -1,   732,   729,    -1,    39,
      -1,    -1,   735,    -1,    -1,   736,    -1,   735,   471,   736,
      -1,   682,    35,   752,    -1,   682,     3,    -1,   682,    -1,
     460,    -1,   738,    -1,   737,   471,   738,    -1,   746,    -1,
     746,   731,    -1,   740,    -1,   739,   471,   740,    -1,   746,
      -1,   752,    -1,   747,    -1,   746,   731,    -1,   744,    -1,
       4,    -1,   745,    -1,     6,    -1,     7,    -1,   742,   745,
      -1,   742,   467,   710,   608,   468,   745,    -1,   662,   745,
      -1,   678,   745,   680,    -1,   678,   467,   744,   468,   745,
      -1,   678,   467,   472,   468,   472,   680,    -1,   395,    -1,
     150,    -1,   256,    -1,     9,    -1,     5,    -1,     3,    -1,
     807,    -1,   808,    -1,     3,    -1,   807,    -1,   809,    -1,
     746,    -1,   746,   749,    -1,   469,   741,    -1,   749,   469,
     741,    -1,   467,   739,   468,    -1,    -1,   747,    -1,     3,
      -1,   807,    -1,   808,    -1,   809,    -1,   810,    -1,   295,
     740,   754,    35,   755,    -1,   467,   712,   468,    -1,    -1,
     594,    -1,   492,    -1,   576,    -1,   792,    -1,    90,   337,
     746,   757,    -1,    90,   337,   179,   251,   145,   746,   757,
      -1,   757,   758,    -1,    -1,   524,    -1,   759,    -1,   511,
      -1,   802,    -1,    90,   765,   188,   762,   763,   266,   738,
     761,   467,   508,   468,   764,   655,    -1,    90,   765,   188,
     762,   179,   251,   145,   552,   266,   738,   761,   467,   508,
     468,   764,   655,    -1,   746,    -1,   411,   760,    -1,    -1,
      79,    -1,    -1,   552,    -1,    -1,   430,   537,    -1,    -1,
     404,    -1,    -1,    28,   377,   647,   350,   337,   740,    -1,
      28,   377,   179,   145,   647,   350,   337,   740,    -1,    28,
     344,   738,   350,   337,   740,    -1,    28,   344,   179,   145,
     738,   350,   337,   740,    -1,    28,   423,   738,   350,   337,
     740,    -1,    28,   423,   179,   145,   738,   350,   337,   740,
      -1,    66,    -1,   146,   771,    -1,   146,   775,   769,   771,
      -1,   146,   421,   771,    -1,   146,   467,   774,   468,   771,
      -1,   421,    -1,    -1,   776,    -1,   518,    -1,    -1,   594,
      -1,   492,    -1,   576,    -1,   792,    -1,   804,    -1,     3,
      -1,   807,    -1,   808,    -1,   809,    -1,   772,    -1,   745,
      -1,   777,    -1,   774,   471,   777,    -1,    31,    -1,    30,
      -1,   395,    -1,   150,    -1,   266,    -1,   773,    -1,   778,
     770,    -1,   772,    -1,   775,    -1,   350,   780,    -1,   350,
     225,   780,    -1,   350,   348,   780,    -1,   781,    -1,   801,
     162,    94,    -1,   386,   450,   783,    -1,   337,   745,    -1,
     801,   388,   784,    -1,   801,   456,   784,    -1,   801,   388,
     111,    -1,   801,   456,   111,    -1,   776,    -1,   518,    -1,
     745,    -1,     3,    -1,   678,   745,   680,    -1,   678,   467,
     744,   468,   745,    -1,   518,    -1,   111,    -1,   225,    -1,
     782,    -1,   784,   471,   782,    -1,   224,   786,    -1,   745,
      -1,   412,   789,   791,   769,    -1,   412,   789,   791,   769,
     738,    -1,   412,   789,   791,   769,   796,    -1,   412,   467,
     790,   468,    -1,   412,   467,   790,   468,   738,   750,    -1,
     775,    -1,   421,    -1,   161,    -1,   163,    -1,     3,    -1,
     163,    -1,    -1,   788,    -1,   790,   471,   788,    -1,   161,
      -1,    -1,   496,   116,   162,   793,   795,   794,   501,    -1,
     647,    -1,   647,   746,    -1,   647,    35,   746,    -1,   427,
     682,    -1,    -1,   411,   638,    -1,    -1,   775,   769,    -1,
     775,   769,   738,   750,    -1,   323,   799,    -1,   801,    -1,
      26,    -1,   798,    -1,   386,   450,    -1,   390,   208,   220,
      -1,   354,   801,    -1,   354,   386,   450,    -1,   354,   390,
     208,   220,    -1,   354,    26,    -1,   746,    -1,   801,   469,
     746,    -1,    90,   568,   423,   738,   558,   764,    35,   594,
     803,    -1,    90,   271,   321,   568,   423,   738,   558,   764,
      35,   594,   803,    -1,    90,   568,   311,   423,   738,   467,
     562,   468,   764,    35,   594,   803,    -1,    90,   271,   321,
     568,   311,   423,   738,   467,   562,   468,   764,    35,   594,
     803,    -1,   430,    65,   269,    -1,   430,    57,    65,   269,
      -1,   430,   225,    65,   269,    -1,    -1,    90,   568,   377,
     806,    35,   594,   805,    -1,    90,   568,   377,   179,   251,
     145,   806,    35,   594,   805,    -1,   430,   104,    -1,   430,
     249,   104,    -1,    -1,   738,   558,   544,   536,    -1,    18,
      -1,    19,    -1,    20,    -1,    21,    -1,    22,    -1,    23,
      -1,    24,    -1,    25,    -1,    27,    -1,    28,    -1,    29,
      -1,    37,    -1,    38,    -1,    40,    -1,    41,    -1,    42,
      -1,    44,    -1,    45,    -1,    46,    -1,    53,    -1,    54,
      -1,    55,    -1,    56,    -1,    57,    -1,    60,    -1,    61,
      -1,    64,    -1,    66,    -1,    67,    -1,    68,    -1,    69,
      -1,    74,    -1,    75,    -1,    76,    -1,    77,    -1,    78,
      -1,    80,    -1,    81,    -1,    82,    -1,    84,    -1,    85,
      -1,    86,    -1,    87,    -1,    88,    -1,    89,    -1,    92,
      -1,    93,    -1,    94,    -1,   102,    -1,   103,    -1,   104,
      -1,   105,    -1,   106,    -1,   107,    -1,   110,    -1,   112,
      -1,   114,    -1,   115,    -1,   116,    -1,   117,    -1,   118,
      -1,   119,    -1,   121,    -1,   122,    -1,   123,    -1,   124,
      -1,   127,    -1,   128,    -1,   129,    -1,   130,    -1,   131,
      -1,   133,    -1,   134,    -1,   135,    -1,   137,    -1,   138,
      -1,   139,    -1,   141,    -1,   142,    -1,   143,    -1,   144,
      -1,   146,    -1,   147,    -1,   148,    -1,   151,    -1,   153,
      -1,   154,    -1,   156,    -1,   158,    -1,   160,    -1,   164,
      -1,   165,    -1,   166,    -1,   167,    -1,   169,    -1,   173,
      -1,   175,    -1,   176,    -1,   177,    -1,   178,    -1,   179,
      -1,   181,    -1,   182,    -1,   183,    -1,   184,    -1,   186,
      -1,   187,    -1,   188,    -1,   189,    -1,   190,    -1,   191,
      -1,   193,    -1,   196,    -1,   197,    -1,   198,    -1,   199,
      -1,   205,    -1,   208,    -1,   210,    -1,   211,    -1,   212,
      -1,   213,    -1,   214,    -1,   217,    -1,   220,    -1,   223,
      -1,   224,    -1,   225,    -1,   228,    -1,   229,    -1,   230,
      -1,   231,    -1,   232,    -1,   233,    -1,   234,    -1,   235,
      -1,   236,    -1,   237,    -1,   238,    -1,   239,    -1,   240,
      -1,   241,    -1,   242,    -1,   243,    -1,   247,    -1,   248,
      -1,   249,    -1,   252,    -1,   253,    -1,   255,    -1,   258,
      -1,   260,    -1,   261,    -1,   262,    -1,   264,    -1,   265,
      -1,   268,    -1,   269,    -1,   270,    -1,   273,    -1,   276,
      -1,   279,    -1,   280,    -1,   281,    -1,   282,    -1,   283,
      -1,   284,    -1,   285,    -1,   286,    -1,   287,    -1,   289,
      -1,   290,    -1,   292,    -1,   293,    -1,   295,    -1,   296,
      -1,   297,    -1,   299,    -1,   300,    -1,   301,    -1,   302,
      -1,   303,    -1,   304,    -1,   305,    -1,   306,    -1,   307,
      -1,   309,    -1,   310,    -1,   311,    -1,   312,    -1,   314,
      -1,   315,    -1,   316,    -1,   317,    -1,   318,    -1,   319,
      -1,   320,    -1,   321,    -1,   322,    -1,   323,    -1,   324,
      -1,   325,    -1,   327,    -1,   328,    -1,   330,    -1,   331,
      -1,   332,    -1,   334,    -1,   335,    -1,   336,    -1,   337,
      -1,   338,    -1,   339,    -1,   340,    -1,   341,    -1,   342,
      -1,   344,    -1,   345,    -1,   346,    -1,   347,    -1,   348,
      -1,   350,    -1,   352,    -1,   353,    -1,   354,    -1,   356,
      -1,   357,    -1,   359,    -1,   361,    -1,   362,    -1,   363,
      -1,   364,    -1,   365,    -1,   366,    -1,   367,    -1,   368,
      -1,   369,    -1,   370,    -1,   371,    -1,   372,    -1,   375,
      -1,   376,    -1,   378,    -1,   380,    -1,   381,    -1,   382,
      -1,   383,    -1,   384,    -1,   390,    -1,   391,    -1,   393,
      -1,   396,    -1,   397,    -1,   398,    -1,   399,    -1,   400,
      -1,   401,    -1,   402,    -1,   405,    -1,   406,    -1,   407,
      -1,   408,    -1,   409,    -1,   412,    -1,   413,    -1,   414,
      -1,   415,    -1,   416,    -1,   420,    -1,   422,    -1,   423,
      -1,   424,    -1,   425,    -1,   428,    -1,   431,    -1,   432,
      -1,   433,    -1,   434,    -1,   435,    -1,   436,    -1,   448,
      -1,   449,    -1,   450,    -1,    47,    -1,    48,    -1,    50,
      -1,    51,    -1,    62,    -1,    63,    -1,    70,    -1,   108,
      -1,   109,    -1,   145,    -1,   149,    -1,   155,    -1,   170,
      -1,   172,    -1,   195,    -1,   200,    -1,   201,    -1,   203,
      -1,   218,    -1,   244,    -1,   246,    -1,   250,    -1,   257,
      -1,   259,    -1,   274,    -1,   278,    -1,   291,    -1,   294,
      -1,   308,    -1,   333,    -1,   351,    -1,   358,    -1,   373,
      -1,   386,    -1,   387,    -1,   392,    -1,   394,    -1,   417,
      -1,   418,    -1,   437,    -1,   438,    -1,   439,    -1,   440,
      -1,   441,    -1,   442,    -1,   443,    -1,   444,    -1,   445,
      -1,   446,    -1,   447,    -1,    43,    -1,    49,    -1,    72,
      -1,    79,    -1,    91,    -1,    98,    -1,   161,    -1,   163,
      -1,   180,    -1,   194,    -1,   206,    -1,   207,    -1,   209,
      -1,   219,    -1,   221,    -1,   245,    -1,   254,    -1,   275,
      -1,   277,    -1,   329,    -1,   355,    -1,   379,    -1,   421,
      -1,    26,    -1,    30,    -1,    31,    -1,    32,    -1,    33,
      -1,    34,    -1,    35,    -1,    36,    -1,    39,    -1,    52,
      -1,    58,    -1,    59,    -1,    65,    -1,    71,    -1,    73,
      -1,    83,    -1,    90,    -1,    95,    -1,    96,    -1,    97,
      -1,    99,    -1,   100,    -1,   101,    -1,   111,    -1,   113,
      -1,   120,    -1,   125,    -1,   126,    -1,   132,    -1,   136,
      -1,   140,    -1,   150,    -1,   152,    -1,   157,    -1,   159,
      -1,   162,    -1,   168,    -1,   171,    -1,   174,    -1,   185,
      -1,   192,    -1,   202,    -1,   204,    -1,   215,    -1,   216,
      -1,   222,    -1,   226,    -1,   227,    -1,   251,    -1,   256,
      -1,   263,    -1,   266,    -1,   267,    -1,   271,    -1,   272,
      -1,   288,    -1,   298,    -1,   313,    -1,   326,    -1,   343,
      -1,   349,    -1,   360,    -1,   374,    -1,   377,    -1,   385,
      -1,   388,    -1,   389,    -1,   395,    -1,   403,    -1,   404,
      -1,   410,    -1,   411,    -1,   419,    -1,   426,    -1,   427,
      -1,   429,    -1,   430,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   627,   627,   643,   655,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   694,   705,   714,   723,   732,   741,
     750,   759,   768,   781,   783,   789,   790,   795,   799,   803,
     814,   822,   826,   835,   844,   853,   862,   871,   880,   888,
     896,   905,   914,   923,   932,   949,   958,   967,   976,   986,
     999,  1014,  1023,  1031,  1046,  1054,  1064,  1074,  1081,  1088,
    1096,  1103,  1114,  1115,  1120,  1124,  1129,  1134,  1142,  1143,
    1148,  1152,  1153,  1162,  1168,  1174,  1180,  1193,  1202,  1212,
    1222,  1232,  1242,  1252,  1262,  1272,  1282,  1293,  1304,  1314,
    1327,  1328,  1338,  1351,  1357,  1364,  1370,  1377,  1387,  1391,
    1400,  1409,  1418,  1425,  1426,  1431,  1443,  1448,  1473,  1483,
    1493,  1499,  1510,  1521,  1536,  1537,  1543,  1544,  1549,  1550,
    1556,  1557,  1561,  1562,  1567,  1569,  1575,  1576,  1580,  1581,
    1586,  1602,  1609,  1617,  1636,  1646,  1659,  1660,  1669,  1676,
    1693,  1713,  1714,  1725,  1733,  1745,  1746,  1750,  1751,  1752,
    1757,  1758,  1759,  1764,  1768,  1772,  1776,  1780,  1784,  1788,
    1792,  1796,  1800,  1804,  1808,  1813,  1817,  1821,  1828,  1829,
    1833,  1834,  1835,  1839,  1846,  1852,  1858,  1865,  1872,  1882,
    1883,  1884,  1893,  1907,  1927,  1928,  1955,  1956,  1957,  1958,
    1959,  1960,  1964,  1965,  1970,  1975,  1976,  1977,  1978,  1979,
    1984,  1991,  1992,  1993,  2010,  2017,  2024,  2034,  2044,  2056,
    2065,  2074,  2093,  2100,  2105,  2107,  2109,  2111,  2114,  2119,
    2120,  2124,  2125,  2126,  2127,  2132,  2136,  2137,  2142,  2149,
    2154,  2155,  2156,  2157,  2158,  2159,  2160,  2161,  2167,  2168,
    2172,  2177,  2184,  2191,  2198,  2210,  2211,  2212,  2213,  2217,
    2222,  2223,  2224,  2229,  2234,  2235,  2236,  2237,  2238,  2239,
    2244,  2267,  2271,  2278,  2279,  2283,  2287,  2288,  2289,  2293,
    2297,  2305,  2306,  2311,  2312,  2316,  2324,  2325,  2330,  2331,
    2335,  2340,  2344,  2348,  2353,  2361,  2362,  2366,  2367,  2373,
    2384,  2397,  2411,  2425,  2439,  2453,  2476,  2480,  2487,  2491,
    2499,  2504,  2511,  2521,  2522,  2523,  2524,  2525,  2532,  2539,
    2540,  2545,  2546,  2557,  2567,  2577,  2587,  2597,  2607,  2621,
    2622,  2623,  2624,  2625,  2626,  2627,  2628,  2629,  2630,  2631,
    2632,  2633,  2638,  2639,  2640,  2641,  2642,  2643,  2644,  2649,
    2650,  2655,  2656,  2657,  2662,  2663,  2664,  2673,  2690,  2719,
    2742,  2743,  2748,  2752,  2757,  2761,  2769,  2770,  2774,  2775,
    2780,  2781,  2785,  2786,  2791,  2792,  2793,  2794,  2795,  2800,
    2808,  2812,  2817,  2818,  2823,  2827,  2832,  2836,  2840,  2844,
    2848,  2852,  2856,  2860,  2864,  2868,  2872,  2876,  2880,  2884,
    2892,  2898,  2899,  2900,  2905,  2909,  2961,  2962,  2966,  2967,
    2982,  2983,  2990,  2998,  3006,  3014,  3022,  3030,  3041,  3042,
    3069,  3083,  3098,  3099,  3118,  3122,  3126,  3143,  3150,  3157,
    3167,  3168,  3171,  3183,  3194,  3202,  3207,  3212,  3217,  3222,
    3230,  3238,  3243,  3248,  3255,  3256,  3260,  3261,  3262,  3269,
    3270,  3274,  3275,  3279,  3280,  3284,  3288,  3289,  3292,  3301,
    3312,  3313,  3314,  3317,  3318,  3319,  3323,  3324,  3325,  3326,
    3330,  3331,  3335,  3337,  3353,  3355,  3360,  3363,  3368,  3369,
    3377,  3397,  3398,  3400,  3405,  3406,  3410,  3411,  3414,  3415,
    3440,  3441,  3445,  3446,  3450,  3451,  3455,  3468,  3469,  3473,
    3474,  3478,  3479,  3483,  3484,  3488,  3499,  3500,  3501,  3502,
    3506,  3507,  3512,  3513,  3514,  3523,  3529,  3547,  3548,  3552,
    3553,  3559,  3564,  3572,  3579,  3587,  3622,  3647,  3651,  3677,
    3681,  3693,  3706,  3720,  3731,  3746,  3752,  3757,  3763,  3770,
    3771,  3779,  3783,  3787,  3793,  3800,  3805,  3806,  3807,  3808,
    3812,  3813,  3825,  3826,  3831,  3838,  3845,  3852,  3875,  3888,
    3889,  3904,  3914,  3926,  3931,  3932,  3935,  3936,  3939,  3940,
    3945,  3946,  3951,  3955,  3961,  3982,  3990,  4002,  4007,  4014,
    4019,  4025,  4030,  4039,  4041,  4044,  4048,  4049,  4050,  4051,
    4052,  4053,  4058,  4078,  4079,  4080,  4081,  4092,  4098,  4106,
    4107,  4113,  4118,  4123,  4128,  4133,  4138,  4143,  4148,  4154,
    4160,  4166,  4173,  4195,  4204,  4208,  4216,  4220,  4228,  4240,
    4261,  4265,  4271,  4275,  4288,  4296,  4306,  4308,  4310,  4312,
    4314,  4316,  4321,  4322,  4329,  4338,  4346,  4355,  4366,  4374,
    4375,  4376,  4380,  4382,  4384,  4386,  4388,  4390,  4392,  4397,
    4402,  4408,  4416,  4421,  4428,  4435,  4439,  4443,  4479,  4480,
    4482,  4490,  4505,  4507,  4509,  4511,  4513,  4515,  4517,  4519,
    4521,  4523,  4525,  4527,  4529,  4531,  4534,  4536,  4538,  4541,
    4543,  4545,  4547,  4550,  4555,  4563,  4568,  4576,  4581,  4589,
    4594,  4603,  4611,  4619,  4627,  4645,  4653,  4661,  4669,  4677,
    4693,  4701,  4709,  4717,  4725,  4733,  4741,  4745,  4749,  4753,
    4757,  4765,  4773,  4781,  4789,  4809,  4831,  4842,  4849,  4874,
    4876,  4878,  4880,  4882,  4884,  4886,  4888,  4890,  4892,  4894,
    4896,  4898,  4900,  4902,  4904,  4906,  4908,  4910,  4912,  4916,
    4920,  4924,  4938,  4939,  4940,  4952,  4967,  4979,  4981,  4983,
    4994,  5018,  5031,  5035,  5041,  5048,  5055,  5065,  5072,  5100,
    5135,  5146,  5147,  5154,  5160,  5164,  5168,  5172,  5176,  5180,
    5184,  5188,  5192,  5196,  5200,  5204,  5208,  5212,  5216,  5220,
    5222,  5226,  5235,  5240,  5247,  5262,  5269,  5273,  5277,  5281,
    5285,  5292,  5300,  5315,  5316,  5320,  5321,  5329,  5330,  5334,
    5335,  5340,  5348,  5350,  5364,  5367,  5394,  5395,  5398,  5399,
    5410,  5428,  5435,  5444,  5461,  5506,  5514,  5522,  5530,  5538,
    5559,  5560,  5561,  5564,  5565,  5566,  5569,  5570,  5573,  5574,
    5575,  5576,  5577,  5578,  5579,  5580,  5581,  5582,  5583,  5584,
    5587,  5589,  5594,  5596,  5601,  5603,  5605,  5607,  5609,  5611,
    5625,  5627,  5631,  5635,  5642,  5646,  5652,  5656,  5665,  5676,
    5677,  5681,  5685,  5692,  5693,  5694,  5695,  5696,  5697,  5698,
    5699,  5709,  5713,  5720,  5727,  5728,  5744,  5748,  5753,  5757,
    5772,  5777,  5781,  5784,  5787,  5788,  5789,  5792,  5799,  5809,
    5823,  5824,  5828,  5839,  5840,  5843,  5844,  5847,  5851,  5858,
    5862,  5866,  5874,  5885,  5886,  5890,  5891,  5895,  5896,  5899,
    5900,  5910,  5911,  5915,  5916,  5919,  5935,  5943,  5951,  5973,
    5974,  5985,  5989,  6016,  6018,  6023,  6025,  6035,  6037,  6048,
    6052,  6056,  6060,  6064,  6073,  6080,  6112,  6116,  6122,  6130,
    6142,  6146,  6150,  6156,  6157,  6173,  6174,  6175,  6180,  6181,
    6182,  6185,  6186,  6189,  6191,  6196,  6197,  6200,  6208,  6209,
    6210,  6211,  6212,  6221,  6232,  6233,  6237,  6238,  6239,  6240,
    6249,  6258,  6276,  6283,  6288,  6289,  6290,  6291,  6301,  6326,
    6355,  6359,  6360,  6365,  6366,  6371,  6372,  6376,  6377,  6382,
    6383,  6392,  6401,  6410,  6419,  6428,  6437,  6452,  6467,  6474,
    6484,  6491,  6502,  6503,  6508,  6509,  6510,  6515,  6516,  6517,
    6518,  6519,  6523,  6524,  6525,  6526,  6531,  6532,  6537,  6541,
    6549,  6550,  6555,  6556,  6557,  6563,  6568,  6576,  6577,  6589,
    6595,  6601,  6611,  6612,  6620,  6631,  6643,  6651,  6659,  6666,
    6676,  6678,  6684,  6688,  6692,  6707,  6714,  6715,  6716,  6720,
    6721,  6730,  6739,  6748,  6762,  6776,  6788,  6796,  6810,  6811,
    6812,  6813,  6814,  6827,  6828,  6833,  6834,  6838,  6839,  6848,
    6862,  6866,  6873,  6884,  6885,  6891,  6892,  6903,  6913,  6926,
    6931,  6938,  6948,  6949,  6956,  6967,  6973,  6979,  6985,  6994,
    6995,  7006,  7019,  7032,  7050,  7072,  7073,  7074,  7075,  7088,
    7101,  7118,  7119,  7120,  7125,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,
    7139,  7139,  7139,  7139,  7139,  7139,  7139,  7139,  7140,  7140,
    7140,  7140,  7140,  7140,  7140,  7140,  7140,  7140,  7140,  7140,
    7140,  7140,  7140,  7140,  7140,  7140,  7140,  7140,  7140,  7140,
    7140,  7140,  7140,  7140,  7140,  7140,  7140,  7140,  7140,  7140,
    7140,  7140,  7140,  7140,  7140,  7140,  7140,  7140,  7140,  7140,
    7140,  7140,  7140,  7140,  7140,  7140,  7140,  7140,  7141,  7141,
    7141,  7141,  7141,  7141,  7141,  7141,  7141,  7141,  7141,  7141,
    7141,  7141,  7141,  7141,  7141,  7141,  7141,  7141,  7141,  7141,
    7141,  7142,  7142,  7142,  7142,  7142,  7142,  7142,  7142,  7142,
    7142,  7142,  7142,  7142,  7142,  7142,  7142,  7142,  7142,  7142,
    7142,  7142,  7142,  7142,  7142,  7142,  7142,  7142,  7142,  7142,
    7142,  7142,  7142,  7142,  7142,  7142,  7142,  7142,  7142,  7142,
    7142,  7142,  7142,  7142,  7142,  7142,  7142,  7142,  7142,  7142,
    7142,  7142,  7142,  7142,  7142,  7142,  7142,  7142,  7142,  7142,
    7142,  7142,  7142,  7142,  7142,  7142,  7142,  7142,  7142,  7142,
    7142,  7142,  7142,  7142,  7142,  7142,  7142,  7142
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LESS_EQUALS", "GREATER_EQUALS", "NOT_EQUALS",
  "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P", "ADMIN", "AFTER",
  "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS", "ANALYSE", "ANALYZE",
  "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION", "ASSIGNMENT",
  "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION", "BACKWARD",
  "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT", "BOOLEAN_P",
  "BOTH", "BY", "CACHE", "CALLED", "CASCADE", "CASCADED", "CASE", "CAST",
  "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER", "CHARACTERISTICS",
  "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER", "COALESCE",
  "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT", "COMMENTS",
  "COMMIT", "COMMITTED", "CONCURRENTLY", "CONFIGURATION", "CONFLICT",
  "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P", "CONTINUE_P",
  "CONVERSION_P", "COPY", "COST", "CREATE_P", "CROSS", "CSV", "CUBE",
  "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE",
  "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER",
  "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P", "DEALLOCATE", "DEC",
  "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE", "DEFERRED",
  "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS", "DESC_P",
  "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD", "DISTINCT", "DO",
  "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH", "ELSE", "ENABLE_P",
  "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE", "EVENT", "EXCEPT",
  "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE", "EXISTS", "EXPLAIN",
  "EXTENSION", "EXTERNAL", "EXTRACT", "FALSE_P", "FAMILY", "FETCH",
  "FILTER", "FIRST_P", "FLOAT_P", "FOLLOWING", "FOR", "FORCE", "FOREIGN",
  "FORWARD", "FREEZE", "FROM", "FULL", "FUNCTION", "FUNCTIONS",
  "GENERATED", "GLOBAL", "GRANT", "GRANTED", "GREATEST", "GROUP_P",
  "GROUPING", "HANDLER", "HAVING", "HEADER_P", "HOLD", "HOUR_P",
  "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE", "IMMUTABLE", "IMPLICIT_P",
  "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT", "INDEX", "INDEXES",
  "INHERIT", "INHERITS", "INITIALLY", "INLINE_P", "INNER_P", "INOUT",
  "INPUT_P", "INSENSITIVE", "INSERT", "INSTEAD", "INT_P", "INTEGER",
  "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS", "ISNULL", "ISOLATION",
  "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P", "LAST_P", "LATERAL_P",
  "LEADING", "LEAKPROOF", "LEAST", "LEFT", "LEVEL", "LIKE", "LIMIT",
  "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP", "LOCATION",
  "LOCK_P", "LOCKED", "LOGGED", "MAPPING", "MATCH", "MATERIALIZED",
  "MAXVALUE", "METHOD", "MINUTE_P", "MINVALUE", "MODE", "MONTH_P", "MOVE",
  "NAME_P", "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT", "NO",
  "NONE", "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P",
  "NULLIF", "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET",
  "OIDS", "OLD", "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR",
  "ORDER", "ORDINALITY", "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY",
  "OVERRIDING", "OWNED", "OWNER", "PARALLEL", "PARSER", "PARTIAL",
  "PARTITION", "PASSING", "PASSWORD", "PLACING", "PLANS", "POLICY",
  "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE", "PREPARED",
  "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL", "PROCEDURE",
  "PROGRAM", "PUBLICATION", "QUOTE", "RANGE", "READ_P", "REAL", "REASSIGN",
  "RECHECK", "RECURSIVE", "REF", "REFERENCES", "REFERENCING", "REFRESH",
  "REINDEX", "RELATIVE_P", "RELEASE", "RENAME", "REPEATABLE", "REPLACE",
  "REPLICA", "RESET", "RESTART", "RESTRICT", "RETURNING", "RETURNS",
  "REVOKE", "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE",
  "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL", "SEARCH", "SECOND_P",
  "SECURITY", "SELECT", "SEQUENCE", "SEQUENCES", "SERIALIZABLE", "SERVER",
  "SESSION", "SESSION_USER", "SET", "SETOF", "SETS", "SHARE", "SHOW",
  "SIMILAR", "SIMPLE", "SKIP", "SMALLINT", "SNAPSHOT", "SOME", "SQL_P",
  "STABLE", "STANDALONE_P", "START", "STATEMENT", "STATISTICS", "STDIN",
  "STDOUT", "STORAGE", "STRICT_P", "STRIP_P", "SUBSCRIPTION", "SUBSTRING",
  "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES", "TABLESAMPLE",
  "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P", "THEN", "TIME",
  "TIMESTAMP", "TO", "TRAILING", "TRANSACTION", "TRANSFORM", "TREAT",
  "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED", "TYPE_P", "TYPES_P",
  "UNBOUNDED", "UNCOMMITTED", "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN",
  "UNLISTEN", "UNLOGGED", "UNTIL", "UPDATE", "USER", "USING", "VACUUM",
  "VALID", "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR",
  "VARIADIC", "VARYING", "VERBOSE", "VERSION_P", "VIEW", "VIEWS",
  "VOLATILE", "WHEN", "WHERE", "WHITESPACE_P", "WINDOW", "WITH", "WITHIN",
  "WITHOUT", "WORK", "WRAPPER", "WRITE_P", "XML_P", "XMLATTRIBUTES",
  "XMLCONCAT", "XMLELEMENT", "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES",
  "XMLPARSE", "XMLPI", "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P",
  "YES_P", "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'?'", "':'", "$accept",
  "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "RenameStmt", "opt_column", "InsertStmt",
  "insert_rest", "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list", "index_params",
  "set_target", "PragmaStmt", "CreateSeqStmt", "OptSeqOptList",
  "ExecuteStmt", "execute_param_clause", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "TransactionStmt", "opt_transaction", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "func_type", "ConstraintElem",
  "TableElementList", "key_match", "TableLikeClause", "OptTemp",
  "generated_when", "DropStmt", "drop_type_any_name", "drop_type_name",
  "any_name_list", "opt_drop_behavior", "drop_type_name_on_any_name",
  "UpdateStmt", "CopyStmt", "copy_from", "copy_delimiter",
  "copy_generic_opt_arg_list", "opt_using", "opt_as", "opt_program",
  "copy_options", "copy_generic_opt_arg", "copy_generic_opt_elem",
  "opt_oids", "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "tablesample_clause", "opt_repeatable_clause",
  "func_table", "rowsfrom_item", "rowsfrom_list", "opt_col_def_list",
  "opt_ordinality", "where_clause", "TableFuncElementList",
  "TableFuncElement", "opt_collate_clause", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "opt_interval", "interval_second",
  "a_expr", "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "row", "sub_type", "all_Op", "MathOp", "qual_Op",
  "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "func_arg_list", "func_arg_expr", "type_list", "extract_list",
  "extract_arg", "overlay_list", "overlay_placing", "position_list",
  "substr_list", "substr_from", "substr_for", "trim_list", "in_expr",
  "case_expr", "when_clause_list", "when_clause", "case_default",
  "case_arg", "columnref", "indirection_el", "opt_slice_bound",
  "indirection", "opt_indirection", "opt_asymmetric", "opt_target_list",
  "target_list", "target_el", "qualified_name_list", "qualified_name",
  "name_list", "name", "attr_name", "func_name", "AexprConst", "Iconst",
  "Sconst", "ColId", "type_function_name", "any_name", "attrs",
  "opt_name_list", "param_name", "ColLabel", "PrepareStmt",
  "prep_type_clause", "PreparableStmt", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "AlterObjectSchemaStmt",
  "CheckPointStmt", "ExplainStmt", "opt_verbose", "explain_option_arg",
  "ExplainableStmt", "NonReservedWord", "NonReservedWord_or_Sconst",
  "explain_option_list", "analyze_keyword", "opt_boolean_or_string",
  "explain_option_elem", "explain_option_name", "VariableSetStmt",
  "set_rest", "generic_set", "var_value", "zone_value", "var_list",
  "LoadStmt", "file_name", "VacuumStmt", "vacuum_option_elem", "opt_full",
  "vacuum_option_list", "opt_freeze", "DeleteStmt",
  "relation_expr_opt_alias", "where_or_current_clause", "using_clause",
  "AnalyzeStmt", "VariableResetStmt", "generic_reset", "reset_rest",
  "VariableShowStmt", "var_name", "ViewStmt", "opt_check_option",
  "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,    60,    62,    61,   709,    43,    45,
      42,    47,    37,    94,   710,    91,    93,    40,    41,    46,
      59,    44,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   474,   475,   476,   476,   477,   477,   477,   477,   477,
     477,   477,   477,   477,   477,   477,   477,   477,   477,   477,
     477,   477,   477,   477,   477,   477,   477,   477,   477,   477,
     477,   477,   477,   477,   477,   478,   478,   478,   478,   478,
     478,   478,   478,   479,   479,   480,   480,   481,   481,   481,
     481,   482,   482,   483,   483,   483,   483,   483,   483,   483,
     483,   483,   483,   483,   483,   483,   483,   483,   483,   483,
     483,   483,   483,   483,   483,   483,   483,   483,   483,   483,
     483,   483,   484,   484,   485,   485,   485,   485,   486,   486,
     487,   488,   488,   489,   489,   489,   489,   490,   490,   490,
     490,   490,   490,   490,   490,   490,   490,   490,   490,   490,
     491,   491,   492,   493,   493,   493,   493,   493,   494,   494,
     495,   495,   495,   496,   496,   497,   498,   498,   499,   499,
     499,   500,   500,   500,   501,   501,   502,   502,   503,   503,
     504,   504,   505,   505,   506,   506,   507,   507,   508,   508,
     509,   510,   510,   510,   511,   511,   512,   512,   513,   513,
     513,   514,   514,   515,   515,   516,   516,   517,   517,   517,
     518,   518,   518,   518,   519,   519,   519,   519,   519,   519,
     519,   519,   519,   519,   519,   519,   519,   519,   520,   520,
     521,   521,   521,   522,   522,   522,   522,   522,   522,   523,
     523,   523,   524,   524,   525,   525,   526,   526,   526,   526,
     526,   526,   527,   527,   528,   529,   529,   529,   529,   529,
     530,   530,   530,   530,   531,   531,   531,   531,   531,   531,
     531,   531,   532,   533,   534,   534,   534,   534,   534,   535,
     535,   536,   536,   536,   536,   537,   538,   538,   539,   539,
     540,   540,   540,   540,   540,   540,   540,   540,   541,   541,
     542,   543,   543,   543,   543,   544,   544,   544,   544,   545,
     546,   546,   546,   547,   548,   548,   548,   548,   548,   548,
     549,   550,   550,   551,   551,   552,   553,   553,   553,   554,
     554,   555,   555,   556,   556,   557,   558,   558,   559,   559,
     560,   561,   561,   561,   561,   562,   562,   563,   563,   563,
     564,   564,   564,   564,   564,   564,   565,   565,   566,   566,
     566,   566,   567,   568,   568,   568,   568,   568,   568,   568,
     568,   569,   569,   570,   570,   570,   570,   570,   570,   571,
     571,   571,   571,   571,   571,   571,   571,   571,   571,   571,
     571,   571,   572,   572,   572,   572,   572,   572,   572,   573,
     573,   574,   574,   574,   575,   575,   575,   576,   577,   577,
     578,   578,   579,   579,   580,   580,   581,   581,   582,   582,
     583,   583,   584,   584,   585,   585,   585,   585,   585,   586,
     587,   587,   588,   588,   589,   589,   590,   590,   590,   590,
     590,   590,   590,   590,   590,   590,   590,   590,   590,   590,
     591,   592,   592,   592,   593,   593,   594,   594,   595,   595,
     596,   596,   596,   596,   596,   596,   596,   596,   597,   597,
     598,   598,   598,   598,   598,   598,   598,   599,   599,   599,
     600,   600,   601,   602,   602,   603,   603,   603,   603,   603,
     603,   603,   603,   603,   604,   604,   605,   605,   605,   606,
     606,   607,   607,   608,   608,   609,   610,   610,   611,   611,
     612,   612,   612,   613,   613,   613,   614,   614,   614,   614,
     615,   615,   616,   616,   616,   616,   617,   617,   618,   618,
     619,   620,   620,   620,   621,   621,   622,   622,   623,   623,
     624,   624,   625,   625,   626,   626,   627,   628,   628,   629,
     629,   630,   630,   631,   631,   632,   633,   633,   633,   633,
     634,   634,   635,   635,   635,   636,   636,   637,   637,   638,
     638,   639,   639,   639,   639,   639,   639,   639,   639,   640,
     640,   640,   640,   640,   640,   641,   641,   641,   641,   642,
     642,   643,   643,   643,   643,   643,   644,   644,   644,   644,
     645,   645,   646,   646,   647,   647,   647,   647,   648,   649,
     649,   650,   650,   651,   652,   652,   653,   653,   654,   654,
     655,   655,   656,   656,   657,   658,   658,   659,   659,   659,
     659,   659,   659,   660,   660,   660,   661,   661,   661,   661,
     661,   661,   661,   662,   662,   662,   662,   663,   663,   664,
     664,   665,   665,   665,   665,   665,   665,   665,   665,   665,
     665,   665,   666,   666,   667,   667,   668,   668,   669,   670,
     671,   671,   672,   672,   673,   674,   675,   675,   675,   675,
     675,   675,   676,   676,   677,   677,   677,   677,   678,   679,
     679,   679,   680,   680,   680,   680,   680,   680,   680,   680,
     680,   680,   680,   680,   680,   680,   681,   681,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   683,
     683,   683,   683,   683,   683,   683,   683,   683,   683,   683,
     683,   683,   683,   683,   683,   683,   683,   683,   683,   683,
     683,   683,   684,   684,   684,   684,   684,   684,   684,   684,
     684,   684,   685,   685,   685,   685,   685,   685,   685,   686,
     686,   687,   687,   688,   688,   688,   688,   688,   688,   688,
     688,   688,   688,   688,   688,   688,   688,   688,   688,   688,
     688,   688,   688,   688,   688,   688,   688,   688,   688,   688,
     688,   688,   688,   689,   689,   690,   690,   691,   691,   692,
     692,   693,   694,   694,   694,   695,   696,   696,   697,   697,
     698,   698,   698,   699,   699,   700,   700,   700,   700,   700,
     701,   701,   701,   702,   702,   702,   703,   703,   704,   704,
     704,   704,   704,   704,   704,   704,   704,   704,   704,   704,
     705,   705,   706,   706,   707,   707,   707,   707,   707,   707,
     708,   708,   709,   709,   710,   710,   711,   711,   711,   712,
     712,   713,   713,   714,   714,   714,   714,   714,   714,   714,
     714,   715,   715,   716,   717,   717,   718,   718,   718,   718,
     718,   718,   719,   720,   721,   721,   721,   722,   722,   723,
     724,   724,   725,   726,   726,   727,   727,   728,   728,   729,
     729,   729,   729,   730,   730,   731,   731,   732,   732,   733,
     733,   734,   734,   735,   735,   736,   736,   736,   736,   737,
     737,   738,   738,   739,   739,   740,   741,   742,   742,   743,
     743,   743,   743,   743,   743,   743,   743,   743,   743,   743,
     743,   743,   743,   744,   745,   746,   746,   746,   747,   747,
     747,   748,   748,   749,   749,   750,   750,   751,   752,   752,
     752,   752,   752,   753,   754,   754,   755,   755,   755,   755,
     756,   756,   757,   757,   758,   758,   758,   758,   759,   759,
     760,   761,   761,   762,   762,   763,   763,   764,   764,   765,
     765,   766,   766,   766,   766,   766,   766,   767,   768,   768,
     768,   768,   769,   769,   770,   770,   770,   771,   771,   771,
     771,   771,   772,   772,   772,   772,   773,   773,   774,   774,
     775,   775,   776,   776,   776,   776,   777,   778,   778,   779,
     779,   779,   780,   780,   780,   780,   781,   781,   781,   781,
     782,   782,   783,   783,   783,   783,   783,   783,   783,   784,
     784,   785,   786,   787,   787,   787,   787,   787,   788,   788,
     788,   788,   788,   789,   789,   790,   790,   791,   791,   792,
     793,   793,   793,   794,   794,   795,   795,   796,   796,   797,
     798,   798,   799,   799,   799,   800,   800,   800,   800,   801,
     801,   802,   802,   802,   802,   803,   803,   803,   803,   804,
     804,   805,   805,   805,   806,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   809,   809,
     809,   809,   809,   809,   809,   809,   809,   809,   809,   809,
     809,   809,   809,   809,   809,   809,   809,   809,   809,   809,
     809,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     4,     6,     4,     6,     4,
       6,     4,     6,     1,     2,     3,     2,     1,     3,     2,
       3,     1,     3,     2,     5,     3,     6,     4,     6,     6,
       6,     5,     5,     6,     9,     4,     5,     7,     6,     4,
       8,     4,     2,     4,     3,     6,     4,     2,     2,     2,
       2,     1,     2,     0,     1,     2,     2,     2,     1,     3,
       4,     2,     0,     2,     3,     2,     3,     6,     6,     8,
       6,     8,     6,     8,     6,     8,     8,    10,     8,    10,
       1,     0,     7,     1,     4,     4,     7,     2,     1,     3,
       4,     3,     0,     1,     0,     2,     3,     5,     8,     5,
       0,     5,     5,     7,     2,     0,     1,     1,     1,     3,
       2,     0,     1,     0,     1,     3,     1,     3,     1,     3,
       2,     2,     4,     5,     5,     8,     1,     0,     3,     9,
      12,     3,     0,     4,     6,     1,     2,     1,     1,     0,
       1,     2,     2,     1,     2,     2,     1,     2,     3,     2,
       2,     2,     2,     3,     3,     3,     1,     3,     1,     0,
       1,     2,     2,     2,     2,     2,     2,     2,     2,     1,
       1,     0,     9,    12,     0,     2,     1,     1,     1,     1,
       1,     1,     3,     0,     1,     2,     1,     1,     2,     2,
       3,     1,     1,     2,     2,     1,     2,     3,     5,     2,
       5,     5,     2,     3,     1,     1,     2,     2,     0,     4,
       0,     3,     4,     4,     0,     3,     2,     0,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       3,     1,     2,     2,     2,     2,     2,     2,     0,     3,
       3,     3,     0,     1,     2,     1,     2,     2,     2,     2,
       4,     1,     3,     1,     3,     1,     1,     1,     1,     3,
       1,     2,     0,     1,     0,     1,     3,     0,     2,     0,
       3,     3,     1,     5,     3,     1,     3,     1,     4,     5,
       5,     6,     3,     7,     4,    11,     1,     3,     2,     2,
       2,     0,     3,     1,     1,     2,     2,     2,     2,     1,
       0,     1,     2,     6,     4,     6,     4,     6,     8,     1,
       1,     1,     2,     1,     2,     1,     1,     1,     3,     3,
       3,     3,     2,     2,     1,     3,     1,     1,     1,     1,
       3,     1,     1,     0,     1,     1,     1,     8,    11,     9,
       1,     1,     3,     0,     1,     3,     1,     0,     1,     0,
       1,     0,     1,     3,     1,     1,     1,     3,     0,     2,
       2,     0,     2,     0,     1,     0,     1,     1,     1,     3,
       3,     1,     1,     3,     3,     3,     3,     4,     3,     2,
       1,     1,     1,     1,     1,     3,     1,     1,     3,     3,
       1,     2,     4,     4,     2,     3,     5,     5,     1,     1,
       9,     9,     1,     2,     4,     4,     4,     2,     2,     3,
       1,     3,     6,     2,     0,     3,     3,     4,     4,     4,
       4,     3,     2,     1,     1,     0,     1,     1,     0,     1,
       5,     1,     0,     1,     0,     3,     1,     3,     4,     3,
       1,     1,     0,     2,     2,     0,     2,     2,     1,     1,
       1,     0,     2,     4,     5,     4,     2,     3,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       3,     0,     1,     3,     1,     1,     2,     2,     0,     1,
       3,     1,     0,     1,     2,     3,     2,     4,     2,     3,
       2,     0,     1,     2,     0,     4,     5,     2,     0,     1,
       3,     2,     3,     2,     3,     2,     3,     1,     4,     3,
       4,     5,     4,     5,     4,     5,     2,     4,     1,     1,
       0,     1,     4,     5,     4,     0,     2,     2,     2,     1,
       1,     0,     4,     2,     1,     2,     2,     4,     6,     4,
       0,     2,     6,     2,     1,     3,     4,     0,     2,     0,
       2,     0,     1,     3,     3,     2,     0,     2,     3,     5,
       6,     2,     3,     3,     4,     0,     1,     1,     1,     1,
       1,     2,     4,     1,     1,     1,     1,     2,     3,     3,
       0,     1,     1,     1,     1,     1,     2,     2,     2,     2,
       2,     1,     3,     0,     1,     1,     1,     1,     5,     2,
       1,     1,     1,     1,     4,     1,     2,     2,     1,     3,
       3,     2,     1,     0,     5,     2,     5,     2,     1,     3,
       3,     0,     1,     1,     1,     1,     1,     1,     3,     3,
       3,     3,     3,     3,     3,     0,     1,     4,     1,     3,
       3,     5,     2,     2,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     2,     2,     3,
       3,     2,     2,     3,     5,     4,     6,     3,     5,     4,
       6,     4,     6,     5,     7,     3,     2,     4,     2,     3,
       3,     4,     3,     4,     3,     4,     5,     6,     6,     7,
       6,     7,     6,     7,     3,     4,     4,     6,     1,     1,
       3,     2,     2,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     2,     2,     5,     6,
       6,     7,     1,     1,     2,     2,     4,     1,     1,     1,
       2,     2,     3,     5,     6,     8,     6,     6,     4,     4,
       1,     1,     1,     5,     1,     1,     4,     1,     4,     1,
       4,     1,     4,     1,     1,     1,     1,     1,     1,     6,
       4,     4,     4,     4,     6,     5,     5,     5,     4,     6,
       4,     4,     4,     5,     0,     5,     0,     2,     0,     1,
       3,     3,     2,     2,     0,     6,     1,     0,     3,     0,
       2,     2,     0,     1,     4,     2,     2,     2,     2,     2,
       4,     3,     5,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     4,     1,     4,     1,     4,     1,     2,     1,     2,
       1,     3,     1,     3,     1,     3,     1,     3,     3,     1,
       3,     3,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     4,     3,     2,     3,     0,     3,     3,     2,     2,
       1,     0,     2,     2,     3,     2,     1,     1,     3,     5,
       1,     2,     4,     2,     0,     1,     0,     1,     2,     2,
       2,     3,     5,     1,     0,     1,     2,     0,     2,     1,
       0,     1,     0,     1,     3,     3,     2,     1,     1,     1,
       3,     1,     2,     1,     3,     1,     1,     1,     2,     1,
       1,     1,     1,     1,     2,     6,     2,     3,     5,     6,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     2,     3,     3,     0,     1,     1,     1,
       1,     1,     1,     5,     3,     0,     1,     1,     1,     1,
       4,     7,     2,     0,     1,     1,     1,     1,    13,    16,
       1,     2,     0,     1,     0,     1,     0,     2,     0,     1,
       0,     6,     8,     6,     8,     6,     8,     1,     2,     4,
       3,     5,     1,     0,     1,     1,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       1,     1,     1,     1,     1,     1,     2,     1,     1,     2,
       3,     3,     1,     3,     3,     2,     3,     3,     3,     3,
       1,     1,     1,     1,     3,     5,     1,     1,     1,     1,
       3,     2,     1,     4,     5,     5,     4,     6,     1,     1,
       1,     1,     1,     1,     0,     1,     3,     1,     0,     7,
       1,     2,     3,     2,     0,     2,     0,     2,     4,     2,
       1,     1,     1,     2,     3,     2,     3,     4,     2,     1,
       3,     9,    11,    12,    14,     3,     4,     4,     0,     7,
      10,     2,     3,     0,     4,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     124,   201,     0,  1031,  1030,   201,  1007,   201,   395,   330,
       0,     0,   201,     0,   124,     0,     0,     0,     0,   201,
     462,     0,     0,   201,     0,  1074,     0,     0,     0,     0,
       0,     2,     4,     7,    15,    25,    21,     0,    23,    13,
      18,     6,    27,    14,    17,    28,    10,    26,   429,   416,
     464,   428,   123,   432,    24,    12,    20,     5,     9,    19,
    1013,    31,    22,    29,    16,     8,    30,    32,    33,    11,
     200,   199,   193,     0,     0,     0,     0,     0,   194,   196,
     394,   124,     0,     0,     0,     0,     0,   324,   323,   999,
     329,     0,     0,   955,  1115,  1116,  1117,  1118,  1119,  1120,
    1121,  1122,    95,  1123,  1124,  1125,  1126,  1127,  1128,  1129,
    1130,  1131,  1132,  1133,  1398,  1399,  1400,  1401,  1134,  1135,
    1136,  1137,  1138,  1139,  1140,  1402,  1403,  1141,  1142,  1143,
    1144,  1145,  1404,  1146,  1147,  1148,  1149,  1150,  1151,  1152,
    1153,  1154,  1155,  1156,  1157,  1158,  1159,  1160,  1161,  1162,
    1163,  1164,  1165,  1166,  1167,  1168,  1405,  1406,  1169,  1170,
    1171,  1172,  1173,  1174,  1175,  1176,  1177,  1178,  1179,  1180,
    1181,  1182,  1183,  1184,  1185,  1186,  1187,  1188,  1189,  1190,
    1191,  1192,  1193,  1194,  1195,  1407,  1196,  1197,  1198,  1408,
    1199,  1200,  1201,  1409,  1202,  1203,  1204,  1205,  1206,  1207,
    1208,  1209,  1410,  1411,  1210,  1211,  1212,  1213,  1214,  1215,
    1216,  1217,  1218,  1219,  1220,  1221,  1222,  1223,  1224,  1225,
    1226,  1412,  1227,  1228,  1229,  1230,  1413,  1414,  1415,  1231,
    1232,  1233,  1234,  1235,  1236,  1237,  1238,  1416,  1239,  1240,
    1241,  1242,  1243,  1244,  1245,  1246,  1247,  1248,  1249,  1250,
    1251,  1252,  1253,  1254,  1255,  1256,  1257,  1258,  1417,  1418,
    1259,  1260,  1261,  1419,  1262,  1263,  1264,  1420,  1265,  1421,
    1266,  1267,  1268,  1269,  1270,  1271,  1272,  1273,  1274,  1422,
    1275,  1423,  1276,  1277,  1278,  1279,  1280,  1281,  1282,  1283,
    1284,  1285,  1286,  1424,  1287,  1288,  1425,  1289,  1290,  1291,
    1292,  1293,  1294,  1295,  1296,  1297,  1298,  1299,  1300,  1426,
    1301,  1302,  1303,  1304,  1305,  1306,  1307,  1308,  1309,  1310,
    1311,  1312,  1313,  1314,  1315,  1316,  1317,  1318,  1319,  1320,
    1321,  1427,  1322,  1323,  1324,  1325,  1326,  1327,  1328,  1329,
    1330,  1331,  1332,  1333,  1334,  1335,  1336,  1428,  1337,  1338,
    1339,  1340,  1341,  1429,  1342,  1343,  1344,  1345,  1346,  1347,
    1348,  1349,  1350,  1351,  1352,  1353,  1354,  1430,  1355,  1356,
    1357,  1358,  1359,  1360,  1361,  1362,  1431,  1432,  1363,  1364,
    1433,  1365,  1434,  1366,  1367,  1368,  1369,  1370,  1371,  1372,
    1373,  1374,  1375,  1376,  1377,  1378,  1379,  1380,  1381,  1382,
    1435,  1436,  1383,  1384,  1385,  1386,  1387,  1388,  1389,  1390,
    1391,  1392,  1393,  1394,  1437,  1438,  1439,  1440,  1441,  1442,
    1443,  1444,  1445,  1446,  1447,  1395,  1396,  1397,    93,   935,
     956,   957,     0,   345,   346,     0,   354,     0,   343,     0,
     364,   356,   365,   357,   340,   358,   347,   339,     0,   366,
     341,     0,     0,     0,   197,  1289,   162,   330,   124,     0,
    1018,  1019,  1017,  1008,  1013,  1020,  1021,   954,  1062,  1061,
     151,   975,  1091,  1431,  1363,  1099,  1092,  1089,  1090,   198,
     461,   459,     0,   922,  1242,  1325,  1335,  1431,  1039,  1042,
       0,  1098,  1431,  1363,  1095,   195,     0,   433,   564,   931,
    1073,     0,  1078,     0,  1303,   437,   440,   966,   438,   429,
       0,     0,     1,   124,     0,     0,     0,   458,   458,     0,
     458,     0,   421,   429,   424,   428,     0,  1012,  1087,  1215,
       0,     0,  1215,     0,  1215,     0,  1215,     0,   977,   978,
     976,     0,   979,   297,   328,   327,   326,   325,   330,  1215,
     983,     0,     0,     0,     0,   994,    96,    94,   352,   353,
       0,   344,   342,     0,  1215,   363,   961,   359,  1215,   363,
     933,  1215,     0,     0,   158,     0,  1010,  1022,  1448,  1449,
    1450,  1451,  1452,  1453,  1454,  1455,  1456,  1457,  1458,  1459,
    1460,  1461,  1462,  1463,  1464,  1465,  1466,  1467,  1468,  1469,
    1435,  1470,  1037,     0,  1038,  1028,  1016,  1023,  1024,  1025,
     124,     0,     0,     0,     0,  1093,     0,     0,     0,   955,
     940,   942,   943,   850,   953,   917,  1399,  1400,  1401,   906,
       0,  1402,  1403,  1404,  1450,   787,   774,   783,   788,   775,
     777,   784,  1405,  1406,   728,  1183,  1407,  1408,   951,  1409,
    1410,  1413,  1414,  1415,  1416,   779,   781,  1417,  1418,     0,
     952,  1420,  1421,  1271,  1423,  1424,  1426,  1427,   785,  1429,
    1430,  1431,  1432,  1433,  1434,   950,   786,  1436,     0,     0,
       0,   928,     0,   917,   759,     0,   603,   604,   626,   627,
     605,   632,   633,   635,   606,     0,   927,   668,   804,   758,
     770,     0,     0,   757,   752,   444,   923,     0,   753,   939,
     941,   907,   937,   956,   960,   444,   921,  1040,  1045,  1041,
       0,     0,     0,     0,  1096,     0,     0,   566,   565,   914,
       0,   915,   932,  1072,  1070,  1071,  1069,  1068,  1075,     0,
    1077,  1013,   862,     0,   439,     0,     0,     0,   419,   418,
       3,     0,     0,  1080,     0,   456,   457,     0,     0,     0,
       0,     0,     0,     0,     0,   512,   478,   479,   481,   509,
     513,   521,     0,   425,     0,   966,     0,     0,   111,   111,
       0,     0,     0,     0,     0,    88,    37,    81,     0,     0,
       0,     0,   176,   189,     0,     0,     0,     0,     0,   186,
       0,     0,   169,    39,   163,   165,     0,   111,     0,    35,
       0,     0,     0,    41,     0,     0,   391,     0,     0,   980,
       0,  1215,   157,  1215,   297,     0,   297,   993,   996,   355,
     351,   349,   348,   350,     0,   361,   362,     0,   334,     0,
     962,     0,     0,   336,     0,     0,     0,     0,   124,     0,
     170,  1033,  1034,  1032,     0,     0,  1015,   173,   190,  1027,
    1036,  1026,  1035,  1014,  1009,  1051,  1050,  1059,   152,   866,
       0,   864,   937,     0,   958,   614,   643,   621,   643,   643,
     610,   610,   623,   611,   612,   648,     0,   643,   610,   615,
       0,   613,   651,   651,   638,   869,   595,   596,   597,   598,
     624,   625,   599,   630,   631,   600,   665,     0,   610,   959,
     124,  1094,  1100,     0,   755,   642,   629,   905,     0,     0,
     637,   636,     0,     0,     0,     0,     0,   619,   618,   617,
     761,   872,     0,   616,     0,     0,     0,     0,   643,   643,
     641,   691,     0,   620,     0,     0,   885,     0,   891,     0,
       0,     0,   647,     0,   645,     0,     0,   692,   672,   673,
     759,   862,     0,   754,   760,   946,     0,     0,   665,   926,
     850,     0,   847,   848,   849,     0,     0,     0,   920,     0,
     858,     0,     0,   706,   856,   708,     0,     0,     0,     0,
     844,   845,   846,   838,   839,   840,   841,   842,   843,   854,
     837,   688,     0,     0,   806,     0,   687,     0,     0,   528,
       0,   944,   908,   528,  1053,  1057,  1058,  1056,     0,  1052,
    1044,  1043,  1048,  1046,  1049,  1047,  1097,     0,   913,     0,
     968,  1471,  1472,  1473,  1474,  1475,  1476,  1477,  1478,  1479,
    1480,  1481,  1482,  1483,  1484,  1485,  1486,  1487,  1488,  1489,
    1490,  1491,  1492,  1493,  1494,  1495,  1496,  1497,  1498,  1499,
    1500,  1501,  1502,  1503,  1504,  1505,  1506,  1507,  1508,  1509,
    1510,  1511,  1512,  1513,  1514,  1515,  1516,  1517,  1518,  1519,
    1520,  1521,  1522,  1523,  1524,  1525,  1526,  1527,  1528,  1529,
    1530,  1531,  1532,  1533,  1534,  1535,  1536,  1537,  1538,  1539,
    1540,  1541,  1542,  1543,  1544,  1545,  1546,  1547,   910,   909,
     936,   969,   970,   971,   972,   916,  1066,     0,  1063,   525,
       0,   441,     0,     0,  1086,     0,   118,     0,  1081,     0,
     436,   435,   465,   466,   472,   434,   498,   499,     0,     0,
       0,     0,   518,   516,   489,   482,   488,     0,     0,   486,
       0,   490,   668,   511,   423,   476,   477,   480,   422,     0,
     514,     0,   524,   512,   481,     0,  1088,     0,     0,     0,
       0,     0,  1215,     0,     0,    72,    53,   249,     0,   110,
       0,     0,     0,     0,     0,     0,     0,    80,    77,    78,
      79,     0,     0,     0,     0,   174,   175,   188,     0,   179,
     180,   177,   181,   182,     0,     0,   167,   168,     0,     0,
       0,     0,   166,     0,     0,     0,     0,     0,     0,     0,
       0,   381,   305,     0,   295,     0,     0,     0,     0,     0,
     330,   986,   984,   982,   985,   987,     0,     0,   154,   156,
       0,   294,   268,     0,   998,  1215,   995,   285,     0,   363,
     360,   963,     0,   363,   934,     0,   363,   161,  1215,   297,
       0,  1011,  1029,   171,   191,   172,   192,     0,   153,     0,
       0,     0,   595,   591,   587,   654,   655,   656,   653,   666,
     652,     0,   601,   657,   974,     0,   607,   610,   973,     0,
     918,     0,     0,   904,   900,     0,     0,     0,     0,     0,
       0,   873,   876,   877,   878,   875,   879,   874,     0,     0,
     880,     0,     0,     0,     0,     0,   640,   639,     0,   836,
     847,   848,   849,   844,   845,   846,   838,   839,   840,   841,
     842,   843,   860,     0,     0,     0,     0,     0,     0,     0,
       0,   729,     0,     0,   831,     0,   862,   890,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   862,   896,
       0,   917,     0,     0,     0,     0,   947,   669,   683,   684,
     685,   689,   925,     0,   919,     0,     0,   670,   697,     0,
     897,   724,     0,   712,     0,   705,     0,   710,   714,   693,
       0,   690,     0,   920,   859,     0,   857,     0,   680,   681,
     682,   674,   675,   676,   677,   678,   679,   686,   835,   833,
     834,     0,     0,     0,   814,     0,     0,   709,  1208,  1242,
       0,   455,   455,   455,   443,   453,   924,     0,   581,     0,
       0,     0,     0,   762,   464,   581,     0,   665,   567,   911,
     914,   966,  1076,  1064,  1065,   863,   965,   124,     0,  1084,
       0,     0,     0,   130,   113,     0,  1082,     0,   146,   528,
       0,   917,     0,   470,   471,     0,   475,  1427,  1322,     0,
       0,     0,     0,   491,   519,     0,   510,     0,   940,   492,
     939,   493,   496,   497,   487,   520,   929,   522,     0,   515,
     427,   426,   526,     0,    38,     0,  1215,    55,     0,     0,
       0,     0,     0,     0,   204,   240,   204,    92,  1215,   363,
    1215,   363,  1119,  1184,  1336,     0,    51,    84,     0,   273,
     104,     0,   258,   302,    74,    89,    97,     0,     0,    40,
     164,   178,   183,   100,   187,   184,  1003,   185,   111,     0,
      36,     0,    98,     0,  1001,     0,     0,    42,   102,  1005,
     380,     0,   296,     0,   390,   370,   371,   381,     0,   297,
     983,     0,     0,     0,     0,     0,   288,   286,   316,     0,
     293,   287,   295,     0,     0,   244,     0,  1113,     0,     0,
       0,     0,   333,   964,   335,     0,   337,     0,     0,  1060,
     865,   867,   868,   592,   588,     0,     0,     0,     0,     0,
       0,     0,     0,   870,   608,   460,     0,     0,     0,   901,
       0,     0,   800,     0,   776,   778,   609,   790,     0,   622,
     801,   802,   780,   782,     0,   851,     0,     0,     0,   791,
     731,   732,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   747,
     746,   792,   830,     0,     0,   888,   889,   793,   650,   649,
     651,   651,     0,     0,   895,     0,     0,     0,   798,   756,
     863,   634,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   713,   707,     0,   711,   715,     0,     0,     0,   701,
       0,     0,   699,   725,   695,     0,     0,   726,     0,     0,
       0,   769,   455,   455,   455,   455,   452,   454,     0,     0,
       0,     0,  1322,     0,   550,   527,   529,   537,   550,   555,
     771,   579,   772,     0,   931,     0,   501,   464,   464,   464,
     768,     0,     0,   463,   501,     0,  1054,   913,     0,  1067,
       0,  1085,     0,   135,   117,   137,   136,     0,   144,     0,
     917,     0,   135,   119,     0,   138,     0,  1084,     0,   150,
     467,     0,   852,   475,     0,   469,   495,   494,     0,   485,
     517,   483,     0,   523,     0,     0,     0,   248,     0,     0,
       0,   204,     0,     0,   312,     0,   299,    73,     0,     0,
       0,    47,     0,    65,    57,    43,    71,     0,     0,    76,
       0,    69,    86,    87,    85,    90,     0,   232,   214,   245,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   169,   411,   306,     0,     0,
     998,   981,     0,     0,   157,   297,     0,   272,   268,     0,
     266,   265,   267,     0,  1114,   162,     0,  1109,   997,     0,
       0,   992,   363,     0,     0,     0,   593,     0,   659,   660,
     661,   662,   663,   664,     0,   658,   602,   628,     0,   903,
     899,     0,   773,   871,     0,   861,   883,   882,   730,   742,
     743,   744,   884,     0,     0,     0,   739,   740,   741,   733,
     734,   735,   736,   737,   738,   745,   893,   892,   886,   887,
     646,   644,     0,   795,   796,   797,   894,   832,   665,   948,
     671,     0,     0,   698,   898,   716,     0,     0,     0,   694,
     851,     0,     0,     0,     0,     0,   703,     0,     0,     0,
     817,   812,   813,     0,     0,     0,     0,   446,   445,   451,
     550,   555,     0,     0,   429,     0,   537,     0,   549,   535,
     548,     0,     0,   561,   559,     0,   561,     0,   561,     0,
     531,     0,   551,   533,   548,     0,   571,     0,   932,   580,
       0,   508,     0,     0,     0,     0,   763,   508,     0,   912,
     442,  1083,     0,  1079,     0,     0,     0,   125,   122,   112,
       0,     0,   147,   135,   126,     0,   468,   473,   474,   484,
     930,   105,   204,     0,     0,    54,     0,   314,   260,   292,
     275,     0,     0,     0,   205,     0,   280,     0,    46,    66,
       0,    62,     0,    91,     0,     0,     0,     0,     0,    49,
      61,     0,    44,     0,   363,   363,    52,   259,   211,  1271,
       0,   838,   839,   209,   301,   206,   307,   208,   210,   610,
     207,   304,   101,  1004,     0,    99,     0,  1002,   108,   106,
     103,  1006,   393,   373,     0,     0,  1215,     0,   998,   155,
     294,     0,   322,   244,   317,     0,  1113,  1111,     0,  1108,
       0,     0,     0,   338,     0,     0,   589,   594,   667,   902,
     789,   799,   881,     0,     0,     0,     0,   794,   949,   722,
     720,   717,     0,   718,   702,     0,     0,   700,   696,     0,
     727,   803,     0,   819,   816,   450,   449,   448,   447,   536,
     534,   938,     0,   539,   546,     0,   530,     0,   560,   556,
       0,   557,     0,     0,   558,     0,     0,   532,     0,   546,
       0,   578,   464,     0,     0,   808,   766,   767,   764,   464,
     945,   808,  1055,   134,   114,     0,   115,   145,     0,     0,
       0,     0,   139,   367,     0,   310,    56,     0,   292,     0,
     204,   277,   276,   279,   274,   278,   281,     0,     0,     0,
       0,     0,   261,     0,     0,     0,   225,     0,     0,   292,
     298,   221,   222,   331,     0,     0,     0,    58,    48,    45,
      50,    59,     0,     0,    60,    63,   586,    75,    68,   610,
     610,     0,     0,     0,     0,   369,   382,   376,   169,     0,
       0,     0,     0,   294,     0,     0,     0,  1113,     0,     0,
     202,     0,   241,     0,   159,  1112,     0,  1101,     0,   990,
     991,     0,     0,   590,   748,     0,     0,     0,   719,   723,
     721,   704,   805,     0,   464,   574,     0,   577,   538,     0,
       0,   540,     0,     0,   542,   544,     0,     0,     0,     0,
     582,     0,     0,     0,   935,     0,     0,   500,   502,   505,
     504,   507,     0,   431,     0,   430,     0,     0,     0,   148,
       0,   141,   141,     0,   127,   853,     0,   204,     0,   291,
     311,   239,     0,     0,   223,     0,   229,     0,   263,   264,
     262,   224,   292,   297,   226,   332,     0,    67,     0,    83,
     610,     0,   303,   109,   107,   414,     0,   388,   396,   401,
     379,     0,   379,     0,   398,   402,   379,   397,   379,   392,
     393,     0,   998,  1108,     0,     0,   268,   162,  1110,   257,
     250,   251,   252,   253,   254,   255,   256,   271,   270,   242,
     243,     0,     0,     0,   992,     0,   749,     0,   750,     0,
     822,   579,     0,     0,   573,     0,   547,   563,     0,   543,
     541,     0,   552,     0,   586,     0,   554,   763,   506,     0,
     807,   809,     0,   765,     0,   121,     0,   581,     0,     0,
     143,   143,   129,     0,   297,   313,     0,   283,   290,   282,
       0,     0,   220,     0,   227,   321,   213,   585,     0,    70,
       0,   308,   383,     0,   386,     0,   385,   389,   384,   378,
       0,   409,     0,     0,     0,     0,     0,     0,   368,   372,
       0,  1102,     0,  1108,   244,  1113,     0,  1105,     0,     0,
     998,   751,   818,     0,     0,     0,   572,   575,     0,   545,
       0,     0,   583,   584,   553,   503,     0,     0,   116,   141,
     120,   149,   140,   472,   142,   472,     0,   321,   269,     0,
       0,   247,   213,     0,   238,     0,    64,    82,   309,   415,
       0,   374,   410,   399,   404,     0,   408,   406,   405,   400,
     403,     0,   294,  1103,   203,   160,  1106,  1107,     0,   581,
    1398,  1162,  1370,     0,   820,   823,   821,   815,     0,   562,
     570,   810,   811,   143,   475,   475,   581,   238,   284,   289,
       0,   228,   230,   318,   319,   320,     0,   234,   231,   235,
       0,   387,     0,   407,  1108,     0,   988,     0,   827,   826,
     825,   829,   828,   576,     0,   568,   472,   132,   131,   128,
     204,   246,     0,     0,     0,   236,     0,   237,   212,   375,
    1104,   998,     0,     0,   475,   315,   217,     0,   216,     0,
     300,   233,   581,   824,     0,   133,   215,   219,   218,   989,
     569
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    30,    31,    32,    33,  1793,  1794,  1795,  1515,   785,
    2419,  1516,   786,   787,  1797,    34,    35,  1181,   460,  1453,
    1125,  2160,    37,  1748,  1458,  1752,  2289,  1983,  1747,  1754,
    2400,  2473,  1749,  1459,  2290,  1460,    38,    39,  1238,    40,
     574,    41,  1239,  1208,   865,   805,  1198,   857,    42,    72,
      43,  1784,  2044,  2486,  1807,  2580,  2190,  2191,  1517,  2537,
    2538,  1786,  1844,  1190,  2531,  1566,  2357,  1521,  1504,  2192,
    1575,  2299,  2072,  1518,  2014,  1567,  2177,  2406,  1246,  1568,
    2407,  2170,  1569,  1222,  1242,  2016,  2539,  1522,  1223,  2045,
    1177,  1570,  2484,  1571,    91,  2195,    44,   451,   452,   565,
     838,   453,   461,    46,  1557,  2218,  2490,  2219,  2430,  1551,
    2215,  2427,  2325,  1226,  2216,    82,  2339,  2491,  1825,  2326,
     462,   684,    49,    50,    51,   511,   505,   506,  1009,  1424,
    1708,   757,   482,   483,   521,  1733,  1132,  1133,  1466,  1765,
    1157,  1158,   766,   767,  1145,  1149,  1150,  1479,  1472,  1138,
    1971,  2277,  2278,  2279,  2145,  1153,  1154,   769,   770,   771,
    1162,  1489,    53,  1428,  1715,  1716,  1717,  1948,  1949,  1963,
    1959,  2129,  2264,  1718,  2137,  2555,  1719,  2255,  2256,  2374,
    1966,  1726,  2269,  2270,  2319,   895,  1274,   896,   685,   897,
    1286,   686,   933,   899,   687,   688,   689,   902,   690,   691,
     692,   693,   916,   694,   695,   952,  1282,  1283,   742,  1340,
     697,   698,   699,  1721,   700,  1004,  1414,  2283,  2390,  2391,
    1701,  1931,  2113,  2254,  2455,  2514,  2515,   701,  1411,   999,
    1000,   702,  2047,  1002,  1333,  1359,   870,   871,   907,  1308,
    1309,  1336,  1628,  1343,  1348,  1655,  1656,  1360,  1381,   703,
    1293,  1294,  1610,   918,   704,   731,  1029,   964,   914,  1376,
     715,   705,   706,  1485,   498,  2260,   570,  1109,   707,   708,
     709,   710,   711,   712,  2474,   840,   747,   873,  1519,    54,
     614,   541,    55,   819,  1233,    56,  2240,  2082,   828,  1248,
    1579,    92,    57,    58,    59,   528,   860,   463,   861,   862,
     603,    60,   866,   605,   606,    61,   488,   489,   867,  1020,
     868,    62,   469,    63,   738,   502,   739,   741,   465,   754,
    1743,  1449,    65,    66,   476,   477,    67,   490,    68,  2237,
     466,  1847,   825,   430,   431,   714,  1114
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2159
static const int yypact[] =
{
    3609,   -36,   824, -2159, -2159,   -36, -2159,   -36,    41,  1643,
   29758,  5180,   -36, 33790,   296,   333, 33790, 33790, 30206,   -36,
     248, 34238, 30654,   -36, 31102,    -9,  -174, 34686, 33790,   696,
     356,    42, -2159, -2159, -2159, -2159, -2159,   217, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,   117, -2159,
     231,   141,   496,    87, -2159, -2159, -2159, -2159, -2159, -2159,
     233, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, 35134, 33790, 35582, 31550, 36030, -2159, -2159,
   -2159,   696, 33790,   584,   735,   249, 36478, -2159, -2159, -2159,
   -2159,   345,   473, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, 31998, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159,   433, -2159, -2159,   290, -2159,    49, -2159,   272,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,   361, -2159,
   -2159, 36926, 37374, 37822, -2159, -2159,   261,   792,   596, 17740,
   -2159, -2159, -2159, -2159,   233, -2159, -2159, -2159, -2159, -2159,
     343,   294, -2159,   341,   601, -2159, -2159, -2159,   348, -2159,
   -2159,   562,  7542,  7542, 38270,   333, 38270,   419, -2159, -2159,
     240, -2159,   460,   738,   348, -2159, 18642, -2159,   423,   484,
   -2159,   198,   803,  9892, 33790,   508, -2159,   515,   508,   529,
     542,   496, -2159,  3609,   856,   840, 31102,   317,   317,  1037,
     317,   114,   842, -2159,  1421, -2159,   628, -2159, 33790,   977,
     666,   814,  1007,  4308,  1012,   701,  1020,  1092, -2159, -2159,
   -2159,   676, -2159,   723, -2159, -2159, -2159, -2159,   792,   936,
   -2159,   779, 38718, 39166, 33790,  1135, -2159, -2159, -2159, -2159,
     785, -2159, -2159,   122,  1081,    53,   771, -2159,  1105,    54,
   -2159,  1106,   990,  9892, -2159,   886, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
    -174, -2159, -2159,  -148, -2159, -2159, 24236, -2159, -2159, -2159,
     596, 24236,  9892, 43198,  1244, -2159,  1060, 33790,   826,   102,
   -2159, -2159, -2159, -2159, -2159, -2159,  1289,    90,  1293,  9892,
     859,    90,    90,   872,  1143, -2159, -2159, -2159,   121,   892,
     896, -2159,   100,   100, -2159,  1022,   910,   912, -2159,   107,
     914,  1337,  1343,   116,   920,   921,   925,   836,    90,  9892,
   -2159,   930,   100,   945,   946,   953,  1396,   959, -2159,  1413,
     965,    95,   150,   978,   979, -2159, -2159,   119,  9892,  9892,
    9892, -2159,  6602, -2159,   484,   333, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159,   987, -2159,   134,  4731, -2159,  1034, -2159,
   -2159,  1195,  9892, -2159, -2159,   -42, -2159,   138, -2159, -2159,
   -2159,   484, -2159,   132, -2159,  1272,  1009, -2159, -2159, -2159,
     166,  1390, 23340, 23788, -2159,  1269, 33790, -2159, -2159,  9892,
   22444, -2159,   484, -2159, -2159, -2159, -2159, -2159, -2159,   559,
   -2159,   233, 25280,   572,   508, 33790, 33790,  1458, -2159, -2159,
   -2159, 31102, 33790, 39614,  1145, -2159, -2159,   496,   496,  9892,
     496,   155,  1078,  8012, 10362,  1344,  1233,    99,   118,  1350,
   -2159,  1239,   114,   842,  9892,   515, 33790, 28414,   627,   788,
    1055,  1123,  1056,   511,  1441, -2159,  1071, -2159,  1159, 33790,
   43632,   163, -2159,  1515,   163,   163,   731,  1521,  1191,   200,
    1346,   -45,   407,  1071,  2171, -2159, 31102,    93,    11,  1071,
   33790,  1205,   283,  1071,  1211, 33790,  1180,   -55,  1474,  1530,
   33790,  1373,  2171,  1377,  1162,  1595,   723, -2159, 40062, -2159,
   -2159, -2159, -2159, -2159, 33790, -2159, -2159, 33790, -2159, 25726,
    1164, 33790, 33790, -2159, 33790, 33790,   582, 40510,   596, 27518,
   -2159, -2159, -2159, -2159,   866,   913, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,  1160, 25280,
     607, -2159,   769,   916, -2159, -2159,  1219, -2159,  1219,  1219,
    1169,  1169,  1173, -2159, -2159, -2159,   836,  1219,  1169, -2159,
   43632, -2159,   334,   575, -2159, -2159,  1607, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159,   818,   656,   689, -2159,
     696, -2159, -2159,  9892,   484, -2159,  1175, 25280,  1218,  9892,
   -2159, -2159,  9892,  1178,  1638,  1638,  9892, -2159, -2159, -2159,
   -2159,   871,  1638, -2159,  9892,  9892,  1638,  1638,  1219,  1219,
   -2159,  4419,  9892, -2159, 20894,  9892, 12712,  8482,  9892,  1262,
    1267,  1638, -2159,  1638, -2159,  9892,  7072,  4419,  1646,  1646,
    1374, 21350,  1183,   484,   484, -2159,  1638,    84,     0, -2159,
     131, 43198,  9892,  9892,  9892,  9892, 25726,  1275,    94, 33790,
    9892,  1197,   593, -2159,  9892, -2159,  1198,  9892,  1274,   472,
    9892,  9892,  9892,  9892,  9892,  9892,  9892,  9892,  9892, -2159,
   -2159, 14581,   135,  1495,  1519,  -101,   205, 32446,  7542,  1511,
    5662, -2159,   108,  1511, -2159, -2159, -2159, -2159,   139, -2159,
   -2159, -2159, -2159,  1160, -2159,  1160, -2159,  1206,  4990,  1202,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, 33790,   198, 29310, -2159,
    9892, -2159,   675,  1214,  1268,    27,  1647, 33790, -2159, 19092,
    1481, -2159,  1220, -2159,  5027,  1481, -2159, -2159, 13641,  1332,
    1479,  1423, -2159, -2159, -2159,  1223, 25280, 10832, 10832, -2159,
     773, 25280,   804, -2159, -2159, -2159, -2159, -2159, -2159,   288,
   -2159, 33790,    -5,  1344,   118,   683, -2159,  1125,  1225, 40958,
   33790,  1485,  1445,  1487,  -121, -2159, -2159, -2159, 43198, -2159,
   33790, 33790, 41406, 41854, 26174, 33790, 25726, -2159, -2159, -2159,
   -2159, 33790,  1138, 33790, 21891, -2159, -2159, -2159,   163, -2159,
   -2159, -2159, -2159, -2159, 33790, 33790, -2159, -2159,   163, 33790,
   33790,   163, -2159,  1167, 33790, 33790, 33790, 33790,  1221, 33790,
   33790,  1395, -2159,   720, -2159,  1435,    52,  1279, 33790, 33790,
    1168, -2159, -2159, -2159, -2159, -2159,  1241,  1561, -2159,  2171,
    1568, 28862,   737,   915,  1288,  1465, -2159, -2159,  1455,    53,
   -2159, -2159, 25726,    54, -2159,  1456,   103, -2159,  1472,   723,
    1689, -2159, -2159, -2159, -2159, -2159, -2159, 24236, -2159,  9892,
    9892,  9892,  1691,  1261,  1266,  1347,  1349,  1351, -2159,  1260,
    1353,  1638, -2159, -2159, -2159, 43198, -2159,   705, -2159,   736,
   -2159,  9892,  9892,    24, -2159, 24732,   756,  9892,  1264,  1270,
     777, -2159, -2159, -2159, -2159, -2159, -2159, -2159,  1277,  1580,
   -2159,  1278,   789,   791,  1284,  1285, -2159, -2159,  4239, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159,  1290,  1287, 24760,  1295, 12712, 12712,  6602,
    2146, -2159, 12712,  1296, -2159,   849, 24681,  1283,  1297,  1316,
    1318,  1302,  1304, 24804,  8952,  9892,  8952,  8952, 25022,  1283,
    1310, -2159,  9892,  1314,  1317,  1319, -2159, -2159,  4459,  4459,
    4459,  4419, -2159,  1334, -2159, 12712, 12712, -2159,   187,  6602,
   -2159, -2159,  1581, -2159,   833, -2159,  1324, -2159, -2159,  2683,
   20894,  2775,  9892,   109,  9892,  1197,  9892,  1405,  4459,  4459,
    4459,   273,   273,   149,   149,   149,   762,   205, -2159, -2159,
   -2159,  1328,  1330,  1333,  1528,   959,  9892, -2159,   797,   815,
   33790,  3106,  3617,  3937, -2159, -2159, -2159, 15940,  1381,  9892,
    9892,  9892,  1341, -2159,   -59,  1381,  1638,     0, -2159, -2159,
    9892,   515, -2159, -2159, -2159, 25280, -2159,   696, 15940,  1384,
    1408,   -71, 18191,  1564, -2159, 33790, -2159, 33790, -2159,   -12,
    1371, -2159,  9892, -2159, -2159,   911,  1380,  1567,  1569,  1025,
    1025,   773,  1570, -2159, -2159,  1426, -2159,  9892,   899, -2159,
     941, -2159, -2159, -2159, -2159,  1375, -2159, -2159,  1614, -2159,
   -2159, -2159, -2159,  1457,  1071,  9892,  1597, -2159,    82,  1382,
    1705,  -116,  1665, 33790, -2159,  1586, -2159,   151,  1712,   103,
    1713,   103, 25726, 25726, 25726,   853, -2159, -2159,   333, -2159,
   -2159,   863, -2159,   337, -2159, -2159, -2159,  1473,   314,  1071,
    2171, -2159, -2159, -2159, -2159, -2159, -2159, -2159,   127,   475,
    1071,  1476, -2159,  1483, -2159,  1490,   514,  1071, -2159, -2159,
   -2159,    97, -2159, 33790, -2159, -2159, -2159,  1395, 33790,   723,
   -2159,   754, 33790, 33790, 33790, 33790, -2159, -2159, -2159,  1392,
    1391, -2159, 43198,   -74,  1603,  1609, 33790,  1439,  1056,  1844,
    1735, 33790, -2159, -2159, -2159, 33790, -2159,  1736,   696, -2159,
   -2159, 25280, 25280,  1418,  1266,  1638,    80,   615,    17,  1543,
    1638,  1651,  1424, -2159, -2159, -2159,   869, 25062,  9892, -2159,
    1757, 43198, -2159, 21368, -2159, -2159, -2159, -2159,  9892, -2159,
   -2159, -2159, -2159, -2159,  9892, -2159, 20894,  9892,  1740, -2159,
    1886,  1886, 21350, 43198, 12712, 12712, 12712, 12712,   693,   945,
   12712, 12712, 12712, 12712, 12712, 12712, 12712, 12712, 12712, 14111,
     405, -2159, -2159,  9892,  9892,  1741,  1740, -2159, -2159, -2159,
    -108,  -108, 43198,  1448,  1283,  1449,  1450,  9892, -2159,   484,
   21387, -2159,  1431,   333,  9892,  2470,  2529,  9892,   875,  9892,
    1758, -2159, -2159,  1452, -2159, -2159, 43198,  9892,  1453,  3243,
   12712, 12712,  3736, -2159,  3925,  9892,  6602, -2159,  1652,  1498,
   19542, -2159,  1551,  1551,  1551,  1551, -2159, -2159, 33790, 33790,
   33790, 16390,  1767, 15489, 32894,  1459,  1339, -2159, 32894, 33342,
   -2159,  1480, -2159,  1471,   484,  9892,  1769,   -54,   -54,  1652,
   -2159,  9422,  1478, -2159,  1769,  1482, -2159, 25280,  1489, -2159,
    1491,  1459,  9892,  1618, -2159, -2159, -2159,  1533, -2159,   887,
   -2159,  1876,  1618, -2159,   889, -2159, 19092,  1384,  9892,   484,
   -2159,  1493, -2159,  1380,   128, -2159, -2159, -2159,  1697, -2159,
   -2159, -2159, 33790, -2159, 33790, 21421,  1821, -2159, 33790, 33790,
   33790, -2159, 33790,   893,   719,  1500, -2159,   719,  1799,   136,
    1056,   200,  1897,   387, -2159, -2159, -2159,  1571, 33790, -2159,
   33790, -2159, -2159, -2159, -2159, -2159, 26174, -2159, -2159, -2159,
   25726, 20445, 25726, 33790, 33790, 33790, 33790, 33790, 33790, 33790,
   33790, 33790, 33790, -2159, -2159,   407, -2159, -2159,    97,  1501,
    1288,  1530, 42302,   928,  2171,  1505,  1938, -2159,   737, 28862,
   -2159, -2159, -2159,  1898, -2159,   261,   111, -2159, -2159,   696,
   33790,  1563,   103, 33790,  1638,  1510, -2159,  1512, -2159, -2159,
   -2159, -2159, -2159, -2159,  1509, -2159, -2159, -2159,  9892, 25280,
   -2159,  1513, -2159, 25280, 21439, -2159, 25280,  1741, -2159,   430,
     430,   430,  4817,  1817,   553,  1516,   430,   430,   430,   214,
     214,    86,    86,    86,  1886,   405, 25280, 25280, -2159, -2159,
   -2159, -2159,  1514, -2159, -2159, -2159,  1283, -2159,     0, -2159,
     353,  9892,  9892,  3403, -2159, 25159,  9892, 43198,   934,  3403,
     254,  9892,  2752,  4554,  9892,  9892,  4053, 21479,  1517,  9892,
   42750, -2159, -2159, 33790, 33790, 33790, 33790, -2159, -2159, -2159,
   32894, 33342,   484,  1523, 15038,  1339,  1520, 33790, -2159, -2159,
    1524, 15940,  1775,  1718, -2159, 15940,  1718,   585,  1718,  1789,
    1623, 19992, -2159, -2159,  1536,  1732, -2159,  5662,   667, 25280,
    1956,  1836,  1544,  1546,  1548,  9892,   333,  1836,   333, -2159,
   -2159, 25280,  7542, -2159,   696,  1185, 33790,   484,    -6, -2159,
    1566, 33790, -2159,  1618, 25280, 20894, -2159, -2159, -2159, -2159,
   -2159, -2159, -2159, 33790,   938, -2159,   939,   719, -2159,  1587,
   -2159,   193,  1829,    50, -2159, 25726,  1212,   722, -2159,  1841,
    1772, -2159,   163, -2159,  9892,   722,  1774,   120, 33790, -2159,
   -2159,  1820, -2159, 43198,   103,   103, -2159, -2159, -2159,  1493,
   43632,   866,   913, -2159, -2159, -2159, -2159, -2159, -2159,   689,
   -2159,  1576, -2159, -2159,  1637, -2159,  1645, -2159, -2159, -2159,
   -2159, -2159,  1573,   105, 33790,  2000,  1786,  1575,  1288, -2159,
   28862,  1006,   518,  1609, -2159,   474,  1439, -2159,  1934,  1613,
    1778, 33790,  1578, -2159,  2011,  1582, -2159, -2159, -2159, 25280,
   -2159, -2159, -2159, 12712,  1887,  1584, 43198, -2159, -2159,  3403,
    3403, 25159,   951, -2159,  3403,  9892,  9892,  3403,  3403,  9892,
   -2159, -2159, 21497,  1771, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159,   484, 26622, 32894,  1585, 33790,  1339, 15940, -2159, -2159,
    1109, -2159, 15940,  1845, -2159, 15940, 27966, -2159, 33790,  1590,
   33790, -2159,   -59, 11302,  9892,  1631, -2159, -2159, -2159,  1652,
   -2159,  1631, -2159,  1009, -2159,   -71, -2159, -2159,  1978, 16840,
    1940,  9892, -2159, -2159,  1596,   719, -2159,  1755,  1587,  1606,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159,   998,  1608, 33790,
   33790, 12712, -2159,   722,   203,   140, -2159,  1860, 33790,  1587,
   -2159, -2159, -2159, -2159,  1963,  2042,  1933, -2159, -2159, 25280,
   -2159, -2159,  1638,  1638, -2159, -2159,  2008, -2159, -2159,   689,
     552, 20445, 33790, 33790, 25726, -2159,  1542, -2159,   407,  1962,
     999,   696,  1941, 28862,  2048,  1617, 33790,  1439,  1238,  1238,
   -2159,  1753, -2159,  1754, -2159, -2159,   634, -2159, 33790, -2159,
   -2159, 16840,   696, -2159,  4916, 12712, 43198,  1003, -2159,  3403,
    3403,  3403, -2159,  2038,  1652, -2159,  1010,  2057, -2159, 33790,
    1014, -2159,  9892,  1626, -2159, -2159, 15940,  1109,  1627,  1044,
   -2159, 43198, 33790,  1048, 43198,  1628,  6132,  1630, -2159, -2159,
   25280, 25280, 33790, -2159,  1629, -2159,  1682, 33790,  9892, -2159,
    1050,  2028,   162,   -14, 25280, -2159, 33790, -2159, 25726, -2159,
     719, -2159, 25726,  9892, -2159,   692,  4817,  2067, -2159, -2159,
   -2159, -2159,  1587,   723, -2159, -2159,  1925, -2159, 33790,  1694,
     610,  1710, -2159, -2159, -2159, -2159,  1064, 17290, -2159, -2159,
    2072,   333,  2072,   574, -2159, -2159,  2072, -2159,  2072, -2159,
    1573,   333,  1288,  1613, 33790,   696,   737,   261, -2159, -2159,
   -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159, -2159,
   -2159,  2044,  1842,  2045,  1563,  1066,  4916,  1070, -2159,  9892,
     -18,  1480, 26622,  1648, -2159,  1089, -2159, 25280, 33790, -2159,
   -2159,  9892, -2159, 33790,  2008,  1099, -2159, -2159, -2159, 11302,
    1641, -2159,  2078, -2159,   696, -2159, 21953,  1381, 16840, 33790,
   33790, 33790, -2159,  1764,   723,   719,  1112, -2159,  1661, -2159,
   21971,  1862, -2159,  1949, -2159,  1901,  1664, -2159,  9892, -2159,
    1742, -2159, -2159, 25726, -2159, 27070, -2159, -2159, -2159, -2159,
     333, -2159,   333,  1882, 33790, 22892,   333,   333, -2159, -2159,
    2107, -2159,  1676,  1613,  1609,  1439,  1878, -2159,  1880,  1678,
    1288, -2159,  1283, 11772, 11772,  1683, -2159, -2159, 33790, -2159,
    1119,  1124, -2159, -2159, -2159, -2159, 33790,  1685, -2159,  2028,
   -2159, -2159, -2159,   265, -2159,   265, 19092,  1901, -2159, 25726,
   20445,  1904,  1664,    45,  1884,  2171, -2159, 25280, -2159, -2159,
    1129, -2159, -2159, -2159, -2159, 33790,  1684, -2159,  1684, -2159,
   -2159,   696, 28862, -2159, -2159, -2159, -2159, -2159, 16840,  1381,
   13182,  1823,   106, 24694, -2159, -2159, -2159, -2159,  1137, -2159,
    1849, -2159, -2159, 33790,  1380,  1380,   298,  1884, -2159, -2159,
    1975, -2159, -2159, -2159, -2159, -2159,   206,  1905, -2159,  1906,
     176, -2159, 27070,  1684,  1613,  1141, -2159,  2141, -2159, -2159,
   -2159, -2159, -2159, -2159,  1707, -2159,   265, -2159, -2159, -2159,
   -2159, -2159,   126,   126,  2059, -2159,  1770, -2159, -2159, -2159,
   -2159,  1288, 12242,  9892,  1380,   719, -2159,  2157, -2159,   101,
   -2159, -2159,  1381, -2159, 21990, -2159, -2159, -2159, -2159, -2159,
   -2159
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2159, -2159, -2159,  1669, -2159, -2159, -2159,   390, -2159,   996,
   -2159,   379,  -405,   686, -2159, -2159, -2159,  -719,     5, -2159,
   -2159, -2159, -2159,   204,   438, -2159,  -203, -1574,    43, -2159,
   -2075, -2158, -2159,  -279, -2002, -1384, -2159,  -779,   365, -2159,
   -1763, -2159,  -532,  -768,  -598,  -800, -2159,   173, -2159,  1428,
    -777, -1450, -2020,  -281, -2159,  -360, -2159,  -100, -1449,  -332,
    -323, -2159, -1948,  -716, -2159,  1432,   -21, -2159,   709, -2159,
   -1757, -2159, -2159,   698, -2159,  -738, -2159, -2159, -1513,   376,
    -263, -1922, -1971,   664,  -527, -2159,  -319,   409, -1448, -2159,
     724, -2159,  -257, -2159,  -406, -1833, -2159, -2159, -2159,  1389,
    -537, -2159,    13, -2159, -2159, -2159, -2159, -2159, -1239,   669,
    -112, -2159,  -194, -2159, -2159, -2159, -2159,  -312,   404, -2159,
      10,   174,   -27,    28,    40,    30,    57,  1488,  1522, -2159,
    -667,   726, -2159, -2159,  -493,   -47, -2159,   772, -1471, -1702,
    -338,  1072,  1468,  1477, -2159,   761,  1102, -1021,  -969, -2159,
     510, -2159,  -143, -2159,   270,  -299,  1085, -2159,  1484, -2159,
   -2159, -2159, -2159,  -929,   802, -1643,   538, -1588, -1534,   313,
     299,  -689,    -3,    44, -2159, -2159,   544,  -114, -2159, -2159,
    -109, -1397, -1989,  -118,  -115,  -930,  1000,  -754, -2159, -2159,
    -616,  -408, -2159, -2159, -2159,   881,  1199, -2159, -2159,  1216,
    1286, -2159,   451,  1554,  -541,  -615,  -915,  -530,  3058,   948,
    -740,  -472, -2159, -1865,   614, -2159, -2159,   124, -2159,  -198,
   -2159,  -197, -2159, -2159, -2159,  -178, -1831,  1273, -2159,  -924,
   -2159,  3214,   812, -2159, -1323,  -354,  -958, -1210, -1617, -2159,
   -2159, -2159, -2159, -2159, -2159, -1309, -1468,  -215,   884, -2159,
   -2159,   988, -2159, -2159, -2159,  -678,   844,  -487,  -646,   894,
   -2159,  -474,  1281, -2159,   186,  -431,    91,  -741, -1175, -2159,
     823,   -15,     1,   917,  -445,  -873,  -717, -2159,  -687, -2159,
   -2159,  -839, -2159,   734, -2159,  -771, -2159,   -84, -2159, -2159,
   -1766, -2159, -2159, -2159, -2159,  -306, -2159,  -335,  -356, -2159,
   -2159,    31,  -599,  1442, -2159, -2159,   805, -2159,  1028, -2159,
     486, -2159, -2159, -2159,  1179, -2159, -2159, -2159,    15,  1547,
     543, -2159,  1181, -2159, -2159, -2159, -2159,   993,  -770, -2108,
      79, -1936,  -797,  1709,  -426,  -412, -1749
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1454
static const yytype_int16 yytable[] =
{
     468,   804,   510,   522,  1212,    36,   567,   863,   856,   716,
      47,   429,   732,    45,   429,    64,   816,   470,   429,   475,
    1332,   569,   475,   475,  1152,   499,   927,   928,   429,   429,
      52,   772,   843,   608,  1211,  1287,  1195,   963,  1734,  1176,
    1231,  1367,  1232,  1110,    52,   464,   943,   609,  1234,  1235,
    1260,   575,  1434,  1366,  1115,  1783,  1787,   954,  1166,  1590,
    1183,  1996,  2050,  1802,  2065,  1804,  1187,  1688,   497,  1918,
    1945,  1288,   906,  1755,   499,   429,   499,   499,   499,    69,
     524,  2073,  2076,   499,  1435,   508,   538,   550,  1216,   624,
      80,   540,   525,   624,   539,  -643,   542,  1633,  1251,  2225,
    -651,   428,   467,   602,   456,  -610,  1275,  -958,   471,   835,
     835,    52,  -623,  -938,  1833,  -958,  -958,  -417,   507,   507,
     535,  -648,  1017,   576,  -638,  2230, -1453,  1481,   803,   624,
     809,  1962,   813,  1374, -1453, -1453,  1272,  -959,  1450,   467,
    2234,  -420,   817,   467,   467,  -959,  -959,  1168,  1374,   743,
    1427,  2273,  1110,   560,   500,  -651,  1608,  -836,   610,   835,
     971,  1408,  1007,  2174,  -836,   531,  1179,   850,  1409,  1014,
     850,   467,   624,  1788,    48,   624,  1214,  1276,  1989,  1018,
     608,  1484,  2576,   765,  1960,   608,  1188,  1898,    48,   977,
    1840,  2322,  2200,  1196,   609,   970,  1199,  1200,   971,   609,
    1179,   733,   830,   509,  -169,   898,  1341,  -417,  2533,  -169,
    1815,   790,  2587,   519,  1555,  2077,   971,  2401,   519,   846,
     979,  1729,   768,  -377,  1012,  1633,   523,   977,     3,     4,
     791,  -420,  1415,  2399, -1454,  2441,  1290,  1277,  2402,  2365,
    1278,  1171,  1188,  2475,   831,   977,  2297,  2018,  1505,   906,
    1487,   761,  1723,  2310,  1861,    48,  1227,  2257,   979,   530,
    2158,   533,  2549,   537,   927,   928,   761,  2314,   543,  2008,
     761,   762,   943,  1723,   480,   864,   979,  1015,   954,   792,
    -855,  1789,  1997,  2385,   971,  1290,  1115,  -855,  2453,  1372,
    1502,  2348,  1210,   503,  2291,  1502,   608,   608,   429,  1244,
    2102,  1463,  2224,  1875,  1112,  1745,  1451,  2171,  2126,  1136,
     609,   609,  2130,   977,  2019,  1122,  2454,  2308,  1113,  1877,
     848,   763,  2562,   849,   949,  1677,     3,     4,   962,  2534,
    2004,  2007,  2006,   514,  1115,  2503,   763,  2080,   467,  1746,
     763,  1279,  1998,   755,   979,   950,  1503,  1899,  1217,   906,
    2307,  1780,  1488,  1962,    70,  1603,   512,  2588,  1279,   734,
    2078,   735,  1189,   793,   971,  2556,  1416, -1454,  1228,   885,
      20,   517, -1454,   481,  2172,  2577,  2291,   764,   836,   836,
    1173,   764,   898,  -417,  2309,  1464,   457,  2020,   557,   567,
    2414,  1016,  1250,  1186,  2523,  2403,  2311,    71,  1473,  2550,
    1256,  2535,   721,  1137,    24,   832,  2119,  -420, -1454,  2092,
    1253,   794,  1731,  1112,   795,   515,  1633,  1269,  1189,  2163,
    1165,   780,  1186,   608,   979,   796,   561,  1113,   836,  1008,
     906,  1497,   510,   518,  1163,  1118,  2570,   609,   623,  1212,
    1556,  1633,   756,  -417,    26, -1454, -1454, -1454,  1280,  1481,
    1292,  2578,   566,   429,   429,   986,   797,    27,   501,  1756,
    2529,  2159,  2050,  2175,  1823,  1824,  1332,  -420,  1375,  2518,
     718,  1727,  1728,  1164,  1790,  1791,  2579,   773,  1186,  2247,
      28,  1215,   898,  1690,  2261,   475,  1174,   475,    52,  2265,
     604,  -836,  2267,   602,  1452,  1410,  2504,   499,  1139,  1523,
     799,  1792,  1768,   519,   833,   429,  2545,  2257,    81,  2505,
     915,  1583,   513,  1261,  1188,  1816,  2217,   499,    36,  1393,
     800,  1590,  1736,    47,   837,   842,    45,   949,    64,   499,
    1757,  2225,   737,  2291,  1377,  2258,  1723,  1140,  1723,   524,
     802,  1762, -1454,    52,   572,  1188,  1856,  -417,   950,  1648,
    1112,   525,  2165,   499,   499,   499,  1364,  -643,   526,  1289,
     753,   744,   951,   898,  1113,  1110,  2176,   926,  1296,  -958,
     548,  -420,  1300,   729,   932,  -938,  2440,   730,  2202,  2203,
    1312,  1313,   949,  -648,  2445,  -417,  -638,  -417, -1453,  2444,
    2231,   859,    69,  1345,  1347,   507,   859,  1341,  1341,  -959,
    1531,   967,  1341,   950,  2232,  1010,  1436,  2162,  1740,  -420,
    1534,  -420,   998,  1537,  -855,  2563,  2220,   953,   912,   736,
    1220,   854,   855,  2379,   854,   855,   516,   729,   722,  2367,
    1206,   730,    48,   509,   520,  1341,  1341,   906, -1454,    20,
      52,  1142,  1505,  2291,  2568,   993,   994,   995,   996,   997,
     998,  1814,  1394,  1207,   527,   510,   551,  1395,  -169,  -169,
    2228,   555,  1530,   993,   994,   995,   996,   997,   998,   558,
     965,  1604,  2164,    24,  1645,  1646,  1647,  1648,  2094,  2547,
     968,  1871,   727,   559,  2509,   523,   457,    48,   777,   552,
    1189,  2361,  1011,  1396,   778,   562,   723,  1143,  1639,  2362,
    1179,   563,  1332,  1878,  2229,  1019,  1188,   859,   859,   617,
    1180,  1791,  1582,    26,   775,  1669,  1584,   458,  1382,  1586,
    2300,  1189,   553,   777,  1739,  1725,    27,   499,   573,   778,
    1212,  2050,  1902,   995,   996,   997,   998,  2031,   822,   824,
     826,  2583,  1188,  1383,   906,  1188,   429,   429,  1953,    28,
    1186,  2193,   499,   499,  1128,  1709,  1710,  2178,  1112,  1532,
    1112,   613,  1494,   459,  1535,  2149,   949,  1836,   554,  1756,
     898,  2233,  1113,   971,  1113,  2194,  1723,   499,  1178,  1954,
    1723,  1186,  -967,  -967,    48,  1130,  1131,   950,  1135,  1529,
     499,   615,  1858,  1811,  2132,   753,   779,   525,   525,   611,
     525,   951,   977,  2181,  1956,  2582,  1812,   499,  1540,   616,
     612,   499,  1818,  1547,  2095,  1759,  1224,   617,  1883,  1817,
     930,   499,  2557,  2558,  1561,  2433,  1112,  1397,   618,  1247,
    2434,   779,  2010,   979,  1201,   566,   507,  1206,   566,    20,
    1113,   608,   429,   429,  1384,   429,   566,  2405,   499,  1385,
    1213,  1822,  1859,  2409,  1386,   609,   960,  1841,  2183,  2363,
    1207,  1179,  1848,  1643,  1644,  1645,  1646,  1647,  1648,   720,
    1263,  1182,  2585,    24,  1301,   624,   467,   898,    52,  2435,
     604,  2046,  1189,   728, -1454, -1454, -1454,  1762,  1643,  1644,
    1645,  1646,  1647,  1648,  1341,  1341,  1341,  1341,   938,   939,
    1341,  1341,  1341,  1341,  1341,  1341,  1341,  1341,  1341,  1341,
     724,  2011,  1027,    26,  1958,   538,  1310,  1265,  1189,  1319,
     540,  1189,   624,   539,  1275,   542,  1320,  1321,  1322,  1270,
    1271,   523,   523,  1254,   523,  1255,   780,  1606,  1126,    20,
      52,  1732,  1186,  2411,  1884,  1334,   725,  1723,  2186,   729,
    1341,  1341,  1723,   730,  1885,  1720,  1279,  1723,  1680,    83,
    1723,  2268,  1167,    29,   740,   544,  1202,   545,  2012,  1203,
    2013,   780,  1799,    24,  1801,  1194,  1720,  1302,  1186,   745,
     566,  1186,   746,  1681,  1723,   781,  2496,  2498,  1387,   782,
    2187,  1290,  2029,  2098,  -463,  1276,  1218,   748,  1388,  -463,
    2470,  1664,  2524,  1437,  2525,  2188,  1236,   949,   499,  2142,
     749,   478,    73,    26,  2321,   494,   783,    84,   751,   926,
     807,  1252,    48,  2022,   782,  1678,    27,  1116,   950,  1766,
    1117,   906,  1830,  1259,   624,  1933,  1934,  1935,  1936,    20,
    1119,  2005,   953,  1120,   752,  1900,  1901,  2543,  1303,    28,
    1257,   808,  1231,  1120,  1232,  1277,  2084,  2062,  1278,  1576,
    1234,  1235,   962,    29,  -463,   551,  1723,  1860,  1862,  1863,
     906,  1332,  2420,    24,  2021,  1268,  2030,   926,  1269,  1252,
     784,  1290,   920,   921,    48,  2574,  1112,  1112,  1112,  1682,
     759,  1723,   906,  2432,  1683,   774,  2189,  2436,   552,  2437,
    1113,  1113,  1113,  2206,  1987,  -463,  1482,  1483,  1304,   940,
    2575,  1305,  2546,    26,   777,   784,   546,   499,   547,   499,
     778,   906,   776,  1523,  1284,  2051,    27,  1285,  1456,  2559,
    1461,  1832,   729,   788,  -938,  1454,   730,  -491,  -491,  1663,
    1852,  1665,  1666,  1446,   814,   906,   842,   777,   737,    28,
    2226,  1492,   789,   778,  1120,  1380,   926,   806,   839,  1279,
     777,    74,   499,    29,   898,   810,   778,  1573,    75,  1574,
    1178,   429,   926,    87,  1252,    88,  2210,   554,  1702,  1761,
    1703,   429,  1507,   429,  1511,  2589,   429,   818,  1552,   777,
     815,  1553,   429,  1425,   429,   778,  1704,  1723,  1705,    90,
    1952,    76,   820,   898,  1605,   566,   429,  1120,  1023,  1025,
     566,   429,  1306,  2043,   827,   429,   429,   429,   429,   829,
     429,   429,   779,  1723,  1612,   898,   834,  1120,  1684,   499,
    1560,  2029,  -495,  -495,  1972,  1973,  1974,  1968,  1685,  1720,
     839,  1720,  1572,   777,   758,  1616,   760,    77,  1120,   778,
     841,   844,   859,  1577,   898,   779,   845,  1620,    20,  1621,
    1120,  1498,  1120,   847,  2349,  2166,  1280,  2131,   779,  2134,
     906,  1506,  1953,  1509,  -494,  -494,  1520,  2178,   898,   910,
     911,  2046,  1524,  2179,  1526,  1281,  1272,  1762,  1139,   717,
    1115,   719,    24,   913,  -614,  2180,  1533,   779,  -621,    48,
     923,  1536,  1441,  1954,  1443,  1541,  1542,  1543,  1544,  1290,
    1548,  1549,   510,  1906,  2350,  2083,   929,  1652,  1955,  1307,
    1120,  1805,  2351,  2181,  1806,  2182,   919,  1140,  1956,   920,
     921,  1809,    26,  1723,  1810,    83,  2320,  1867,   940,   922,
    1120,  2384,  -611,  1914,  2384,    27,  1120,  1486,  -612,    20,
    2352,   779,   510,  1341,  1957,  1985, -1000,  1990,  1986,   924,
    1991,  2009,   780,   925,  1553,  1323,  1324,  1325,    28,  1326,
    1327,  1328,  1329,  1330,  1331,  2262,   906,    29,  2183,   931,
    1112,   934,    29,    24,  1112,  1141,  1112,   935,   936,  1316,
    1317,  1334,   937,    84,  1113,   780,  2068,   942,  1113,  1553,
    1113,  -615,  2103,   898,  2184,  1285,  2167,  2168,   780,  1553,
    1553,   811,   944,   945,  1559,   782,  2353,    48,  -613,  2248,
     946,   499,  1285,    26,  2198,   510,   947,  2354,  1724,   858,
    1952,  1142,   948,    78,   858,    79,    27,   780,  1958,    85,
     454,  1341,   812,  1115,  1493,   955,   956,   479,   782,  1724,
    2340,   495,   538,  1750,   966,  2121,  1753,   540,  1461,    28,
     539,   782,   542,  2185,  2155,  1003,  2301,  2342,  2186,  2302,
    1553,  2368,  1005,    29,  1285,   783,  1007,    52,  2371,  1720,
    1008,  2372,  2376,  1720,  1021,   842,  1538,  1143,   783,  1026,
     782,   780,   906,  1123,   900,  1129,   764,  2207,  2208,   906,
    1161,   762,  1953,  1808,  1224,  1341,   784,  1159,  2153,   898,
    2187,  1185,  2382,   960,  -429,  2383,  2386,  1539,  2397,  2383,
    2263,  2398,  1184,  1186,  1191,  2188,  -429,  2327,    20,   872,
     908,  -429,  2422,  1954,  2450,  2423,  1826,  2398,  2451,   784,
    1545,  1285,  1192,   858,   782,   858,   858,  1193,  1955,    87,
    2046,    88,   784,   960,  1224,   906,  1762,  2459,  1956,   499,
     842,   517,    24,  1224,   499,   499,   499,  2464,  1197,  1380,
    2383,  1546,    89,  -464,  1204,    90,  -429,   429,  -464,  1205,
    2478,   784,   499,  2479,  1957,  1697,   566,  2519,  1209,  1112,
     842,  2328,  2520,  1219,  1604,  1120,  -429,  2541,  1577,  1221,
    2542,  1714,    26,  1113,  2355,  2553,  1706,  2356,  2383,  2571,
    1225,  2408,  2398,  2043,   858,    27,  2189,   858,   858,  1229,
    1230,    48,  1714,   518,  1237,   898,   509,  1334,  1240,  1241,
    1243,  1267,   898,  1252,  2329,   784,   926,  -429,    28,   915,
     932,  1273,  1291,  -464,  1292,  1297,  -429,   624,  1349,  2275,
    1720,  1928,    29,  1350,  1362,  1720,  2284,   971,  1909,  2330,
    1720,  1373,  1392,  1720,  1379,  1390,  1412,  1845,  1958,   510,
     906,   900,  1413,  1427,  1438,  1440,  2331,  1264,  1266,  1448,
    2332,  1447,  1455,   518,  -464,  1474,   510,  1720,   898,  1475,
    1476,  1462,  1495,   519,  1477,  1499,  1500,  1501,  1550,  1554,
    2333,  1932,  1558,  2334,  1604,   906,  1563,   908,  1562,   499,
     499,   499,  1942,  1564,  1724,  1950,  1580,  2335,  1578,  1950,
    1964,  1581,  1585,  1587,  1588,  1593,  1595,  1600,  2428,  2426,
     906,  1596,  1614,   906,  2304,  1597,  2327,  1598,  1615,  1599,
    1212,  1601,  1618,  1679,  1829,  1617,  1619,  1298,  1299,  1834,
    1835,  1837,  1622,  1623,  1120,  1311,  1626,  1461,  1625,  1314,
    1315,  2370,    48,  1629,  1651,  1657,  1658,  1851,  1659,  1720,
    1660,   900,  1661,   499,  1351,   429,  1352,  -429,  1668,  1224,
    1178,  1224,  1671,  1247,  1674,  1672,  2415,  1673,  1112,  1363,
    1365,  1686,  2408,  1695,  1720,  1696,  2048,  1698,  2336,   429,
    1699,  2035,  1113,   898,  1700,  2121,  2337,   908,  1725,  1730,
      83,  1742,   901,  1826,   429,   429,   429,   429,   429,   429,
     429,   429,   429,   429,   520,  1744,  2492,  1758,  2375,   903,
    1751, -1000,  1764,   499,  -496,  1770,  -497,  1769,   898,   729,
    1178,  2375,   748,   730,  1773,  1774,  1772,  2338,  1776,  1778,
    1779,  1247,   900,  1782,   499,   790,  1785,  1798,  1800,  2079,
    1838,  1813,  1839,   898,  1819,  2001,   898,  1842,    84,  1846,
     960,  1820,  1112,  2417,   791,  1843,  1112,  2477,  1821,  1849,
    1850,  1853,  2043,  1854,  1279,  1940,  1113,  1944,   908,  2034,
    1113,  1865,  1866,  1870,  1937,  1938,  1939,  1633,  1653,   904,
    1720,   608,  1654,  1908,  2052,  2053,  2054,  2055,  2056,  2057,
    2058,  2059,  2060,  2061,    85,   609,  1903,  1904,  1905,  1917,
    1916,  1920,   962,   792,   519,  1929,  1720,   872,  1707,  1943,
    1951,  2114,   790,  1965,   499,   499,   499,   499,  1967,   906,
    1970,  1950,  1964,  2492,  1982,  1950,  1976,  2460,  2124,  1984,
    1978,   791,  1724,  2540,  2472,  1979,  1724,  1988,  2000,  1980,
    1995,  2150,  2139,  2152,  1999,  2017,  2003,  2015,  2064,  2033,
    1480,  1480,  2070,  2071,  2081,  2075,  2086,  2088,  2087,  2093,
      86,  2090,  2097,  2096,  2127,  2111,  2025,  1750,  2123,   901,
    2122,  2125,  1461,  2128,  2154,  2156,  1334,  1112,  2135,   608,
     792,  2023,  2136,  2140,  1178,  2141,   903,   793,  2024,  2143,
    2144,  1113,  2146,   609,  2147,  2452,  2148,  2169,  2067,  2173,
    2196,   858,  2161,    48,    87,  2212,    88,  2461,  2197,  2205,
    2201,   858,  2211,  2213,   858,  2221,  1720,  2222,  2235,  1259,
    2214,  1722,  2223,  2236,  2238,  2241,  2242,    89,  2243,  2245,
      90,  2246,  2259,  1112,  2266,   794,  2253,  2272,   795,   900,
    2282,  2287,  1722,  2025,  2295,  1224,  2293,  1113,  2296,   796,
    2312,  1572,   898,  2298,  2315,  2303,   904,  2316,  2317,  2318,
    2341,  2227,  2239,  2345,   793,  2346,  2344,  2359,  2360,   901,
     858,  2369,  2373,  2378,  2381,   908,  2387,  2393,  2394,  2399,
     797,  2389,  2413,  2416,  1602,  2418,   903,  2429,  2421,  2446,
    2448,  2447,  2466,  2467,  2476,  2458,   608,  2480,  2311,  2115,
    2116,  2117,  2118,  1942,  1950,  1714,   429,  2482,  1724,  1714,
     609,  2485,   794,  1724,  2483,   795,  1724,  1942,  2495,  2271,
    2488,  2274,  2501,  2502,   799,  2508,   796,  2506,  2026,  2507,
    2536,  2517,  1930,  2530,   623,  1553,  2548,  1633,    48,    48,
    2292,  1634,  1635,  1636,   800,  2561,   900,   905,   607,  2554,
     901,  2564,  2566,  2572,  2573,  2562,   904,   797,  2586,  2563,
     566,   429,   750,  2032,   802,  2036,   872,   903,  1525,   499,
    2157,   713,   713,  1796,  1992,  2471,  2048,  2526,  2286,  2069,
    2204,  2532,   908,  2581,  2560,  2412,   790,  2567,  2358,  1175,
    1781,  1803,   713,   429,   429,  2074,  2528,  1827,  2565,  2037,
    2527,   799,  1777,  1249,  1178,   791,  1828,   429,  2438,  2489,
    2569,  2343,  2063,  1121,  1760,  1156,  1491,  1013,  1771,   499,
    1471,   800,  2292,  1155,  1977,    48,  2465,  2151,  1490,   510,
    1741,  1946,  2227,  1160,  2120,  1941,  2133,   904,  2457,  1735,
     429,   802,  2456,  2027,  2380,  2462,  2028,  1724,  2521,  2463,
    2522,  2305,  1594,  2274,   792,  2285,  2516,  1763,  1417,  1693,
    2449,  1609,   713,  2392,  1738,  1630,  1631,  1691,   429,  1426,
    1650,  1262,  1767,  1767,  1831,  1589,  1442,   499,  1124,  1444,
    1993,  1714,     0,  2323,  2324,     0,  1714,     0,     0,  1714,
       0,     0,   859,     0,     0,   607,  2431,  2347,     0,   566,
     607,   713,   909,  1675,  1676,  1722,  2439,  1722,     0,     0,
       0,  1637,     0,     0,     0,     0,     0,     0,   713,     0,
       0,     0,     0,     0,   905,   499,   872,   872,   872,     0,
       0,     0,  1638,     0,     0,  2443,     0,     0,   793,     0,
       0,     0,     0,     0,  1186,     0,     0,     0,   713,     0,
       0,     0,     0,  1942,  2313,     0,     0,   901,  2395,   429,
       0,     0,     0,     0,  2271,     0,     0,   713,   713,   713,
       0,   713,     0,     0,   903,    48,     0,     0,     0,  2292,
     566,   566,   566,     0,  2468,     0,   794,     0,     0,   795,
     859,   713,     0,     0,  1639,  2493,    48,  2494,  1855,  1857,
     796,  2499,  2500,  1864,  2364,     0,     0,     0,     0,     0,
       0,   607,   607,     0,     0,  1224,  1224,     0,   713,  1111,
    1714,     0,     0,     0,   905,     0,     0,     0,     0,     0,
     960,   797,     0,   900,     0,     0,     0,     0,     0,  2271,
       0,     0,     0,     0,   904,  2048,     0,  2392,   713,     0,
       0,     0,   713,   713,     0,     0,     0,  1461,   623,     0,
       0,  1633,  2404,   713,   901,  1634,  1635,  1636,     0,   908,
       0,     0,   900,     0,     0,   799,  1224,     0,     0,   909,
       0,   903,  1911,  1178,     0,     0,     0,     0,     0,  2292,
       0,  2544,     0,     0,   900,   800,     0,     0,     0,    48,
       0,     0,     0,     0,   566,   905,     0,   859,   908,     0,
    2442,     0,     0,     0,     0,   802,     0,   623,     0,     0,
    1633,     0,     0,   900,  1634,  1635,  1636,     0,  1111,     0,
     908,     0,     0,     0,     0,     0,     0,     0,   607,     0,
       0,  1912,     0,     0,     0,  1722,     0,   900,    48,  1722,
       0,   904,     0,     0,     0,     0,     0,     0,     0,   908,
       0,     0,  1879,  1880,  1881,  1882,     0,     0,  1886,  1887,
    1888,  1889,  1890,  1891,  1892,  1893,  1894,  1895,     0,   909,
    1640,  1641,  1642,   908,  1643,  1644,  1645,  1646,  1647,  1648,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   713,     0,     0,     0,     0,     0,   713,     0,
       0,   713,     0,     0,   858,   713,     0,     0,  1922,  1923,
       0,     0,     0,   713,   713,     0,     0,     0,   872,     0,
       0,   713,     0,     0,   713,   713,   713,   713,     0,     0,
       0,     0,     0,     0,   713,   713,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    48,  1638,  2085,     0,     0,
     909,   713,   713,   713,   713,  1111,     0,     0,     0,   713,
       0,   970,   900,   713,   971,     0,   713,     0,     0,   713,
     713,   713,   713,   713,   713,   713,   713,   713,     0,     0,
     713,     0,     0,     0,     0,     0,     0,   713,     0,   713,
       0,     0,     0,   977,     0,     0,     0,     0,  2049,     0,
   -1454,     0,   905,     0,     0,  1638,  1722,     0,  1639,     0,
       0,  1722,     0,     0,     0,     0,  1722,     0,     0,  1722,
       0,     0,     0,     0,   979,     0,     0,     0,     0,     0,
     623,     0,     0,  1633,     0,     0,     0,  1634,  1635,  1636,
       0,   901,     0,  1722,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   970,  2105,     0,   971,     0,   903,     0,
     972,   973,   974,     0,     0,     0,     0,  1639,   900,     0,
       0,     0,     0,     0,     0,     0,     0,   975,     0,     0,
     901,     0,     0,     0,     0,   977,     0,     0,     0,     0,
       0,  1687,   978,     0,     0,     0,     0,   903,     0,   713,
       0,     0,   901,     0,   908,     0,     0,     0,     0,   905,
       0,     0,     0,     0,     0,   858,   979,   713,     0,   903,
     858,     0,     0,     0,     0,  1722,   713,   713,   904,     0,
       0,   901,     0, -1454,  1264,  1266,     0,     0, -1454,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   903,     0,
    1722,     0,     0,     0,   872,   901,     0,   909,     0,     0,
       0,     0,   872,  1111,     0,  1111,     0,   904,     0,     0,
       0,     0,   903,     0, -1454,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   900,     0,     0,     0,     0,   904,
       0,   900,     0,     0,  1640,  1641,  1642,     0,  1643,  1644,
    1645,  1646,  1647,  1648,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   904,     0,
     908,   986,     0,     0,     0,   980,     0,  2209,  1638,     0,
     981,  1111,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   904,     0,     0,     0,   607,   900,   713,   713,
     713,   982,   983,  1640,  1641,  1642,  1722,  1643,  1644,  1645,
    1646,  1647,  1648,     0,   909,     0,   984,     0,     0,     0,
     713,   713,     0,     0,     0,     0,   713,     0,     0,     0,
     901,     0,  1722,   908,     0,     0,     0,     0,     0,     0,
    1639,     0,     0,     0,     0,  1264,  1266,   903,     0,   985,
       0,     0,     0,     0,   858,     0,     0,     0, -1454,     0,
       0,  2244,     0,   986,     0,     0,   713,   713,   713,     0,
       0,   713,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   713,   713,   713,   713,     0,     0,     0,
       0,   713,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   713,   713,     0,     0,   713,     0,
       0,     0,   900,     0,     0,     0,     0,   904,     0,     0,
       0,   713,     0,   713,     0,   713, -1359,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   901,     0,     0,     0,
       0,     0,  1722,     0,     0,   713,   905,   900,  2049,  2306,
     988,     0,     0,   903, -1454,     0,   713,     0,   713,   713,
     713,   993,   994,   995,   996,   997,   998,     0,     0,   713,
     858,     0,   900,     0,     0,   900,     0,   713,     0,     0,
       0,     0,     0,   908,     0,   905,     0,     0,     0,     0,
       0,   713,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   713,   905,   908,     0,
       0,   908,     0,  2366,     0,     0, -1359,     0,     0,     0,
       0,     0,     0,   904,   713,     0,  1640,  1641,  1642,     0,
    1643,  1644,  1645,  1646,  1647,  1648,   905,     0,     0,     0,
       0,  1111,  1111,  1111,     0,     0,   989,     0,     0,   990,
     991,   992,   901,   993,   994,   995,   996,   997,   998,   901,
     905,     0,     0,     0,     0,     0, -1359,     0,     0,   903,
       0,   970,     0,     0,   971,     0,   903,     0, -1359,     0,
       0,     0,     0, -1359,     0,     0,     0,     0, -1359,     0,
       0,     0,     0,     0,     0,     0,     0, -1359,     0,     0,
   -1359,   909,     0,   977,     0,     0,     0,     0,     0,     0,
   -1454,     0,     0,     0,     0,   901,     0,     0,     0,     0,
       0,     0,     0,   858,     0,     0,     0,     0, -1359,     0,
       0,     0,   903,     0,   979,     0,     0,   713,     0,   904,
     909,     0,     0,     0,     0,     0,   904,   713, -1359,     0,
       0,     0,     0,   713,     0,     0,   713,     0,     0,     0,
       0,     0,   909,   713,   713,   713,   713,     0,     0,   713,
     713,   713,   713,   713,   713,   713,   713,   713,   713,     0,
       0,   900,   713,   713,     0,   905,     0,     0,     0, -1359,
       0,   909, -1359,     0,     0,     0,   713,     0, -1359,     0,
       0,  1921,   904,   713,     0,     0,   713,     0,   713,     0,
       0,     0,     0,     0,     0,   909,   713,  2049,     0,   713,
     713,     0,     0,     0,   713,   713,     0,     0,     0,     0,
     901,   970,     0,     0,   971,     0,     0,     0,     0,     0,
     713,     0,   713, -1454,     0,     0,     0,   903, -1454,     0,
       0,     0, -1359,     0,   713,     0,     0,     0,     0,     0,
     713,     0,     0,   977,     0,   901,     0,     0,     0,     0,
   -1454,   713,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   903,     0, -1454,     0,     0,   713,     0,     0,
     901,   905,     0,   901,   979,     0,     0,     0,     0,     0,
       0,     0,     0,  1707,     0,     0,     0,   903,     0,     0,
     903,     0,     0,     0,     0,     0,     0,   904,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1359,
       0,   986,     0,     0,     0,  1111,     0,     0,     0,  1111,
     909,  1111,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   904, -1359,     0, -1359, -1359,     0,     0,     0,
     696,   696,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   904,     0,     0,
     904,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1359,     0,     0, -1359, -1359, -1359,   713,     0,     0,
       0,     0,     0, -1454,     0,     0,     0,   905, -1454,     0,
       0,     0,     0,     0,   905,     0,     0,     0, -1454,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   -34,
       0,     0,     0,     0,     0,     0,     0, -1361,     0,     0,
     713,   713,     0,     0, -1454,   713,   909,     1,     0,     0,
     713,     0,     0,   713,   713,     0,     0,     2,   713,     3,
       4,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     905,     0,     0,     0,     0,     5,     0,     0,     0,     0,
     713,     0,     0,     0,   713,     0,     0,     0,     0,     0,
     869,   986,     0,     0,     0,     6,   713,     0,     0,   901,
       0,     0,     0,     0,   713,     0,     7,   917,     0,     0,
       0,   713,     0,     0, -1454,     0,   903,     8,     0,     9,
       0,   993,   994,   995,   996,   997,   998, -1361,     0,     0,
       0,     0,     0,     0,     0,     0,    10,   941,     0,     0,
       0,     0,     0,     0,  1111,     0,     0,     0,     0,     0,
       0,     0,     0,   713,     0,     0,   957,   958,   959,    11,
     961,     0,   909,     0,   970,    12,     0,   971,     0,   909,
       0,     0,     0,    13,     0,    14,     0, -1361, -1454,     0,
    1006,     0,     0,     0,     0,   905,   904,     0,     0, -1361,
       0,     0,     0,     0, -1361,     0,   977,     0,     0, -1361,
       0,     0,     0, -1454,     0,     0,     0,  1028, -1361,     0,
       0, -1361,     0,     0,     0,     0,     0,     0,     0,     0,
     905,     0,   713,     0,     0,   909,     0,   979,     0,     0,
       0,     0,     0,     0,   713,   713,     0,  1134,   713, -1361,
       0,  1146,  1151,     0,     0,   905,     0,     0,   905,     0,
       0,   713,     0,    15,     0,     0,   713,     0,     0, -1361,
       0,   713,     0,     0,   713,   713,     0,     0,     0,     0,
       0,     0,   713,   713, -1454,     0,     0,     0,     0,     0,
       0,   993,   994,   995,   996,   997,   998,     0,   713,     0,
     713,     0,     0,     0,  1924,     0,     0,     0,     0,     0,
   -1361,     0,     0, -1361,     0,     0,     0,     0,     0, -1361,
     713,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,     0,     0,    17,     0,     0,     0,     0,     0,
    1001,     0,     0,     0,     0,     0, -1454,     0,     0,     0,
     909, -1454,     0,  1111,     0,     0,     0,     0,     0,     0,
       0,     0,    18,   970,     0,     0,   971, -1375,     0,     0,
      19,     0,     0, -1361,     0,     0,     0,     0,     0,     0,
     713,     0,    20,     0,   713,   909,  1001, -1454,     0,    21,
       0,     0,     0,    22,     0,   977,     0,     0,     0,     0,
       0,   713, -1454,    23,     0,   713,     0,  1295,     0,     0,
     909,     0,     0,   909,     0,   713,    24,     0,     0,     0,
       0,     0,     0,     0,  1707,     0,   979,   713,     0,     0,
    1318,     0,     0,  1335,   986,     0,  1346,  1111,     0,     0,
       0,  1111,   713,  1353,  1358,     0,     0,     0,     0,     0,
   -1361,    25,     0,     0,     0,     0,    26, -1375,     0,     0,
    1368,  1369,  1370,  1371,   905,     0,   607,     0,  1378,    27,
       0,     0,  1389,     0, -1361,  1391, -1361, -1361,  1398,  1399,
    1400,  1401,  1402,  1403,  1404,  1405,  1406,     0,     0,  1407,
       0,   970,    28,  1925,   971,     0,   696,     0,   869,     0,
       0,     0,     0,     0,     0,     0,    29, -1375,   713,   -34,
       0,   713, -1361,  1001,     0, -1361, -1361, -1361,     0, -1375,
     713, -1454,     0,   977, -1375,     0,     0,     0,   713, -1375,
   -1454,     0,     0,     0,     0, -1454,     0,   713, -1375,     0,
   -1454, -1375,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   979,     0,     0,   713,     0,     0,
       0,  1001,  1111,     0,   607,     0,     0,     0,     0, -1375,
       0,     0,     0,     0,     0,     0, -1454,     0,     0,     0,
       0,     0,     0,     0,     0,  1001,     0,     0,     0, -1375,
    1342,     0,   713,   713,     0,     0,     0,     0,     0,     0,
       0,  1001,  1001,  1001,     0,  1001,     0,     0,  1445,     0,
       0,     0,     0,     0,     0,     0,     0, -1454,  1111,   909,
       0,  2109,     0,   986,   993,   994,   995,   996,   997,   998,
   -1375,     0,     0, -1375,     0,   958,   959,     0,     0, -1375,
       0,     0,     0,     0,     0,     0,     0,   713,     0,   713,
    1001,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1454,     0,     0,     0,     0, -1454,     0,
       0,     0,  1001,     0,     0,     0,     0,   970,     0,     0,
     971,   607,     0,     0,   972,   973,   974,     0,     0,     0,
       0,     0,     0, -1375,     0,     0,     0,     0,     0,     0,
       0,   975,     0,     0, -1454,     0,     0,     0,     0,   977,
   -1454,   713,   713,     0,     0,     0,   978,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     979,     0,     0,     0,  1707,     0,     0,     0,     0,     0,
       0,   986,     0,     0,     0,     0,     0,   869,  1591,  1592,
     777,     0,     0,     0,     0,     0,   778,     0,     0,     0,
   -1375,     0,     0,   790,     0,     0,     0,     0,  1001,     0,
    1607,     0,     0,     0,     0,  1613,     0,     0,     0,     0,
    1001,     0,   791,     0, -1375,  1001, -1375, -1375,     0,     0,
       0,     0,     0,     0,     0,     0, -1454,     0,     0,     0,
       0,     0,     0,   993,   994,   995,   996,   997,   998,     0,
       0,     0,     0,     0,     0,     0,     0,  1632,     0,     0,
       0,     0, -1375,     0,     0, -1375, -1375, -1375, -1454,     0,
       0,   792,  1358,     0,  1358,  1358,     0,     0,     0,   980,
    1670,     0,     0,     0,   981,     0,     0,   970,     0,     0,
     971,     0,     0,     0,   972,   973,   974,     0,   779,     0,
       0,     0,     0,     0,     0,   982,   983,     0,     0,     0,
    1689,     0,  1692,     0,  1694,     0,     0,     0,     0,   977,
     984,     0,     0,     0,     0,     0,   978,   970,     0,     0,
     971,     0,     0,     0, -1454, -1454, -1454,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   869,   869,   869,
     979,     0,     0,   985,     0,   793,     0,     0,  1737,   977,
       0,     0,     0,     0, -1454,     0,   978,   986,     0,  1001,
     987,   993,   994,   995,   996,   997,   998,     0,     0,     0,
    1134,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     979,     0,  1001,     0,     0,  1151,     0,     0,     0,     0,
       0,     0,     0,   794,     0,     0,   795,     0,     0,  1001,
       0,  1342,  1342,  1775,  1649,     0,  1342,   796,     0,     0,
    1001,     0,   623,     0,     0,  1633,     0,  1001,     0,  1634,
    1635,  1636,  1001,     0,     0,     0,     0,     0,   780,     0,
       0,     0,  1001,  1001,  1001,  1001,  2106,     0,   797,  1342,
    1342,     0,  1001,     0,   988,     0,     0,     0,     0,   980,
       0,     0,     0,  1001,   981,  1001,     0,     0,     0,     0,
       0,     0,  1001,  1001,  1001,  1001,  1001,  1001,  1001,  1001,
    1001,  1001,     0,     0,     0,   982,   983,   798,     0,     0,
       0,   782,   799,     0,     0,     0,     0,     0,     0,   980,
     984,     0,     0,     0,   981,     0,     0,     0,     0,     0,
       0,     0,   800,     0,     0,     0,     0,     0,   801,  1001,
       0,     0,     0,     0,     0,     0,  1869,     0,     0,     0,
       0,     0,   802,   985,     0,     0,  1873,     0,     0,     0,
     984,     0,  1874,     0,     0,  1876,     0,   986,     0,     0,
     989,     0,     0,   990,   991,   992,     0,   993,   994,   995,
     996,   997,   998,     0,     0,     0,     0,     0,     0,     0,
    1624,  1896,  1897,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   784,     0,     0,     0,     0,   986,     0,     0,
       0,     0,  1910,     0,   969,  1913,     0,  1915,     0,   970,
       0,     0,   971,     0,     0,  1919,   972,   973,   974,     0,
       0,     0,     0,  1926,  1927,     0,     0,     0,     0,     0,
    1638,     0,     0,   975,     0,     0,   976,     0,     0,     0,
       0,   977,     0,     0,   988,     0,     0,     0,   978,     0,
       0,     0,     0,  1969,     0,     0,     0,     0,     0,   869,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1981,     0,   979,     0,     0,  1001,  1001,     0,     0,     0,
       0,     0,     0,     0,   988,     0,  1994,     0,     0,     0,
       0,  1001,  1639,     0,     0,   623,     0,  1001,  1633,     0,
       0,     0,  1634,  1635,  1636,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1649,  1649,  1001,     0,  1342,  1342,
    1342,  1342,     0,     0,  1342,  1342,  1342,  1342,  1342,  1342,
    1342,  1342,  1342,  1342,  1649,     0,     0,     0,     0,     0,
     989,     0,     0,   990,   991,   992,     0,   993,   994,   995,
     996,   997,   998,     0,  1001,     0,     0,     0,     0,  1649,
    1649,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1001,  1342,  1342,  1001,     0,  1001,     0,
     989,   980,     0, -1454, -1454, -1454,   981,   993,   994,   995,
     996,   997,   998,     0,   623,     0,  2089,  1633,     0,     0,
       0,  1634,  1635,  1636,     0,     0,     0,   982,   983,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1001,   984,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2099,
    2100,     0,     0,     0,  2101,     0,     0,     0,     0,  2104,
       0,     0,  2107,  2108,     0,   985,     0,  2112,     0,  1001,
       0,     0,     0,     0,     0,     0,     0,     0,   970,   986,
       0,   971,   987,     0,     0,   972,   973,   974,  1640,  1641,
    1642,     0,  1643,  1644,  1645,  1646,  1647,  1648,     0,     0,
       0,     0,   975,  1638,     0,   869,     0,     0,     0,     0,
     977,     0,     0,   869,     0,   970,     0,   978,   971,     0,
     696,     0,   972,   973,   974,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   975,
       0,   979,     0,  1463,     0,     0,     0,   977,     0,     0,
       0,     0,     0,     0,   978,     0,     0,     0,     0,     0,
       0,     0,  2199,  1001,     0,  1639,   988,  1001,  1001,     0,
    1001,     0,     0,  1649,  1649,  1649,  1649,     0,   979,     0,
    1649,  1649,  1649,  1649,  1649,  1649,  1649,  1649,  1649,  1649,
    1001,  1001,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -1454,     0,  1001,     0,     0,  1001,     0,  1001,
       0,     0,     0,  1001,     0,     0,  1649,  1649,     0,     0,
    1001,  1001,     0,     0,     0,     0,     0,  1464,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2249,  2250,     0,     0,  2251,     0,     0,
     980,     0,     0,     0,     0,   981,     0,     0,     0,     0,
       0,     0,   989,  1001,  1639,   990,   991,   992,     0,   993,
     994,   995,   996,   997,   998,  1001,   982,   983,     0,     0,
     432,  2280,  2281,     0,     0,     0,     0,   980,  1001,     0,
       0,   984,   981,     0,     0,     0,     0,     0,     0,  2294,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   982,   983,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   985,     0,     0,     0,   984,     0,
       0,     0,   433,     0,     0,     0,     0,     0,   986,     0,
       0,   987,     0,     0,     0,     0,     0,   434,     0,     0,
       0,  1640,  1641,  1642,     0,  1643,  1644,  1645,  1646,  1647,
    1648,   985,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   986,     0,     0,   987,     0,
       0,     0,     0,  1001,     0,     0,     0,  1342,     0,     0,
       0,     0,     0,  1001,  1001,  1001,     0,     0,  1001,   435,
    2377,  1001,  1001,     0,     0,     0,  1001,   436,     0,     0,
       0,     0,     0,     0,   961,     0,     0,     0,     0,   437,
       0,     0,     0,     0,     0,   988,  2396,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2410,     0,     0,     0,     0,     0,     0,   438,     0,
    1640,  1641,  1642,     0,  1643,  1644,  1645,  1646,  1647,  1648,
       0,     0,   988,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1342,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1001,   439,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1465,     0,
       0,   989,     0,     0,   990,   991,   992,  2280,   993,   994,
     995,   996,   997,   998,     0,     0,  1439,     0,  1649,  1342,
       0,     0,     0,  1001,  1001,  1001,     0,     0,     0,     0,
     440,     0,     0,     0,     0,     0,  2487,     0,   989,     0,
       0,   990,   991,   992,   441,   993,   994,   995,   996,   997,
     998,     0,     0,     0,  1001,  1001,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1001,     0,
       0,  2513,  2513,     0,     0,   442,     0,   443,     0,     0,
    1649,     0,     0,     0,   444,     0,     0,   445,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   446,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   447,     0,     0,
       0,     0,     0,     0,   448,     0,     0,     0,  2513,     0,
       0,     0,     0,   449,     0,     0,     0,     0,     0,     0,
    1649,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1001,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   450,     0,     0,     0,     0,     0,     0,
    1001,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1001,     0,     0,     0,     0,     0,
    2513,  2584,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   619,   620,   467,   621,   622,
     623,   624,   625,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,  1429,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,  1001,   108,   109,   110,   578,   111,   112,   113,   114,
     626,   579,   627,   628,     0,   118,   119,   120,   121,   122,
     629,   630,   123,   124,   631,   632,   127,  1001,   128,   129,
     130,   131,   633,     0,   634,     0,   133,   134,   135,   136,
     137,   581,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   582,   147,   148,   149,   635,   636,   637,
     638,   639,   640,   641,   150,   151,   152,   153,   154,   155,
     642,   643,   158,   644,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,  1430,     0,   170,
     171,   645,   173,   174,     0,   175,   176,   177,  1001,   178,
     179,   180,     0,   181,   182,   183,   184,   646,   186,   187,
     188,   647,   648,   190,     0,   191,   192,   649,   194,     0,
     195,     0,   196,   584,     0,   585,   197,   198,   199,   200,
       0,   201,   650,     0,   203,   204,     0,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,   587,   221,   222,   223,
     224,   225,   651,   652,     0,   653,     0,   229,   588,   589,
     230,   590,   231,   232,   233,   234,   235,     0,     0,   236,
     654,   591,   238,   592,     0,   239,   240,   241,   655,   656,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   657,   593,   658,   260,
     261,   262,   263,   659,   264,   265,   594,   266,   660,   661,
     268,   662,   270,   271,   272,     0,   273,   274,     0,     0,
     663,   276,   277,     0,     0,   278,   279,   595,   280,   596,
     664,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   665,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     666,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   597,   328,   329,   330,   667,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   668,   346,   347,   348,   349,   350,   598,   351,   352,
     669,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   670,     0,   368,   369,     0,
     370,   599,   371,   372,   373,   374,   375,     0,   671,   672,
       0,     0,   378,   379,   673,   381,   674,   675,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   676,     0,   395,   396,   397,   398,   399,   400,
     677,  1431,   402,   601,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   678,     0,     0,     0,     0,     0,     0,
     679,   680,  1432,     0,     0,     0,     0,     0,     0,   682,
    1433,     0,     0,     0,   683,   619,   620,   467,   621,   622,
     623,   624,   625,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,   578,   111,   112,   113,   114,
     626,   579,   627,   628,     0,   118,   119,   120,   121,   122,
     629,   630,   123,   124,   631,   632,   127,     0,   128,   129,
     130,   131,   633,     0,   634,     0,   133,   134,   135,   136,
     137,   581,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   582,   147,   148,   149,   635,   636,   637,
     638,   639,   640,   641,   150,   151,   152,   153,   154,   155,
     642,   643,   158,   644,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   645,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   646,   186,   187,
     188,   647,   648,   190,     0,   191,   192,   649,   194,     0,
     195,     0,   196,   584,     0,   585,   197,   198,   199,   200,
       0,   201,   650,     0,   203,   204,     0,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,   587,   221,   222,   223,
     224,   225,   651,   652,     0,   653,     0,   229,   588,   589,
     230,   590,   231,   232,   233,   234,   235,     0,     0,   236,
     654,   591,   238,   592,     0,   239,   240,   241,   655,   656,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   657,   593,   658,   260,
     261,   262,   263,   659,   264,   265,   594,   266,   660,   661,
     268,   662,   270,   271,   272,     0,   273,   274,     0,     0,
     663,   276,   277,     0,     0,   278,   279,   595,   280,   596,
     664,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   665,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     666,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   597,   328,   329,   330,   667,   332,   333,   334,   335,
     336,   337,   338,   339,   340,    20,   341,   342,   343,   344,
     345,   668,   346,   347,   348,   349,   350,   598,   351,   352,
     669,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   670,     0,   368,   369,    24,
     370,   599,   371,   372,   373,   374,   375,     0,   671,   672,
       0,     0,   378,   379,   673,   381,   674,   675,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   676,     0,   395,   396,   397,   398,   399,   600,
     677,     0,   402,   601,   403,   404,   405,   406,     0,     0,
     407,     0,    27,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   678,     0,    28,     0,     0,     0,     0,
     679,   680,     0,     0,     0,     0,     0,     0,     0,   682,
    2388,     0,     0,     0,   683,   619,   620,   467,   621,   622,
     623,   624,   625,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,   578,   111,   112,   113,   114,
     626,   579,   627,   628,     0,   118,   119,   120,   121,   122,
     629,   630,   123,   124,   631,   632,   127,     0,   128,   129,
     130,   131,   633,     0,   634,     0,   133,   134,   135,   136,
     137,   581,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   582,   147,   148,   149,   635,   636,   637,
     638,   639,   640,   641,   150,   151,   152,   153,   154,   155,
     642,   643,   158,   644,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   645,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   646,   186,   187,
     188,   647,   648,   190,     0,   191,   192,   649,   194,     0,
     195,     0,   196,   584,     0,   585,   197,   198,   199,   200,
       0,   201,   650,     0,   203,   204,     0,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,   587,   221,   222,   223,
     224,   225,   651,   652,     0,   653,     0,   229,   588,   589,
     230,   590,   231,   232,   233,   234,   235,     0,     0,   236,
     654,   591,   238,   592,     0,   239,   240,   241,   655,   656,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   657,   593,   658,   260,
     261,   262,   263,   659,   264,   265,   594,   266,   660,   661,
     268,   662,   270,   271,   272,     0,   273,   274,     0,     0,
     663,   276,   277,     0,     0,   278,   279,   595,   280,   596,
     664,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   665,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     666,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   597,   328,   329,   330,   667,   332,   333,   334,   335,
     336,   337,   338,   339,   340,    20,   341,   342,   343,   344,
     345,   668,   346,   347,   348,   349,   350,   598,   351,   352,
     669,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   670,     0,   368,   369,    24,
     370,   599,   371,   372,   373,   374,   375,     0,   671,   672,
       0,     0,   378,   379,   673,   381,   674,   675,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   676,     0,   395,   396,   397,   398,   399,   600,
     677,     0,   402,   601,   403,   404,   405,   406,     0,     0,
     407,     0,    27,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   678,     0,    28,     0,     0,     0,     0,
     679,   680,     0,     0,     0,     0,     0,     0,     0,   682,
       0,     0,     0,     0,   683,   619,   620,   467,   621,   622,
     623,   624,   625,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,   578,   111,   112,   113,   114,
     626,   579,   627,   628,  1354,   118,   119,   120,   121,   122,
     629,   630,   123,   124,   631,   632,   127,     0,   128,   129,
     130,   131,   633,     0,   634,     0,   133,   134,   135,   136,
     137,   581,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   582,   147,   148,   149,   635,   636,   637,
     638,   639,   640,   641,   150,   151,   152,   153,   154,   155,
     642,   643,   158,   644,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   645,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   646,   186,   187,
     188,   647,   648,   190,     0,   191,   192,   649,   194,     0,
     195,     0,   196,   584,  1355,   585,   197,   198,   199,   200,
       0,   201,   650,     0,   203,   204,     0,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,   587,   221,   222,   223,
     224,   225,   651,   652,     0,   653,     0,   229,   588,   589,
     230,   590,   231,   232,   233,   234,   235,     0,  1356,   236,
     654,   591,   238,   592,     0,   239,   240,   241,   655,   656,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   657,   593,   658,   260,
     261,   262,   263,   659,   264,   265,   594,   266,   660,   661,
     268,   662,   270,   271,   272,     0,   273,   274,     0,     0,
     663,   276,   277,     0,     0,   278,   279,   595,   280,   596,
     664,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   665,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     666,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   597,   328,   329,   330,   667,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   668,   346,   347,   348,   349,   350,   598,   351,   352,
     669,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   670,     0,   368,   369,     0,
     370,   599,   371,   372,   373,   374,   375,     0,   671,   672,
       0,  1357,   378,   379,   673,   381,   674,   675,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   676,     0,   395,   396,   397,   398,   399,   400,
     677,     0,   402,   601,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   678,     0,     0,     0,     0,     0,     0,
     679,   680,     0,     0,     0,     0,     0,     0,     0,   682,
       0,     0,     0,     0,   683,   619,   620,   467,   621,   622,
     623,   624,   625,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,   578,   111,   112,   113,   114,
     626,   579,   627,   628,     0,   118,   119,   120,   121,   122,
     629,   630,   123,   124,   631,   632,   127,     0,   128,   129,
     130,   131,   633,     0,   634,     0,   133,   134,   135,   136,
     137,   581,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   582,   147,   148,   149,   635,   636,   637,
     638,   639,   640,   641,   150,   151,   152,   153,   154,   155,
     642,   643,   158,   644,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   645,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   646,   186,   187,
     188,   647,   648,   190,     0,   191,   192,   649,   194,     0,
     195,     0,   196,   584,     0,   585,   197,   198,   199,   200,
       0,   201,   650,     0,   203,   204,     0,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,   587,   221,   222,   223,
     224,   225,   651,   652,     0,   653,     0,   229,   588,   589,
     230,   590,   231,   232,   233,   234,   235,     0,     0,   236,
     654,   591,   238,   592,     0,   239,   240,   241,   655,   656,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   657,   593,   658,   260,
     261,   262,   263,   659,   264,   265,   594,   266,   660,   661,
     268,   662,   270,   271,   272,     0,   273,   274,     0,     0,
     663,   276,   277,     0,     0,   278,   279,   595,   280,   596,
     664,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   665,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     666,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   597,   328,   329,   330,   667,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   668,   346,   347,   348,   349,   350,   598,   351,   352,
     669,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   670,     0,   368,   369,     0,
     370,   599,   371,   372,   373,   374,   375,     0,   671,   672,
       0,     0,   378,   379,   673,   381,   674,   675,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   676,     0,   395,   396,   397,   398,   399,   400,
     677,     0,   402,   601,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   678,     0,     0,     0,     0,     0,     0,
     679,   680,   681,     0,     0,     0,     0,     0,     0,   682,
       0,     0,     0,     0,   683,   619,   620,   467,   621,   622,
     623,   624,   625,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,  1144,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,   578,   111,   112,   113,   114,
     626,   579,   627,   628,     0,   118,   119,   120,   121,   122,
     629,   630,   123,   124,   631,   632,   127,     0,   128,   129,
     130,   131,   633,     0,   634,     0,   133,   134,   135,   136,
     137,   581,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   582,   147,   148,   149,   635,   636,   637,
     638,   639,   640,   641,   150,   151,   152,   153,   154,   155,
     642,   643,   158,   644,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   645,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   646,   186,   187,
     188,   647,   648,   190,     0,   191,   192,   649,   194,     0,
     195,     0,   196,   584,     0,   585,   197,   198,   199,   200,
       0,   201,   650,     0,   203,   204,     0,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,   587,   221,   222,   223,
     224,   225,   651,   652,     0,   653,     0,   229,   588,   589,
     230,   590,   231,   232,   233,   234,   235,     0,     0,   236,
     654,   591,   238,   592,     0,   239,   240,   241,   655,   656,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   657,   593,   658,   260,
     261,   262,   263,   659,   264,   265,   594,   266,   660,   661,
     268,   662,   270,   271,   272,     0,   273,   274,     0,     0,
     663,   276,   277,     0,     0,   278,   279,   595,   280,   596,
     664,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   665,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     666,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   597,   328,   329,   330,   667,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   668,   346,   347,   348,   349,   350,   598,   351,   352,
     669,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   670,     0,   368,   369,     0,
     370,   599,   371,   372,   373,   374,   375,     0,   671,   672,
       0,     0,   378,   379,   673,   381,   674,   675,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   676,     0,   395,   396,   397,   398,   399,   400,
     677,     0,   402,   601,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   678,     0,     0,     0,     0,     0,     0,
     679,   680,     0,     0,     0,     0,     0,     0,     0,   682,
       0,     0,     0,     0,   683,   619,   620,   467,   621,   622,
     623,   624,   625,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,   578,   111,   112,   113,   114,
     626,   579,   627,   628,     0,   118,   119,   120,   121,   122,
     629,   630,   123,   124,   631,   632,   127,     0,   128,   129,
     130,   131,   633,     0,   634,     0,   133,   134,   135,   136,
     137,   581,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   582,   147,   148,   149,   635,   636,   637,
     638,   639,   640,   641,   150,   151,   152,   153,   154,   155,
     642,   643,   158,   644,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   645,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   646,   186,   187,
     188,   647,   648,   190,     0,   191,   192,   649,   194,     0,
     195,     0,   196,   584,     0,   585,   197,   198,   199,   200,
       0,   201,   650,     0,   203,   204,     0,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,   587,   221,   222,   223,
     224,   225,   651,   652,     0,   653,     0,   229,   588,   589,
     230,   590,   231,   232,   233,   234,   235,     0,     0,   236,
     654,   591,   238,   592,     0,   239,   240,   241,   655,   656,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   657,   593,   658,   260,
     261,   262,   263,   659,   264,   265,   594,   266,   660,   661,
     268,   662,   270,   271,   272,     0,   273,   274,     0,     0,
     663,   276,   277,     0,     0,   278,   279,   595,   280,   596,
     664,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   665,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     666,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   597,   328,   329,   330,   667,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   668,   346,   347,   348,   349,   350,   598,   351,   352,
     669,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   670,     0,   368,   369,     0,
     370,   599,   371,   372,   373,   374,   375,     0,   671,   672,
       0,     0,   378,   379,   673,   381,   674,   675,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   676,     0,   395,   396,   397,   398,   399,   400,
     677,     0,   402,   601,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   678,     0,     0,     0,     0,     0,     0,
     679,   680,     0,     0,     0,     0,     0,     0,     0,   682,
    1344,     0,     0,     0,   683,   619,   620,   467,   621,   622,
     623,   624,   625,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,   578,   111,   112,   113,   114,
     626,   579,   627,   628,     0,   118,   119,   120,   121,   122,
     629,   630,   123,   124,   631,   632,   127,     0,   128,   129,
     130,   131,   633,     0,   634,     0,   133,   134,   135,   136,
     137,   581,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   582,   147,   148,   149,   635,   636,   637,
     638,   639,   640,   641,   150,   151,   152,   153,   154,   155,
     642,   643,   158,   644,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   645,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   646,   186,   187,
     188,   647,   648,   190,     0,   191,   192,   649,   194,     0,
     195,     0,   196,   584,  1355,   585,   197,   198,   199,   200,
       0,   201,   650,     0,   203,   204,     0,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,   587,   221,   222,   223,
     224,   225,   651,   652,     0,   653,     0,   229,   588,   589,
     230,   590,   231,   232,   233,   234,   235,     0,     0,   236,
     654,   591,   238,   592,     0,   239,   240,   241,   655,   656,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   657,   593,   658,   260,
     261,   262,   263,   659,   264,   265,   594,   266,   660,   661,
     268,   662,   270,   271,   272,     0,   273,   274,     0,     0,
     663,   276,   277,     0,     0,   278,   279,   595,   280,   596,
     664,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   665,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     666,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   597,   328,   329,   330,   667,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   668,   346,   347,   348,   349,   350,   598,   351,   352,
     669,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   670,     0,   368,   369,     0,
     370,   599,   371,   372,   373,   374,   375,     0,   671,   672,
       0,     0,   378,   379,   673,   381,   674,   675,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   676,     0,   395,   396,   397,   398,   399,   400,
     677,     0,   402,   601,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   678,     0,     0,     0,     0,     0,     0,
     679,   680,     0,     0,     0,     0,     0,     0,     0,   682,
       0,     0,     0,     0,   683,   619,   620,   467,   621,   622,
     623,   624,   625,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,   578,   111,   112,   113,   114,
     626,   579,   627,   628,     0,   118,   119,   120,   121,   122,
     629,   630,   123,   124,   631,   632,   127,     0,   128,   129,
     130,   131,   633,     0,   634,     0,   133,   134,   135,   136,
     137,   581,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   582,   147,   148,   149,   635,   636,   637,
     638,   639,   640,   641,   150,   151,   152,   153,   154,   155,
     642,   643,   158,   644,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   645,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   646,   186,   187,
     188,   647,   648,   190,     0,   191,   192,   649,   194,     0,
     195,     0,   196,   584,     0,   585,   197,   198,   199,   200,
       0,   201,   650,     0,   203,   204,     0,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,   587,   221,   222,   223,
     224,   225,   651,   652,     0,   653,     0,   229,   588,   589,
     230,   590,   231,   232,   233,   234,   235,     0,     0,   236,
     654,   591,   238,   592,     0,   239,   240,   241,   655,   656,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   657,   593,   658,   260,
     261,   262,   263,   659,   264,   265,   594,   266,   660,   661,
     268,   662,   270,   271,   272,     0,   273,   274,     0,     0,
     663,   276,   277,     0,     0,   278,   279,   595,   280,   596,
     664,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   665,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     666,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   597,   328,   329,   330,   667,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   668,   346,   347,   348,   349,   350,   598,   351,   352,
     669,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   670,     0,   368,   369,     0,
     370,   599,   371,   372,   373,   374,   375,     0,   671,   672,
       0,     0,   378,   379,   673,   381,   674,   675,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   676,     0,   395,   396,   397,   398,   399,   400,
     677,  1975,   402,   601,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   678,     0,     0,     0,     0,     0,     0,
     679,   680,     0,     0,     0,     0,     0,     0,     0,   682,
       0,     0,     0,     0,   683,   619,   620,   467,   621,   622,
     623,   624,   625,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,   578,   111,   112,   113,   114,
     626,   579,   627,   628,     0,   118,   119,   120,   121,   122,
     629,   630,   123,   124,   631,   632,   127,     0,   128,   129,
     130,   131,   633,     0,   634,     0,   133,   134,   135,   136,
     137,   581,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   582,   147,   148,   149,   635,   636,   637,
     638,   639,   640,   641,   150,   151,   152,   153,   154,   155,
     642,   643,   158,   644,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   645,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   646,   186,   187,
     188,   647,   648,   190,     0,   191,   192,   649,   194,     0,
     195,     0,   196,   584,     0,   585,   197,   198,   199,   200,
       0,   201,   650,     0,   203,   204,     0,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,   587,   221,   222,   223,
     224,   225,   651,   652,     0,   653,     0,   229,   588,   589,
     230,   590,   231,   232,   233,   234,   235,     0,     0,   236,
     654,   591,   238,   592,     0,   239,   240,   241,   655,   656,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   657,   593,   658,   260,
     261,   262,   263,   659,   264,   265,   594,   266,   660,   661,
     268,   662,   270,   271,   272,     0,   273,   274,     0,     0,
     663,   276,   277,     0,     0,   278,   279,   595,   280,   596,
     664,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   665,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     666,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   597,   328,   329,   330,   667,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   668,   346,   347,   348,   349,   350,   598,   351,   352,
     669,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   670,     0,   368,   369,     0,
     370,   599,   371,   372,   373,   374,   375,     0,   671,   672,
       0,     0,   378,   379,   673,   381,   674,   675,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   676,     0,   395,   396,   397,   398,   399,   400,
     677,     0,   402,   601,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   678,     0,     0,     0,     0,     0,     0,
     679,   680,     0,     0,     0,     0,     0,     0,     0,   682,
       0,     0,     0,     0,   683,   619,   620,   467,   621,   622,
     623,   624,   625,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,   578,   111,   112,   113,   114,
     626,   579,   627,   628,     0,   118,   119,   120,   121,   122,
     629,   630,   123,   124,   631,   632,   127,     0,   128,   129,
     130,   131,   633,     0,   634,     0,   133,   134,   135,   136,
     137,   581,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   582,   147,   148,   149,   635,   636,   637,
     638,   639,   640,   641,   150,   151,   152,   153,   154,   155,
     642,   643,   158,   644,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   645,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   646,   186,   187,
     188,   647,   648,   190,     0,   191,   192,   649,   194,     0,
     195,     0,   196,   584,     0,   585,   197,   198,   199,   200,
       0,   201,   650,     0,   203,   204,     0,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,   587,   221,   222,   223,
     224,   225,   651,   652,     0,   653,     0,   229,   588,   589,
     230,   590,   231,   232,   233,   234,   235,     0,     0,   236,
     654,   591,   238,   592,     0,   239,   240,   241,   655,   656,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   657,   593,   658,   260,
     261,   262,   263,   659,   264,   265,   594,   266,   660,   661,
     268,   662,   270,   271,   272,     0,   273,   274,     0,     0,
     663,   276,   277,     0,     0,   278,   279,   595,   280,   596,
     664,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   665,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     666,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   597,   328,   329,   330,   667,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   668,   346,   347,   348,   349,   350,   598,   351,   352,
     669,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   670,     0,   368,   369,     0,
     370,   599,   371,   372,   373,   374,   375,     0,   671,   672,
       0,     0,   378,   379,   673,   381,   674,   675,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   676,     0,   395,   396,   397,   398,   399,   400,
     677,     0,   402,   601,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   678,     0,     0,     0,     0,     0,     0,
    1147,  1148,     0,     0,     0,     0,     0,     0,     0,   682,
       0,     0,     0,     0,   683,   619,  1478,   467,   621,   622,
     623,   624,   625,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,   578,   111,   112,   113,   114,
     626,   579,   627,   628,     0,   118,   119,   120,   121,   122,
     629,   630,   123,   124,   631,   632,   127,     0,   128,   129,
     130,   131,   633,     0,   634,     0,   133,   134,   135,   136,
     137,   581,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   582,   147,   148,   149,   635,   636,   637,
     638,   639,   640,   641,   150,   151,   152,   153,   154,   155,
     642,   643,   158,   644,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   645,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   646,   186,   187,
     188,   647,   648,   190,     0,   191,   192,   649,   194,     0,
     195,     0,   196,   584,     0,   585,   197,   198,   199,   200,
       0,   201,   650,     0,   203,   204,     0,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,   587,   221,   222,   223,
     224,   225,   651,   652,     0,   653,     0,   229,   588,   589,
     230,   590,   231,   232,   233,   234,   235,     0,     0,   236,
     654,   591,   238,   592,     0,   239,   240,   241,   655,   656,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   657,   593,   658,   260,
     261,   262,   263,   659,   264,   265,   594,   266,   660,   661,
     268,   662,   270,   271,   272,     0,   273,   274,     0,     0,
     663,   276,   277,     0,     0,   278,   279,   595,   280,   596,
     664,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   665,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     666,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   597,   328,   329,   330,   667,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   668,   346,   347,   348,   349,   350,   598,   351,   352,
     669,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   670,     0,   368,   369,     0,
     370,   599,   371,   372,   373,   374,   375,     0,   671,   672,
       0,     0,   378,   379,   673,   381,   674,   675,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   676,     0,   395,   396,   397,   398,   399,   400,
     677,     0,   402,   601,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   678,     0,     0,     0,     0,     0,     0,
     679,   680,     0,     0,     0,     0,     0,     0,     0,   682,
       0,     0,     0,     0,   683,   619,   620,   467,   621,   622,
     623,   624,   625,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,   578,   111,   112,   113,   114,
     626,   579,   627,   628,     0,   118,   119,   120,   121,   122,
     629,   630,   123,   124,   631,   632,   127,     0,   128,   129,
     130,   131,   633,     0,   634,     0,   133,   134,   135,   136,
     137,   581,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   582,   147,   148,   149,   635,   636,   637,
     638,   639,   640,   641,   150,   151,   152,   153,   154,   155,
     642,   643,   158,   644,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   645,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   646,   186,   187,
     188,   647,   648,   190,     0,   191,   192,   649,   194,     0,
     195,     0,   196,   584,     0,   585,   197,   198,   199,   200,
       0,   201,   650,     0,   203,   204,     0,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,   587,   221,   222,   223,
     224,   225,   651,   652,     0,   653,     0,   229,   588,   589,
     230,   590,   231,   232,   233,   234,   235,     0,     0,   236,
     654,   591,   238,   592,     0,   239,   240,   241,   655,   656,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   657,   593,   658,   260,
     261,   262,   263,   659,   264,   265,   594,   266,   660,   661,
     268,   662,   270,   271,   272,     0,   273,   274,     0,     0,
     663,   276,   277,     0,     0,   278,   279,   595,   280,   596,
     664,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   665,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     666,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   597,   328,   329,   330,   667,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   668,   346,   347,   348,   349,   350,   598,   351,   352,
     669,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   670,     0,   368,   369,     0,
     370,   599,   371,   372,   373,   374,   375,     0,   671,   672,
       0,     0,   378,   379,   673,   381,   674,   675,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   676,     0,   395,   396,   397,   398,   399,   400,
     677,     0,   402,   601,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   678,     0,     0,     0,     0,     0,     0,
     679,   680,     0,     0,     0,     0,     0,     0,     0,  2276,
       0,     0,     0,     0,   683,   619,   620,   467,   621,   622,
     623,   624,   625,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,   578,   111,   112,   113,  2510,
     626,   579,   627,   628,     0,   118,   119,   120,   121,   122,
     629,   630,   123,   124,   631,   632,   127,     0,   128,   129,
     130,   131,   633,     0,   634,     0,   133,   134,   135,   136,
     137,   581,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   582,   147,   148,  2511,   635,   636,   637,
     638,   639,   640,   641,   150,   151,   152,   153,   154,   155,
     642,   643,   158,   644,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   645,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   646,   186,   187,
     188,   647,   648,   190,     0,   191,   192,   649,   194,     0,
     195,     0,   196,   584,     0,   585,   197,   198,   199,   200,
       0,   201,   650,     0,   203,   204,     0,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,   587,   221,   222,   223,
     224,   225,   651,   652,     0,   653,     0,   229,   588,   589,
     230,   590,   231,   232,   233,   234,   235,     0,     0,   236,
     654,   591,   238,   592,     0,   239,   240,   241,   655,   656,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   657,   593,   658,   260,
     261,   262,   263,   659,   264,   265,   594,   266,   660,   661,
     268,   662,   270,   271,   272,     0,   273,   274,     0,     0,
     663,   276,   277,     0,     0,   278,   279,   595,   280,   596,
     664,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   665,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     666,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   597,   328,   329,   330,   667,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   668,   346,   347,   348,   349,   350,   598,   351,   352,
     669,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   670,     0,   368,   369,     0,
     370,   599,   371,   372,   373,   374,   375,     0,   671,   672,
       0,     0,   378,   379,   673,   381,   674,   675,   383,   384,
     385,   386,  2512,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   676,     0,   395,   396,   397,   398,   399,   400,
     677,     0,   402,   601,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   678,     0,     0,     0,     0,     0,     0,
     679,   680,     0,     0,     0,     0,     0,     0,     0,   682,
       0,     0,     0,     0,   683,   619,   620,   467,   621,   622,
     623,   624,   625,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,   578,   111,   112,   113,   114,
     626,   579,   627,   628,     0,   118,   119,   120,   121,   122,
     629,   630,   123,   124,   631,   632,   127,     0,   128,   129,
     130,   131,   633,     0,   634,     0,   133,   134,   135,   136,
     137,   581,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   582,   147,   148,  2511,   635,   636,   637,
     638,   639,   640,   641,   150,   151,   152,   153,   154,   155,
     642,   643,   158,   644,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   645,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   646,   186,   187,
     188,   647,   648,   190,     0,   191,   192,   649,   194,     0,
     195,     0,   196,   584,     0,   585,   197,   198,   199,   200,
       0,   201,   650,     0,   203,   204,     0,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,   587,   221,   222,   223,
     224,   225,   651,   652,     0,   653,     0,   229,   588,   589,
     230,   590,   231,   232,   233,   234,   235,     0,     0,   236,
     654,   591,   238,   592,     0,   239,   240,   241,   655,   656,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   657,   593,   658,   260,
     261,   262,   263,   659,   264,   265,   594,   266,   660,   661,
     268,   662,   270,   271,   272,     0,   273,   274,     0,     0,
     663,   276,   277,     0,     0,   278,   279,   595,   280,   596,
     664,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   665,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     666,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   597,   328,   329,   330,   667,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   668,   346,   347,   348,   349,   350,   598,   351,   352,
     669,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   670,     0,   368,   369,     0,
     370,   599,   371,   372,   373,   374,   375,     0,   671,   672,
       0,     0,   378,   379,   673,   381,   674,   675,   383,   384,
     385,   386,  2512,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   676,     0,   395,   396,   397,   398,   399,   400,
     677,     0,   402,   601,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   678,     0,     0,     0,     0,     0,     0,
     679,   680,     0,     0,     0,     0,     0,     0,     0,   682,
       0,     0,     0,     0,   683,   619,   620,   467,   621,   622,
     623,   624,   625,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,   578,   111,   112,   113,   114,
     626,   579,   627,   628,     0,   118,   119,   120,   121,   122,
     629,   630,   123,   124,   631,   632,   127,     0,   128,   129,
     130,   131,   633,     0,   634,     0,   133,   134,   135,   136,
     137,   581,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   582,   147,   148,   149,   635,   636,   637,
     638,   639,   640,   641,   150,   151,   152,   153,   154,   155,
     642,   643,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   645,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   646,   186,   187,
     188,   647,   648,   190,     0,   191,   192,   649,   194,     0,
     195,     0,   196,   584,     0,   585,   197,   198,   199,   200,
       0,   201,   650,     0,   203,   204,     0,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,   587,   221,   222,   223,
     224,   225,   651,   652,     0,   653,     0,   229,   588,   589,
     230,   590,   231,   232,   233,   234,   235,     0,     0,   236,
     654,   591,   238,   592,     0,   239,   240,   241,   655,   656,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   657,   593,   658,   260,
     261,   262,   263,     0,   264,   265,   594,   266,   660,   661,
     268,   662,   270,   271,   272,     0,   273,   274,     0,     0,
     663,   276,   277,     0,     0,   278,   279,   595,   280,   596,
     664,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   665,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     666,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   597,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   668,   346,   347,   348,   349,   350,   598,   351,   352,
     669,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   670,     0,   368,   369,     0,
     370,   599,   371,   372,   373,   374,   375,     0,   671,   672,
       0,     0,   378,   379,   673,   381,   674,   675,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   676,     0,   395,   396,   397,   398,   399,   400,
     677,     0,   402,   601,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,     0,     0,     0,     0,     0,     0,
    1337,  1338,     0,     0,     0,     0,     0,     0,     0,  1339,
       0,     0,     0,     0,   683,   619,   620,   467,   621,   622,
     623,   624,   625,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,   578,   111,   112,   113, -1454,
     626,   579,   627,   628,     0,   118,   119,   120,   121,   122,
     629,   630,   123,   124,   631,   632,   127,     0,   128,   129,
     130,   131,   633,     0,   634,     0,   133,   134,   135,   136,
     137,   581,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   582,   147,   148,  2511,   635,   636,   637,
     638,   639,   640,   641,   150,   151,   152,   153,   154,   155,
     642,   643,   158,   644,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   645,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   646,   186,   187,
     188,   647,   648,   190,     0,   191,   192,   649,   194,     0,
     195,     0,   196,   584,     0,   585,   197,   198,   199,   200,
       0,   201,   650,     0,   203,   204,     0,   205,   206,   207,
     208,   209, -1454,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,   587,   221,   222,   223,
     224,   225,   651,   652,     0,   653,     0,   229,     0,     0,
     230,   590,   231,   232,   233,   234,   235,     0,     0,   236,
     654,   591,   238, -1454,     0,   239,   240,   241,   655,   656,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   657,   593,   658,   260,
     261,   262,   263,   659,   264,   265,     0,   266,   660,   661,
     268,   662,   270,   271,   272,     0,   273,   274,     0,     0,
     663,   276,   277,     0,     0,   278,   279,   595,   280,   596,
     664,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   665,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     666,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   597,   328,   329,   330,   667,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   668,   346,   347,   348,   349,   350, -1454,   351,   352,
     669,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   670,     0,   368,   369,     0,
     370,   599,   371,   372,   373,   374,   375,     0,   671,   672,
       0,     0,   378,   379,   673,   381,   674,   675,   383,   384,
     385,   386,  2512,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   676,     0,   395,   396,   397,   398,   399,   400,
     677,     0,   402,   601,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427, -1454,     0,     0,     0,     0,     0,     0,
     679,   680,     0,     0,   619,   620,   467,   621,   622,   682,
     624,   625,     0,     0,   683,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,   578,   111,   112,   113,   114,   626,
     579,   627,   628,     0,   118,   119,   120,   121,   122,   629,
     630,   123,   124,   631,   632,   127,     0,   128,   129,   130,
     131,   633,     0,   634,     0,   133,   134,   135,   136,   137,
     581,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,   582,   147,   148,   149,   635,   636,   637,   638,
     639,   640,   641,   150,   151,   152,   153,   154,   155,   642,
     643,   158,     0,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,     0,     0,   170,   171,
     645,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,   184,   646,   186,   187,   188,
     647,   648,   190,     0,   191,   192,   649,   194,     0,   195,
       0,   196,   584,     0,   585,   197,   198,   199,   200,     0,
     201,   650,     0,   203,   204,     0,   205,   206,   207,   208,
     209,   586,   210,   211,   212,   213,     0,   214,   215,   216,
     217,   218,   219,     0,   220,   587,   221,   222,   223,   224,
     225,   651,   652,     0,   653,     0,   229,   588,   589,   230,
     590,   231,   232,   233,   234,   235,     0,     0,   236,   654,
     591,   238,   592,     0,   239,   240,   241,   655,   656,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   657,   593,   658,   260,   261,
     262,   263,     0,   264,   265,   594,   266,   660,   661,   268,
     662,   270,   271,   272,     0,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,   279,   595,   280,   596,   664,
     282,   283,   284,   285,   286,   287,   288,   289,   290,     0,
     291,   292,   665,   294,   295,   296,   455,   298,   299,     0,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   666,
     310,   311,   312,   313,     0,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,     0,   326,   327,
     597,   328,   329,   330,  1467,  1468,   333,   334,   335,   336,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
     668,   346,   347,   348,   349,   350,   598,   351,   352,   669,
     354,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   670,     0,   368,   369,     0,   370,
     599,   371,   372,   373,   374,   375,     0,   671,   672,     0,
       0,   378,   379,   673,   381,   674,   675,   383,   384,   385,
     386,   387,   388,   389,     0,     0,   390,   391,   392,   393,
     394,   676,     0,   395,   396,   397,   398,   399,   400,   677,
       0,   402,   601,   403,   404,   405,   406,     0,     0,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,     0,     0,     0,     0,     0,     0,  1469,
    1470,     0,     0,     0,     0,     0,     0,     0,  1339,     0,
       0,     0,     0,   683,   619,   620,   467,   621,   622,   623,
     624,   625,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,   578,   111,   112,   113,   114,   626,
     579,   627,   628,     0,   118,   119,   120,   121,   122,   629,
     630,   123,   124,   631,   632,   127,     0,   128,   129,   130,
     131,   633,     0,   634,     0,   133,   134,   135,   136,   137,
     581,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,   582,   147,   148,   149,   635,   636,   637,   638,
     639,   640,   641,   150,   151,   152,   153,   154,   155,   642,
     643,   158,     0,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,     0,     0,   170,   171,
     645,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,   184,   646,   186,   187,   188,
     647,   648,   190,     0,   191,   192,   649,   194,     0,   195,
       0,   196,   584,     0,   585,   197,   198,   199,   200,     0,
     201,   650,     0,   203,   204,     0,   205,   206,   207,   208,
     209,   586,   210,   211,   212,   213,     0,   214,   215,   216,
     217,   218,   219,     0,   220,   587,   221,   222,   223,   224,
     225,   651,   652,     0,   653,     0,   229,     0,   589,   230,
     590,   231,   232,   233,   234,   235,     0,     0,   236,   654,
     591,   238,   592,     0,   239,   240,   241,   655,   656,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   657,   593,   658,   260,   261,
     262,   263,     0,   264,   265,   594,   266,   660,   661,   268,
     662,   270,   271,   272,     0,   273,   274,     0,     0,   663,
     276,   277,     0,     0,   278,   279,   595,   280,   596,   664,
     282,   283,   284,   285,   286,   287,   288,   289,   290,     0,
     291,   292,   665,   294,   295,   296,   455,   298,   299,     0,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   666,
     310,   311,   312,   313,     0,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,     0,   326,   327,
     597,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
     668,   346,   347,   348,   349,   350,   598,   351,   352,   669,
     354,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   670,     0,   368,   369,     0,   370,
     599,   371,   372,   373,   374,   375,     0,   671,   672,     0,
       0,   378,   379,   673,   381,   674,   675,   383,   384,   385,
     386,   387,   388,   389,     0,     0,   390,   391,   392,   393,
     394,   676,     0,   395,   396,   397,   398,   399,   400,   677,
       0,   402,   601,   403,   404,   405,   406,     0,     0,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,     0,     0,     0,     0,     0,     0,  1337,
    1338,     0,     0,     0,     0,     0,     0,     0,  1339,     0,
       0,     0,     0,   683,   619,   620,   467,   621,   622,   623,
     624,   625,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,   578,   111,   112,   113,     0,   626,
     579,   627,   628,     0,   118,   119,   120,   121,   122,   629,
     630,   123,   124,   631,   632,   127,     0,   128,   129,   130,
     131,   633,     0,   634,     0,   133,   134,   135,   136,   137,
     581,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,   582,   147,   148,   149,   635,   636,   637,   638,
     639,   640,   641,   150,   151,   152,   153,   154,   155,   642,
     643,   158,   644,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,     0,     0,   170,   171,
     645,   173,   174,     0,   175,   176,   177,     0,   178,     0,
     180,     0,   181,   182,   183,   184,   646,   186,   187,   188,
     647,   648,   190,     0,   191,   192,   649,   194,     0,   195,
       0,   196,   584,     0,   585,   197,   198,   199,   200,     0,
     201,   650,     0,   203,   204,     0,   205,   206,   207,   208,
     209,     0,   210,   211,   212,   213,     0,   214,   215,   216,
     217,   218,   219,     0,   220,   587,   221,   222,   223,   224,
     225,   651,   652,     0,   653,     0,   229,     0,     0,   230,
     590,   231,   232,   233,   234,   235,     0,     0,   236,   654,
     591,   238,     0,     0,   239,   240,   241,   655,   656,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   657,   593,   658,   260,   261,
     262,   263,   659,   264,   265,     0,   266,   660,   661,   268,
     662,   270,   271,   272,     0,   273,   274,     0,     0,   663,
     276,   277,     0,     0,   278,   279,   595,   280,   596,   664,
     282,   283,   284,   285,   286,   287,   288,   289,   290,     0,
     291,   292,   665,   294,   295,   296,   455,   298,   299,     0,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   666,
     310,   311,   312,   313,     0,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,     0,   326,   327,
     597,   328,   329,   330,   667,   332,   333,   334,   335,   336,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
     668,   346,   347,   348,   349,   350,     0,   351,   352,   669,
     354,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   670,     0,   368,   369,     0,   370,
     599,   371,   372,   373,   374,   375,     0,   671,   672,     0,
       0,   378,   379,   673,   381,   674,   675,   383,   384,   385,
     386,   387,   388,   389,     0,     0,   390,   391,   392,   393,
     394,   676,     0,   395,   396,   397,   398,   399,   400,   677,
       0,   402,   601,   403,   404,   405,   406,     0,     0,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,     0,     0,     0,     0,     0,     0,   679,
     680,    93,     0,     0,     0,     0,     0,     0,   682,     0,
       0,     0,     0,   683,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   103,   104,   105,     0,     0,
       0,     0,     0,  1947,     0,   106,   107,     0,   108,   109,
     110,     0,   111,   112,   113,   114,   115,     0,   116,   117,
       0,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   133,   134,   135,   136,   137,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,  -550,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     150,   151,   152,   153,   154,   155,   156,   157,   158,     0,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,     0,     0,   170,   171,   172,   173,   174,
       0,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,   184,   185,   186,   187,   188,   189,     0,   190,
       0,   191,   192,   193,   194,     0,   195,     0,   196,     0,
       0,  -550,   197,   198,   199,   200,     0,   201,   202,     0,
     203,   204,     0,   205,   206,   207,   208,   209,     0,   210,
     211,   212,   213,     0,   214,   215,   216,   217,   218,   219,
       0,   220,  -550,   221,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   229,     0,     0,   230,  -550,   231,   232,
     233,   234,   235,     0,     0,   236,   237,  -550,   238,     0,
       0,   239,   240,   241,     0,     0,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,  -550,   259,   260,   261,   262,   263,     0,
     264,   265,     0,   266,     0,   267,   268,   269,   270,   271,
     272,     0,   273,   274,     0,     0,   275,   276,   277,     0,
       0,   278,   279,     0,   280,     0,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   291,   292,   293,
     294,   295,   296,   455,   298,   299,     0,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,     0,   326,   327,  -550,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,     0,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,     0,   370,     0,   371,   372,
     373,   374,   375,     0,   376,   377,     0,     0,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,   388,
     389,     0,     0,   390,   391,   392,   393,   394,     0,     0,
     395,   396,   397,   398,   399,   400,   401,     0,   402,     0,
     403,   404,   405,   406,     0,     0,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
       0,     0,   619,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   748,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,   578,   111,   112,   113,   114,   115,   579,   116,
     117,     0,   118,   119,   120,   121,   122,     0,   630,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   633,
       0,   634,     0,   133,   134,   135,   136,   137,   581,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
     582,   147,   148,   149,   635,   636,   637,   638,   639,   640,
     641,   150,   151,   152,   153,   154,   155,   156,   157,   158,
       0,   159,     0,   160,   161,   162,   163,   164,   165,     0,
     166,   167,   168,   169,     0,     0,   170,   171,   172,   173,
     174,     0,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,   184,   185,   186,   187,   188,   647,     0,
     190,     0,   191,   192,   193,   194,     0,   195,     0,   196,
     584,     0,   585,   197,   198,   199,   200,     0,   201,   650,
       0,   203,   204,     0,   205,   206,   207,   208,   209,   586,
     210,   211,   212,   213,     0,   214,   215,   216,   217,   218,
     219,     0,   220,   587,   221,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   229,   588,   589,   230,   590,   231,
     232,   233,   234,   235,  1711,     0,   236,   654,   591,   238,
     592,     0,   239,   240,   241,   655,   656,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   593,   259,   260,   261,   262,   263,
       0,   264,   265,   594,   266,     0,   661,   268,   269,   270,
     271,   272,     0,   273,   274,     0,   496,   275,   276,   277,
       0,     0,   278,   279,   595,   280,   596,   664,   282,   283,
     284,   285,   286,   287,   288,   289,   290,     0,   291,   292,
     665,   294,   295,   296,   455,   298,   299,     0,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,     0,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,     0,   326,   327,   597,   328,
     329,   330,   331,  1712,   333,   334,   335,   336,   337,   338,
     339,   340,    20,   341,   342,   343,   344,   345,   668,   346,
     347,   348,   349,   350,   598,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   670,     0,   368,   369,    24,   370,   599,   371,
     372,   373,   374,   375,     0,   376,   377,     0,     0,   378,
     379,   673,   381,   674,     0,   383,   384,   385,   386,   387,
     388,   389,     0,     0,   390,   391,   392,   393,   394,   676,
       0,   395,   396,   397,   398,   399,   600,   401,     0,   402,
     601,   403,   404,   405,   406,     0,     0,   407,     0,    27,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,     0,    28,   619,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1713,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   103,   104,   105,
       0,     0,     0,     0,     0,     0,     0,   106,   107,     0,
     108,   109,   110,   578,   111,   112,   113,   114,   115,   579,
     116,   117,     0,   118,   119,   120,   121,   122,     0,   630,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     633,     0,   634,     0,   133,   134,   135,   136,   137,   581,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,   582,   147,   148,   149,   635,   636,   637,   638,   639,
     640,   641,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,     0,     0,   170,   171,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,   184,   185,   186,   187,   188,   647,
       0,   190,     0,   191,   192,   193,   194,     0,   195,     0,
     196,   584,     0,   585,   197,   198,   199,   200,     0,   201,
     650,     0,   203,   204,     0,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,     0,   214,   215,   216,   217,
     218,   219,     0,   220,   587,   221,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   229,   588,   589,   230,   590,
     231,   232,   233,   234,   235,  1711,     0,   236,   654,   591,
     238,   592,     0,   239,   240,   241,   655,   656,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   593,   259,   260,   261,   262,
     263,     0,   264,   265,   594,   266,     0,   661,   268,   269,
     270,   271,   272,     0,   273,   274,     0,   496,   275,   276,
     277,     0,     0,   278,   279,   595,   280,   596,   664,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   291,
     292,   665,   294,   295,   296,   455,   298,   299,     0,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   597,
     328,   329,   330,   331,  1712,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,   668,
     346,   347,   348,   349,   350,   598,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   670,     0,   368,   369,     0,   370,   599,
     371,   372,   373,   374,   375,     0,   376,   377,     0,     0,
     378,   379,   673,   381,   674,     0,   383,   384,   385,   386,
     387,   388,   389,     0,     0,   390,   391,   392,   393,   394,
     676,     0,   395,   396,   397,   398,   399,   400,   401,     0,
     402,   601,   403,   404,   405,   406,     0,     0,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,     0,   619,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1713,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   103,   104,   105,
       0,     0,     0,     0,     0,     0,     0,   106,   107,     0,
     108,   109,   110,   578,   111,   112,   113,   114,   115,   579,
     116,   117,     0,   118,   119,   120,   121,   122,     0,   630,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     633,     0,   634,     0,   133,   134,   135,   136,   137,   581,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,   582,   147,   148,   149,   635,   636,   637,   638,   639,
     640,   641,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,     0,     0,   170,   171,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,   184,   185,   186,   187,   188,   647,
       0,   190,     0,   191,   192,   193,   194,     0,   195,     0,
     196,   584,     0,   585,   197,   198,   199,   200,     0,   201,
     650,     0,   203,   204,     0,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,     0,   214,   215,   216,   217,
     218,   219,     0,   220,   587,   221,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   229,   588,   589,   230,   590,
     231,   232,   233,   234,   235,     0,     0,   236,   654,   591,
     238,   592,     0,   239,   240,   241,   655,   656,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   593,   259,   260,   261,   262,
     263,     0,   264,   265,   594,   266,     0,   661,   268,   269,
     270,   271,   272,     0,   273,   274,     0,     0,   275,   276,
     277,     0,     0,   278,   279,   595,   280,   596,   664,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   291,
     292,   665,   294,   295,   296,   455,   298,   299,     0,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   597,
     328,   329,   330,   331,  1712,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,   668,
     346,   347,   348,   349,   350,   598,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   670,     0,   368,   369,     0,   370,   599,
     371,   372,   373,   374,   375,     0,   376,   377,     0,     0,
     378,   379,   673,   381,   674,     0,   383,   384,   385,   386,
     387,   388,   389,     0,     0,   390,   391,   392,   393,   394,
     676,     0,   395,   396,   397,   398,   399,   400,   401,     0,
     402,   601,   403,   404,   405,   406,     0,     0,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,     0,   619,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   103,   104,   105,
       0,     0,     0,     0,     0,     0,     0,   106,   107,     0,
     108,   109,   110,   578,   111,   112,   113,   114,   115,   579,
     116,   117,     0,   118,   119,   120,   121,   122,     0,   630,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     633,     0,   634,     0,   133,   134,   135,   136,   137,   581,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,   582,   147,   148,   149,   635,   636,   637,   638,   639,
     640,   641,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,     0,     0,   170,   171,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,   184,   185,   186,   187,   188,   647,
       0,   190,     0,   191,   192,   193,   194,     0,   195,     0,
     196,   584,     0,   585,   197,   198,   199,   200,     0,   201,
     650,     0,   203,   204,     0,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,     0,   214,   215,   216,   217,
     218,   219,     0,   220,   587,   221,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   229,   588,   589,   230,   590,
     231,   232,   233,   234,   235,     0,     0,   236,   654,   591,
     238,   592,     0,   239,   240,   241,   655,   656,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   593,   259,   260,   261,   262,
     263,     0,   264,   265,   594,   266,     0,   661,   268,   269,
     270,   271,   272,     0,   273,   274,     0,     0,   275,   276,
     277,     0,     0,   278,   279,   595,   280,   596,   664,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   291,
     292,   665,   294,   295,   296,   455,   298,   299,     0,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   597,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,   668,
     346,   347,   348,   349,   350,   598,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   670,     0,   368,   369,     0,   370,   599,
     371,   372,   373,   374,   375,     0,   376,   377,     0,     0,
     378,   379,   673,   381,   674,     0,   383,   384,   385,   386,
     387,   388,   389,     0,     0,   390,   391,   392,   393,   394,
     676,     0,   395,   396,   397,   398,   399,   400,   401,     0,
     402,   601,   403,   404,   405,   406,     0,     0,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,     0,   577,   850,   467,     0,     0,     0,   624,
       0,     0,     0,     0,     0,     0,     0,  2288,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   103,   104,   105,
       0,     0,     0,     0,     0,     0,     0,   106,   107,     0,
     108,   109,   110,   578,   111,   112,   113,   114,   115,   579,
     116,   117,     0,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,   580,     0,   133,   134,   135,   136,   137,   581,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,   582,   147,   148,   149,     0,     0,     0,   583,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,     0,     0,   170,   171,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     851,   190,     0,   191,   192,   193,   194,     0,   195,     0,
     196,   584,     0,   585,   197,   198,   199,   200,     0,   201,
     202,     0,   203,   204,     0,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,     0,   214,   215,   216,   217,
     218,   219,     0,   220,   587,   221,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   229,   588,   589,   230,   590,
     231,   232,   233,   234,   235,     0,     0,   236,   237,   591,
     238,   592,     0,   239,   240,   241,     0,     0,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   593,   259,   260,   261,   262,
     263,     0,   264,   265,   594,   266,     0,   267,   268,   269,
     270,   271,   272,     0,   273,   274,   852,     0,   275,   276,
     277,     0,     0,   278,   279,   595,   280,   596,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   291,
     292,   293,   294,   295,   296,   455,   298,   299,     0,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   597,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   598,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,     0,   370,   599,
     371,   372,   373,   374,   375,     0,   376,   377,     0,     0,
     378,   379,   380,   381,   382,   853,   383,   384,   385,   386,
     387,   388,   389,     0,     0,   390,   391,   392,   393,   394,
       0,     0,   395,   396,   397,   398,   399,   400,   401,     0,
     402,   601,   403,   404,   405,   406,     0,     0,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,     0,   577,     0,     0,     0,     0,   854,   855,
    2424,     0,     0,     0,     0,     0,     0,  2425,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   103,   104,   105,
       3,     4,     0,     0,     0,     0,     0,   106,   107,     0,
     108,   109,   110,   578,   111,   112,   113,   114,   115,   579,
     116,   117,     0,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,   580,     0,   133,   134,   135,   136,   137,   581,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,   582,   147,   148,   149,     0,     0,     0,   583,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,     0,     0,   170,   171,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,   184,   185,   186,   187,   188,   189,
       0,   190,     0,   191,   192,   193,   194,     0,   195,     0,
     196,   584,     0,   585,   197,   198,   199,   200,     0,   201,
     202,     0,   203,   204,     0,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,     0,   214,   215,   216,   217,
     218,   219,     0,   220,   587,   221,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   229,   588,   589,   230,   590,
     231,   232,   233,   234,   235,     0,     0,   236,   237,   591,
     238,   592,     0,   239,   240,   241,     0,     0,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   593,   259,   260,   261,   262,
     263,     0,   264,   265,   594,   266,     0,   267,   268,   269,
     270,   271,   272,     0,   273,   274,     0,     0,   275,   276,
     277,     0,     0,   278,   279,   595,   280,   596,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   291,
     292,   293,   294,   295,   296,   455,   298,   299,     0,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   597,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,    20,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   598,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,    24,   370,   599,
     371,   372,   373,   374,   375,     0,   376,   377,     0,     0,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,   388,   389,     0,     0,   390,   391,   392,   393,   394,
       0,     0,   395,   396,   397,   398,   399,   600,   401,     0,
     402,   601,   403,   404,   405,   406,     0,     0,   407,     0,
      27,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,     0,    28,    93,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   111,   112,   113,   114,   115,
       0,   116,   117,     0,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   133,   134,   135,   136,   137,
       0,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   150,   151,   152,   153,   154,   155,   156,
     157,   158,     0,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,     0,     0,   170,   171,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,   184,   185,   186,   187,   188,
     189,     0,   190,     0,   191,   192,   193,   194,     0,   195,
       0,   196,     0,     0,     0,   197,   198,   199,   200,     0,
     201,   202,     0,   203,   204,     0,   205,   206,   207,   208,
     209,     0,   210,   211,   212,   213,     0,   214,   215,   216,
     217,   218,   219,     0,   220,     0,   221,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   229,     0,     0,   230,
       0,   231,   232,   233,   234,   235,     0,     0,   236,   237,
       0,   238,     0,     0,   239,   240,   241,     0,     0,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,   259,   260,   261,
     262,   263,     0,   264,   265,     0,   266,     0,   267,   268,
     269,   270,   271,   272,     0,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,   279,     0,   280,     0,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,     0,
     291,   292,   293,   294,   295,   296,   455,   298,   299,     0,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,     0,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,     0,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,    20,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,    24,   370,
       0,   371,   372,   373,   374,   375,     0,   376,   377,     0,
       0,   378,   379,   380,   381,   382,     0,   383,   384,   385,
     386,   387,   388,   389,     0,     0,   390,   391,   392,   393,
     394,     0,     0,   395,   396,   397,   398,   399,   600,   401,
       0,   402,     0,   403,   404,   405,   406,     0,     0,   407,
       0,    27,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,     0,    28,    93,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,     0,   111,   112,   113,   114,
     115,     0,   116,   117,     0,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   133,   134,   135,   136,
     137,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   185,   186,   187,
     188,   189,     0,   190,     0,   191,   192,   193,   194,     0,
     195,     0,   196,     0,     0,     0,   197,   198,   199,   200,
       0,   201,   202,     0,   203,   204,     0,   205,   206,   207,
     208,   209,     0,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,     0,   221,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   229,     0,     0,
     230,     0,   231,   232,   233,   234,   235,     0,     0,   236,
     237,     0,   238,     0,     0,   239,   240,   241,     0,     0,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,     0,   259,   260,
     261,   262,   263,     0,   264,   265,     0,   266,     0,   267,
     268,   269,   270,   271,   272,     0,   273,   274,     0,     0,
     275,   276,   277,     0,     0,   278,   279,     0,   280,     0,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   293,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,     0,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   377,
       0,     0,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,     0,     0,   395,   396,   397,   398,   399,   400,
     401,     0,   402,     0,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,     0,    93,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   726,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,     0,   111,   112,   113,   114,
     115,     0,   116,   117,     0,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   133,   134,   135,   136,
     137,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   185,   186,   187,
     188,   189,     0,   190,     0,   191,   192,   193,   194,     0,
     195,     0,   196,     0,     0,     0,   197,   198,   199,   200,
       0,   201,   202,     0,   203,   204,     0,   205,   206,   207,
     208,   209,     0,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,     0,   221,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   229,     0,     0,
     230,     0,   231,   232,   233,   234,   235,     0,     0,   236,
     237,     0,   238,     0,     0,   239,   240,   241,     0,     0,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,     0,   259,   260,
     261,   262,   263,     0,   264,   265,     0,   266,     0,   267,
     268,   269,   270,   271,   272,     0,   273,   274,     0,     0,
     275,   276,   277,     0,     0,   278,   279,     0,   280,     0,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   293,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,     0,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   377,
       0,     0,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,     0,     0,   395,   396,   397,   398,   399,   400,
     401,     0,   402,     0,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,     0,    93,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1457,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,     0,   111,   112,   113,   114,
     115,     0,   116,   117,     0,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   133,   134,   135,   136,
     137,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   185,   186,   187,
     188,   189,     0,   190,     0,   191,   192,   193,   194,     0,
     195,     0,   196,     0,     0,     0,   197,   198,   199,   200,
       0,   201,   202,     0,   203,   204,     0,   205,   206,   207,
     208,   209,     0,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,     0,   221,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   229,     0,     0,
     230,     0,   231,   232,   233,   234,   235,     0,     0,   236,
     237,     0,   238,     0,     0,   239,   240,   241,     0,     0,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,     0,   259,   260,
     261,   262,   263,     0,   264,   265,     0,   266,     0,   267,
     268,   269,   270,   271,   272,     0,   273,   274,     0,     0,
     275,   276,   277,     0,     0,   278,   279,     0,   280,     0,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   293,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,     0,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   377,
       0,     0,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,     0,     0,   395,   396,   397,   398,   399,   400,
     401,     0,   402,     0,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,     0,    93,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1930,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,     0,   111,   112,   113,   114,
     115,     0,   116,   117,     0,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   133,   134,   135,   136,
     137,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   185,   186,   187,
     188,   189,     0,   190,     0,   191,   192,   193,   194,     0,
     195,     0,   196,     0,     0,     0,   197,   198,   199,   200,
       0,   201,   202,     0,   203,   204,     0,   205,   206,   207,
     208,   209,     0,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,     0,   221,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   229,     0,     0,
     230,     0,   231,   232,   233,   234,   235,     0,     0,   236,
     237,     0,   238,     0,     0,   239,   240,   241,     0,     0,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,     0,   259,   260,
     261,   262,   263,     0,   264,   265,     0,   266,     0,   267,
     268,   269,   270,   271,   272,     0,   273,   274,     0,     0,
     275,   276,   277,     0,     0,   278,   279,     0,   280,     0,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   293,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,     0,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   377,
       0,     0,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,     0,     0,   395,   396,   397,   398,   399,   400,
     401,     0,   402,     0,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,     0,     0,     0,     0,   874,   850,
     467,     0,     0,  1319,   624,     0,     0,     0,     0,  2138,
    1320,  1321,  1322,    94,    95,    96,    97,    98,    99,   100,
     101,  1031,   103,   104,   105,  1032,  1033,  1034,  1035,  1036,
    1037,  1038,   106,   107,  1039,   108,   109,   110,   578,   111,
     112,   113,     0,   875,   579,   876,   877,  1040,   118,   119,
     120,   121,   122,  1041,  1042,   123,   124,   878,   879,   127,
    1043,   128,   129,   130,   131,     0,  1044,   580,  1045,   133,
     134,   135,   136,   137,   581,   138,   139,   140,  1046,   141,
     142,   143,   144,   145,   146,  1047,   582,   147,   148,   149,
    1048,  1049,  1050,   583,  1051,  1052,  1053,   150,   151,   152,
     153,   154,   155,   880,   881,   158,  1054,   159,  1055,   160,
     161,   162,   163,   164,   165,  1056,   166,   167,   168,   169,
    1057,  1058,   170,   171,   645,   173,   174,  1059,   175,   176,
     177,  1060,   178,   179,   180,  1061,   181,   182,   183,   184,
       0,   186,   187,   188,     0,  1062,   190,  1063,   191,   192,
     882,   194,  1064,   195,  1065,   196,   584,  1066,   585,   197,
     198,   199,   200,  1067,   201,     0,  1068,     0,   204,  1069,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
    1070,   214,   215,   216,   217,   218,   219,  1071,   220,   587,
       0,   222,   223,   224,   225,   883,   884,  1072,   885,  1073,
     229,   588,   589,   230,   590,   231,   232,   233,   234,   235,
    1074,  1075,   236,     0,   591,   238,   592,  1076,   239,   240,
     241,  1077,  1078,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   886,
     593,   887,   260,   261,   262,  2038,  1079,   264,   265,   594,
     266,  1080,     0,   268,   888,   270,   271,   272,  1081,   273,
     274,  1082,  1083,  2039,   276,   277,  1084,  1085,   278,     0,
     595,   280,   596,     0,   282,   283,   284,   285,   286,   287,
     288,   289,   290,  1086,   291,   292,     0,   294,   295,     0,
     455,   298,   299,  1087,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   889,   310,   311,   312,   313,  1088,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,  1089,   326,   327,   597,   328,   329,   330,     0,   332,
     333,   334,   335,   336,   337,   338,   339,   340,  1090,   341,
     342,   343,   344,   345,  1091,   346,  2040,   348,   349,   350,
     598,   351,   352,   891,   354,  1092,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,     0,  1093,
     368,   369,  1094,   370,   599,   371,   372,   373,   374,   375,
    1095,   892,   893,  1096,  1097,   378,   379,     0,   381,     0,
    1098,   383,   384,   385,   386,   387,   388,   389,  1099,  1100,
     390,   391,   392,   393,   394,  1101,  1102,   395,   396,   397,
     398,   399,     0,   894,  1103,   402,   601,   403,   404,   405,
     406,  1104,  1105,   407,  1106,  1107,   408,   409,   410,   411,
     412,   413,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   425,   426,   427,     0,    93,     0,  1323,
    1324,  1325,  1319,  2041,  2042,  1328,  1329,  1330,  1331,  1320,
    1321,  1322,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   103,   104,   105,     0,     0,     0,     0,     0,     0,
       0,   106,   107,     0,   108,   109,   110,     0,   111,   112,
     113,   114,   115,     0,   116,   117,     0,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   133,   134,
     135,   136,   137,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   150,   151,   152,   153,
     154,   155,   156,   157,   158,     0,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,     0,
       0,   170,   171,   172,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,   184,   185,
     186,   187,   188,   189,     0,   190,     0,   191,   192,   193,
     194,     0,   195,     0,   196,     0,     0,     0,   197,   198,
     199,   200,     0,   201,   202,     0,   203,   204,     0,   205,
     206,   207,   208,   209,     0,   210,   211,   212,   213,     0,
     214,   215,   216,   217,   218,   219,     0,   220,     0,   221,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   229,
       0,     0,   230,     0,   231,   232,   233,   234,   235,     0,
       0,   236,   237,     0,   238,     0,     0,   239,   240,   241,
       0,     0,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,     0,
     259,   260,   261,   262,   263,     0,   264,   265,     0,   266,
       0,   267,   268,   269,   270,   271,   272,     0,   273,   274,
       0,     0,   275,   276,   277,     0,     0,   278,   279,     0,
     280,     0,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   291,   292,   293,   294,   295,   296,   455,
     298,   299,     0,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,     0,   370,     0,   371,   372,   373,   374,   375,     0,
     376,   377,     0,     0,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,   388,   389,     0,     0,   390,
     391,   392,   393,   394,     0,     0,   395,   396,   397,   398,
     399,   400,   401,     0,   402,     0,   403,   404,   405,   406,
       0,     0,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,     0,     0,  1323,  1324,
    1325,     0,  1326,  1327,  1328,  1329,  1330,  1331,   970,     0,
       0,   971,     0,     0,     0,   972,   973,   974,     0,     0,
       0,     0,     0,     0,     0,     0,   970,     0,     0,   971,
       0,     0,   975,   972,   973,   974,     0,     0,     0,     0,
     977,     0,     0,     0,     0,   970,     0,   978,   971,     0,
     975,     0,   972,   973,   974,     0,     0,     0,   977,     0,
       0,     0,     0,     0,     0,   978,     0,     0,     0,   975,
       0,   979,     0,     0,     0,     0,     0,   977,     0,   970,
       0,     0,   971,     0,   978,     0,   972,   973,   974,   979,
       0,     0,     0,     0,     0,     0,     0,   970,     0,     0,
     971,     0,     0,   975,   972,   973,   974,     0,   979,     0,
       0,   977,     0,     0,     0,     0,     0,     0,   978,     0,
       0,   975,     0,     0,     0,     0,     0,     0,     0,   977,
       0,     0,     0,     0,     0,     0,   978,   970,     0,     0,
     971,     0,   979,     0,   972,   973,   974,     0,     0,     0,
       0,     0,     0,     0,     0,   970,     0,     0,   971,     0,
     979,   975,   972,   973,   974,     0,     0,     0,     0,   977,
       0,     0,     0,     0,     0,     0,   978,     0,     0,   975,
     980,     0,     0,     0,     0,   981,     0,   977,     0,     0,
       0,     0,     0,     0,   978,     0,     0,     0,   980,     0,
     979,     0,     0,   981,     0,     0,   982,   983,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   980,   979,     0,
       0,   984,   981,     0,   982,   983,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   984,
       0,     0,     0,   982,   983,     0,     0,     0,     0,     0,
       0,   980,     0,     0,   985,     0,   981,     0,   984,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   986,   980,
       0,   987,   985,     0,   981,     0,     0,   982,   983,     0,
       0,     0,     0,     0,     0,     0,   986,     0,     0,   987,
       0,   985,   984,     0,     0,   982,   983,     0,     0,     0,
       0,     0,     0,     0,     0,   986,     0,     0,   987,   980,
     984,     0,     0,     0,   981,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   985,     0,   980,     0,     0,
       0,     0,   981,     0,     0,   982,   983,     0,     0,   986,
       0,     0,   987,   985,     0,     0,     0,     0,     0,     0,
     984,     0,     0,   982,   983,   988,     0,   986,     0,     0,
     987,     0,     0,     0,     0,     0,     0,     0,   984,     0,
       0,     0,     0,   988,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   985,     0,     0,     0,     0,     0,     0,
       0,     0,   988,     0,     0,     0,     0,   986,     0,     0,
     987,   985,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   986,     0,     0,   987,     0,
       0,     0,     0,     0,     0,     0,   988,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   988,     0,     0,     0,     0,     0,
       0,   989,     0,     0,   990,   991,   992,     0,   993,   994,
     995,   996,   997,   998,     0,     0,     0,     0,  1361,   989,
       0,     0,   990,   991,   992,     0,   993,   994,   995,   996,
     997,   998,     0,     0,   988,     0,  1872,     0,   989,     0,
       0,   990,   991,   992,     0,   993,   994,   995,   996,   997,
     998,     0,   988,     0,     0,  1907,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   989,     0,     0,   990,   991,   992,     0,   993,
     994,   995,   996,   997,   998,     0,     0,     0,     0,  2002,
     989,     0,     0,   990,   991,   992,     0,   993,   994,   995,
     996,   997,   998,     0,     0,     0,     0,  2091,     0,     0,
       0,     0,     0,   777,     0,     0,     0,     0,     0,   778,
       0,     0,     0,     0,     0,     0,   790,     0,     0,     0,
     989,     0,     0,   990,   991,   992,     0,   993,   994,   995,
     996,   997,   998,     0,     0,   791,     0,  2110,   989,     0,
       0,   990,   991,   992,     0,   993,   994,   995,   996,   997,
     998,   970,     0,     0,   971,  2252,     0,     0,   972,   973,
     974,     0,     0,     0,     0,     0,     0,     0,     0,   970,
       0,     0,   971,     0,     0,   975,   972,   973,   974,     0,
       0,     0,     0,   977,   792,     0,     0,     0,   970,     0,
     978,   971,     0,   975,     0,   972,   973,   974,     0,     0,
       0,   977,     0,     0,     0,     0,     0,     0,   978,     0,
       0,   779,   975,     0,   979,     0,     0,     0,     0,     0,
     977,     0,     0,     0,     0,     0,     0,   978,     0,     0,
       0,     0,   979,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   979,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   793,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   794,     0,     0,   795,
       0,     0,     0,   980,     0,     0,     0,     0,   981,     0,
     796,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   980,     0,     0,     0,     0,   981,     0,     0,   982,
     983,   780,     0,     0,     0,     0,     0,     0,     0,     0,
     980,   797,     0,     0,   984,   981,     0,   982,   983,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   984,     0,     0,     0,   982,   983,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   985,     0,     0,
    1527,   984,     0,     0,   782,   799,     0,     0,     0,     0,
       0,   986,     0,     0,   987,   985,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   800,     0,     0,     0,   986,
       0,  1528,   987,     0,   985,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   802,     0,     0,   986,     0,
       0,   987,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   784,     0,     0,   988,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   988,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   988,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   989,     0,     0,   990,   991,   992,
       0,   993,   994,   995,   996,   997,   998,     0,     0,     0,
       0,  2469,   989,     0,     0,   990,   991,   992,     0,   993,
     994,   995,   996,   997,   998,     0,     0,     0,     0,  2481,
       0,   989,     0,     0,   990,   991,   992,  1030,   993,   994,
     995,   996,   997,   998,     0,     0,     0,     0,  2590,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
    1031,   103,   104,   105,  1032,  1033,  1034,  1035,  1036,  1037,
    1038,   106,   107,  1039,   108,   109,   110,   578,   111,   112,
     113,   114,   115,   579,   116,   117,  1040,   118,   119,   120,
     121,   122,  1041,  1042,   123,   124,   125,   126,   127,  1043,
     128,   129,   130,   131,   132,  1044,   580,  1045,   133,   134,
     135,   136,   137,   581,   138,   139,   140,  1046,   141,   142,
     143,   144,   145,   146,  1047,   582,   147,   148,   149,  1048,
    1049,  1050,   583,  1051,  1052,  1053,   150,   151,   152,   153,
     154,   155,   156,   157,   158,  1054,   159,  1055,   160,   161,
     162,   163,   164,   165,  1056,   166,   167,   168,   169,  1057,
    1058,   170,   171,   172,   173,   174,  1059,   175,   176,   177,
    1060,   178,   179,   180,  1061,   181,   182,   183,   184,   185,
     186,   187,   188,   189,  1062,   190,  1063,   191,   192,   193,
     194,  1064,   195,  1065,   196,   584,  1066,   585,   197,   198,
     199,   200,  1067,   201,   202,  1068,   203,   204,  1069,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,  1070,
     214,   215,   216,   217,   218,   219,  1071,   220,   587,   221,
     222,   223,   224,   225,   226,   227,  1072,   228,  1073,   229,
     588,   589,   230,   590,   231,   232,   233,   234,   235,  1074,
    1075,   236,   237,   591,   238,   592,  1076,   239,   240,   241,
    1077,  1078,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   593,
     259,   260,   261,   262,   263,  1079,   264,   265,   594,   266,
    1080,   267,   268,   269,   270,   271,   272,  1081,   273,   274,
    1082,  1083,   275,   276,   277,  1084,  1085,   278,   279,   595,
     280,   596,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,  1086,   291,   292,   293,   294,   295,   296,   455,
     298,   299,  1087,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,  1088,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
    1089,   326,   327,   597,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,  1090,   341,   342,
     343,   344,   345,  1091,   346,   347,   348,   349,   350,   598,
     351,   352,   353,   354,  1092,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,  1093,   368,
     369,  1094,   370,   599,   371,   372,   373,   374,   375,  1095,
     376,   377,  1096,  1097,   378,   379,   380,   381,   382,  1098,
     383,   384,   385,   386,   387,   388,   389,  1099,  1100,   390,
     391,   392,   393,   394,  1101,  1102,   395,   396,   397,   398,
     399,   400,   401,  1103,   402,   601,   403,   404,   405,   406,
    1104,  1105,   407,  1106,  1107,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    93,     0,     0,     0,     0,
       0,     0,     0,     0,  1108,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,     0,   111,   112,   113,   114,
     115,     0,   116,   117,     0,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   133,   134,   135,   136,
     137,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   185,   186,   187,
     188,   189,     0,   190,     0,   191,   192,   193,   194,     0,
     195,     0,   196,     0,     0,     0,   197,   198,   199,   200,
       0,   201,   202,     0,   203,   204,     0,   205,   206,   207,
     208,   209,     0,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,     0,   221,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   229,     0,     0,
     230,     0,   231,   232,   233,   234,   235,     0,     0,   236,
     237,     0,   238,     0,     0,   239,   240,   241,     0,     0,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,     0,   259,   260,
     261,   262,   263,     0,   264,   265,     0,   266,     0,   267,
     268,   269,   270,   271,   272,     0,   273,   274,     0,     0,
     275,   276,   277,     0,     0,   278,   279,     0,   280,     0,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   293,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,     0,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   377,
       0,     0,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,     0,     0,   395,   396,   397,   398,   399,   400,
     401,     0,   402,     0,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   577,   850,   467,     0,     0,     0,   624,
       0,     0,  2497,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   103,   104,   105,
       0,     0,     0,     0,     0,     0,     0,   106,   107,     0,
     108,   109,   110,   578,   111,   112,   113,   114,   115,   579,
     116,   117,     0,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,   580,     0,   133,   134,   135,   136,   137,   581,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,   582,   147,   148,   149,     0,     0,     0,   583,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,  1022,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,     0,     0,   170,   171,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     851,   190,     0,   191,   192,   193,   194,     0,   195,     0,
     196,   584,     0,   585,   197,   198,   199,   200,     0,   201,
     202,     0,   203,   204,     0,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,     0,   214,   215,   216,   217,
     218,   219,     0,   220,   587,   221,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   229,   588,   589,   230,   590,
     231,   232,   233,   234,   235,     0,     0,   236,   237,   591,
     238,   592,     0,   239,   240,   241,     0,     0,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   593,   259,   260,   261,   262,
     263,     0,   264,   265,   594,   266,     0,   267,   268,   269,
     270,   271,   272,     0,   273,   274,   852,     0,   275,   276,
     277,     0,     0,   278,   279,   595,   280,   596,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   291,
     292,   293,   294,   295,   296,   455,   298,   299,     0,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   597,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   598,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,     0,   370,   599,
     371,   372,   373,   374,   375,     0,   376,   377,     0,     0,
     378,   379,   380,   381,   382,   853,   383,   384,   385,   386,
     387,   388,   389,     0,     0,   390,   391,   392,   393,   394,
       0,     0,   395,   396,   397,   398,   399,   400,   401,     0,
     402,   601,   403,   404,   405,   406,     0,     0,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   577,   850,   467,     0,     0,     0,   624,   854,   855,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   103,   104,   105,     0,     0,
       0,     0,     0,     0,     0,   106,   107,     0,   108,   109,
     110,   578,   111,   112,   113,   114,   115,   579,   116,   117,
       0,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
     580,     0,   133,   134,   135,   136,   137,   581,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,   582,
     147,   148,   149,     0,     0,     0,   583,     0,     0,     0,
     150,   151,   152,   153,   154,   155,   156,   157,   158,  1024,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,     0,     0,   170,   171,   172,   173,   174,
       0,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   851,   190,
       0,   191,   192,   193,   194,     0,   195,     0,   196,   584,
       0,   585,   197,   198,   199,   200,     0,   201,   202,     0,
     203,   204,     0,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,     0,   214,   215,   216,   217,   218,   219,
       0,   220,   587,   221,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   229,   588,   589,   230,   590,   231,   232,
     233,   234,   235,     0,     0,   236,   237,   591,   238,   592,
       0,   239,   240,   241,     0,     0,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   593,   259,   260,   261,   262,   263,     0,
     264,   265,   594,   266,     0,   267,   268,   269,   270,   271,
     272,     0,   273,   274,   852,     0,   275,   276,   277,     0,
       0,   278,   279,   595,   280,   596,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   291,   292,   293,
     294,   295,   296,   455,   298,   299,     0,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,     0,   326,   327,   597,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,   598,   351,   352,   353,   354,     0,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,     0,   370,   599,   371,   372,
     373,   374,   375,     0,   376,   377,     0,     0,   378,   379,
     380,   381,   382,   853,   383,   384,   385,   386,   387,   388,
     389,     0,     0,   390,   391,   392,   393,   394,     0,     0,
     395,   396,   397,   398,   399,   400,   401,     0,   402,   601,
     403,   404,   405,   406,     0,     0,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   577,
     850,   467,     0,     0,     0,   624,   854,   855,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   103,   104,   105,     0,     0,     0,     0,
       0,     0,     0,   106,   107,     0,   108,   109,   110,   578,
     111,   112,   113,   114,   115,   579,   116,   117,     0,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,   580,     0,
     133,   134,   135,   136,   137,   581,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   582,   147,   148,
     149,     0,     0,     0,   583,     0,     0,     0,   150,   151,
     152,   153,   154,   155,   156,   157,   158,     0,   159,     0,
     160,   161,   162,   163,   164,   165,     0,   166,   167,   168,
     169,     0,     0,   170,   171,   172,   173,   174,     0,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   851,   190,     0,   191,
     192,   193,   194,     0,   195,     0,   196,   584,     0,   585,
     197,   198,   199,   200,     0,   201,   202,     0,   203,   204,
       0,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,     0,   214,   215,   216,   217,   218,   219,     0,   220,
     587,   221,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   229,   588,   589,   230,   590,   231,   232,   233,   234,
     235,     0,     0,   236,   237,   591,   238,   592,     0,   239,
     240,   241,     0,     0,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   593,   259,   260,   261,   262,   263,     0,   264,   265,
     594,   266,     0,   267,   268,   269,   270,   271,   272,     0,
     273,   274,   852,     0,   275,   276,   277,     0,     0,   278,
     279,   595,   280,   596,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   291,   292,   293,   294,   295,
     296,   455,   298,   299,     0,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,     0,   326,   327,   597,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   598,   351,   352,   353,   354,     0,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,     0,   370,   599,   371,   372,   373,   374,
     375,     0,   376,   377,     0,     0,   378,   379,   380,   381,
     382,   853,   383,   384,   385,   386,   387,   388,   389,     0,
       0,   390,   391,   392,   393,   394,     0,     0,   395,   396,
     397,   398,   399,   400,   401,     0,   402,   601,   403,   404,
     405,   406,     0,     0,   407,     0,     0,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,     0,   970,
       0,     0,   971,     0,   854,   855,   972,   973,   974,     0,
       0,     0,   970,     0,     0,   971,     0,     0,     0,   972,
     973,   974,     0,   975,     0,     0,     0,     0,     0,     0,
       0,   977,     0,     0,     0,     0,   975,     0,   978,     0,
       0,     0,     0,     0,   977,     0,     0,     0,     0,     0,
     970,   978,     0,   971,     0,     0,     0,   972,   973,   974,
       0,     0,   979,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   975,   979,     0,  1611,   970,     0,
       0,   971,   977,     0,     0,   972,   973,   974,     0,   978,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   975,     0,     0,     0,     0,     0,     0,     0,
     977,     0,     0,   979,     0,     0,     0,   978,     0,     0,
       0,     0,   970,     0,     0,   971,     0,     0,     0,   972,
     973,   974,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   979,     0,     0,     0,     0,   975,     0,  1653,  1662,
       0,     0,     0,  1654,   977,     0,     0,     0,     0,     0,
    2551,   978,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   980,     0,     0,     0,     0,   981,     0,     0,     0,
       0,     0,     0,     0,   980,   979,     0,     0,     0,   981,
       0,     0,     0,     0,     0,     0,     0,   982,   983,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     982,   983,   984,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   980,     0,     0,   984,     0,   981,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   985,     0,     0,   982,   983,
     980,     0,     0,     0,     0,   981,     0,     0,   985,   986,
       0,     0,   987,   984,     0,     0,     0,     0,     0,     0,
       0,     0,   986,     0,     0,   987,   982,   983,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   984,     0,     0,   980,     0,   985,  2552,     0,   981,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     986,     0,     0,   987,     0,     0,     0,     0,     0,     0,
     982,   983,     0,     0,   985,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   984,     0,     0,   986,     0,
     970,   987,     0,   971,     0,     0,   988,   972,   973,   974,
       0,     0,     0,     0,     0,     0,     0,     0,  1627,   988,
       0,     0,     0,     0,   975,     0,     0,     0,   985,     0,
       0,     0,   977,     0,     0,     0,     0,     0,     0,   978,
     970,     0,   986,   971,     0,   987,     0,   972,   973,   974,
       0,     0,     0,     0,     0,     0,     0,   988,     0,     0,
       0,     0,     0,   979,   975,     0,     0,     0,     0,     0,
       0,     0,   977,     0,     0,     0,     0,     0,     0,   978,
       0,     0,     0,     0,     0,   988,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   989,   979,     0,   990,   991,   992,     0,   993,
     994,   995,   996,   997,   998,   989,     0,     0,   990,   991,
     992,     0,   993,   994,   995,   996,   997,   998,     0,   988,
       0,     0,     0,     0,     0,     0,     0,   970,     0,     0,
     971,     0,     0,     0,   972,   973,   974,     0,     0,     0,
       0,     0,     0,   989,  1667,     0,   990,   991,   992,     0,
     993,   994,   995,   996,   997,   998,     0,     0,     0,   977,
       0,     0,   980,     0,     0,     0,   978,   981,     0,     0,
       0,   989,     0,     0,   990,   991,   992,     0,   993,   994,
     995,   996,   997,   998,     0,     0,     0,     0,   982,   983,
     979,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   980,   984,     0,     0,     0,   981,     0,     0,
       0,     0,     0,     0,     0,   989,     0,     0,   990,   991,
     992,     0,   993,   994,   995,   996,   997,   998,   982,   983,
       0,     0,     0,     0,     0,     0,   985,     0,     0,     0,
       0,     0,     0,   984,     0,     0,     0,     0,   970,     0,
     986,   971,     0,   987,     0,   972,   973,   974,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   975,     0,     0,     0,   985,     0,     0,     0,
     977,     0,     0,     0,     0,     0,     0,   978,     0,     0,
     986,     0,     0,   987,     0,     0,     0,     0,     0,   980,
       0,     0,     0,     0,   981,     0,     0,     0,     0,     0,
       0,   979,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -1454, -1454,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   988,     0,     0,
     984,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1454,     0,     0,     0,   988,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   986,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1868,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     980,     0,     0,     0,     0,   981,     0,     0,     0,     0,
       0,     0,     0,   989,     0,     0,   990,   991,   992,     0,
     993,   994,   995,   996,   997,   998,   982,   983,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   984,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   989,   988,     0,   990,   991,   992,     0,
     993,   994,   995,   996,   997,   998,     0,     0,     0,     0,
       0,     0,     0,     0,   985,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   986,     0,
       0,   987,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     989,     0,     0,   990,   991,   992,     0,   993,   994,   995,
     996,   997,   998,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   988,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1030,
       0,   989,     0,     0,   990,   991,   992,     0,   993,   994,
     995,   996,   997,   998,    94,    95,    96,    97,    98,    99,
     100,   101,  1031,   103,   104,   105,  1032,  1033,  1034,  1035,
    1036,  1037,  1038,   106,   107,  1039,   108,   109,   110,   578,
     111,   112,   113,   114,   115,   579,   116,   117,  1040,   118,
     119,   120,   121,   122,  1041,  1042,   123,   124,   125,   126,
     127,  1043,   128,   129,   130,   131,   132,  1044,   580,  1045,
     133,   134,   135,   136,   137,   581,   138,   139,   140,  1046,
     141,   142,   143,   144,   145,   146,  1047,   582,   147,   148,
     149,  1048,  1049,  1050,   583,  1051,  1052,  1053,   150,   151,
     152,   153,   154,   155,   156,   157,   158,  1054,   159,  1055,
     160,   161,   162,   163,   164,   165,  1056,   166,   167,   168,
     169,  1057,  1058,   170,   171,   172,   173,   174,  1059,   175,
     176,   177,  1060,   178,   179,   180,  1061,   181,   182,   183,
     184,   185,   186,   187,   188,   189,  1062,   190,  1063,   191,
     192,   193,   194,  1064,   195,  1065,   196,   584,  1066,   585,
     197,   198,   199,   200,  1067,   201,   202,  1068,   203,   204,
    1069,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,  1070,   214,   215,   216,   217,   218,   219,  1071,   220,
     587,   221,   222,   223,   224,   225,   226,   227,  1072,   228,
    1073,   229,   588,   589,   230,   590,   231,   232,   233,   234,
     235,  1074,  1075,   236,   237,   591,   238,   592,  1076,   239,
     240,   241,  1077,  1078,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   593,   259,   260,   261,   262,   263,  1079,   264,   265,
     594,   266,  1080,   267,   268,   269,   270,   271,   272,  1081,
     273,   274,  1082,  1083,   275,   276,   277,  1084,  1085,   278,
     279,   595,   280,   596,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,  1086,   291,   292,   293,   294,   295,
     296,   455,   298,   299,  1087,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,  1088,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,  1089,   326,   327,   597,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,  1090,
     341,   342,   343,   344,   345,  1091,   346,   347,   348,   349,
     350,   598,   351,   352,   353,   354,  1092,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
    1093,   368,   369,  1094,   370,   599,   371,   372,   373,   374,
     375,  1095,   376,   377,  1096,  1097,   378,   379,   380,   381,
     382,  1098,   383,   384,   385,   386,   387,   388,   389,  1099,
    1100,   390,   391,   392,   393,   394,  1101,  1102,   395,   396,
     397,   398,   399,   400,   401,  1103,   402,   601,   403,   404,
     405,   406,  1104,  1105,   407,  1106,  1107,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,  1030,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,  1512,    99,   100,   101,
    1031,   103,   104,   105,  1032,  1033,  1034,  1035,  1036,  1037,
    1038,   106,   107,  1039,   108,   109,   110,   578,   111,   112,
     113,   114,   115,   579,   116,   117,  1040,   118,   119,   120,
     121,   122,  1041,  1042,   123,   124,   125,   126,   127,  1043,
     128,   129,   130,   131,   132,  1044,   580,  1045,   133,   134,
     135,   136,   137,   581,   138,   139,   140,  1046,   141,   142,
     143,   144,   145,   146,  1047,   582,   147,   148,   149,  1048,
    1049,  1050,   583,  1051,  1052,  1053,   150,   151,   152,   153,
     154,   155,   156,   157,   158,  1054,   159,  1055,   160,   161,
     162,   163,   164,   165,  1056,   166,   167,   168,   169,  1057,
    1058,   170,   171,   172,  1513,   174,  1059,   175,   176,   177,
    1060,   178,   179,   180,  1061,   181,   182,   183,   184,   185,
     186,   187,   188,   189,  1062,   190,  1063,   191,   192,   193,
     194,  1064,   195,  1065,   196,   584,  1066,   585,   197,   198,
     199,   200,  1067,   201,   202,  1068,   203,   204,  1069,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,  1070,
     214,   215,   216,   217,   218,   219,  1071,   220,   587,   221,
     222,   223,   224,   225,   226,   227,  1072,   228,  1073,   229,
     588,   589,   230,   590,   231,   232,   233,   234,   235,  1074,
    1075,   236,   237,   591,   238,   592,  1076,   239,   240,   241,
    1077,  1078,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   593,
     259,   260,   261,   262,   263,  1079,   264,   265,   594,   266,
    1080,   267,   268,   269,   270,   271,   272,  1081,   273,   274,
    1082,  1083,   275,   276,   277,  1084,  1085,   278,   279,   595,
     280,   596,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,  1086,   291,   292,   293,   294,   295,   296,   455,
     298,   299,  1087,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,  1088,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
    1089,   326,   327,   597,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,  1090,   341,   342,
     343,   344,   345,  1091,  1514,   347,   348,   349,   350,   598,
     351,   352,   353,   354,  1092,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,  1093,   368,
     369,  1094,   370,   599,   371,   372,   373,   374,   375,  1095,
     376,   377,  1096,  1097,   378,   379,   380,   381,   382,  1098,
     383,   384,   385,   386,   387,   388,   389,  1099,  1100,   390,
     391,   392,   393,   394,  1101,  1102,   395,   396,   397,   398,
     399,   400,   401,  1103,   402,   601,   403,   404,   405,   406,
    1104,  1105,   407,  1106,  1107,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   619,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,   578,   111,   112,   113,   114,
     115,   579,   116,   117,     0,   118,   119,   120,   121,   122,
       0,   630,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   633,     0,   634,     0,   133,   134,   135,   136,
     137,   581,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   582,   147,   148,   149,   635,   636,   637,
     638,   639,   640,   641,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   185,   186,   187,
     188,   647,     0,   190,     0,   191,   192,   193,   194,     0,
     195,     0,   196,   584,     0,   585,   197,   198,   199,   200,
       0,   201,   650,     0,   203,   204,     0,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,   587,   221,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   229,   588,   589,
     230,   590,   231,   232,   233,   234,   235,     0,     0,   236,
     654,   591,   238,   592,     0,   239,   240,   241,   655,   656,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   593,   259,   260,
     261,   262,   263,     0,   264,   265,   594,   266,     0,   661,
     268,   269,   270,   271,   272,     0,   273,   274,     0,     0,
     275,   276,   277,     0,     0,   278,   279,   595,   280,   596,
     664,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   665,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   597,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   668,   346,   347,   348,   349,   350,   598,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   670,     0,   368,   369,     0,
     370,   599,   371,   372,   373,   374,   375,     0,   376,   377,
       0,     0,   378,   379,   673,   381,   674,     0,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   676,     0,   395,   396,   397,   398,   399,   400,
     401,     0,   402,   601,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   577,     0,   467,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   103,   104,   105,
       0,     0,     0,     0,     0,     0,     0,   106,   107,     0,
     108,   109,   110,   578,   111,   112,   113,   114,   115,   579,
     116,   117,     0,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,   580,     0,   133,   134,   135,   136,   137,   581,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,   582,   147,   148,   149,     0,     0,     0,   583,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,     0,     0,   170,   171,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     851,   190,     0,   191,   192,   193,   194,     0,   195,     0,
     196,   584,     0,   585,   197,   198,   199,   200,     0,   201,
     202,     0,   203,   204,     0,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,     0,   214,   215,   216,   217,
     218,   219,     0,   220,   587,   221,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   229,   588,   589,   230,   590,
     231,   232,   233,   234,   235,     0,     0,   236,   237,   591,
     238,   592,     0,   239,   240,   241,     0,     0,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   593,   259,   260,   261,   262,
     263,     0,   264,   265,   594,   266,     0,   267,   268,   269,
     270,   271,   272,     0,   273,   274,   852,     0,   275,   276,
     277,     0,     0,   278,   279,   595,   280,   596,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   291,
     292,   293,   294,   295,   296,   455,   298,   299,     0,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   597,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   598,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,     0,   370,   599,
     371,   372,   373,   374,   375,     0,   376,   377,     0,     0,
     378,   379,   380,   381,   382,   853,   383,   384,   385,   386,
     387,   388,   389,     0,     0,   390,   391,   392,   393,   394,
       0,     0,   395,   396,   397,   398,   399,   400,   401,     0,
     402,   601,   403,   404,   405,   406,     0,     0,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   577,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   103,   104,   105,     3,     4,
       0,     0,     0,     0,     0,   106,   107,     0,   108,   109,
     110,   578,   111,   112,   113,   114,   115,   579,   116,   117,
       0,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
     580,     0,   133,   134,   135,   136,   137,   581,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,   582,
     147,   148,   149,     0,     0,     0,   583,     0,     0,     0,
     150,   151,   152,   153,   154,   155,   156,   157,   158,     0,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,     0,     0,   170,   171,   172,   173,   174,
       0,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,   184,   185,   186,   187,   188,   189,     0,   190,
       0,   191,   192,   193,   194,     0,   195,     0,   196,   584,
       0,   585,   197,   198,   199,   200,     0,   201,   202,     0,
     203,   204,     0,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,     0,   214,   215,   216,   217,   218,   219,
       0,   220,   587,   221,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   229,   588,   589,   230,   590,   231,   232,
     233,   234,   235,     0,     0,   236,   237,   591,   238,   592,
       0,   239,   240,   241,     0,     0,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   593,   259,   260,   261,   262,   263,     0,
     264,   265,   594,   266,     0,   267,   268,   269,   270,   271,
     272,     0,   273,   274,     0,     0,   275,   276,   277,     0,
       0,   278,   279,   595,   280,   596,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   291,   292,   293,
     294,   295,   296,   455,   298,   299,     0,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,     0,   326,   327,   597,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,   598,   351,   352,   353,   354,     0,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,     0,   370,   599,   371,   372,
     373,   374,   375,     0,   376,   377,     0,     0,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,   388,
     389,     0,     0,   390,   391,   392,   393,   394,     0,     0,
     395,   396,   397,   398,   399,   400,   401,     0,   402,   601,
     403,   404,   405,   406,     0,     0,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   619,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   103,   104,   105,     0,     0,     0,     0,
       0,     0,     0,   106,   107,     0,   108,   109,   110,   578,
     111,   112,   113,   114,   115,   579,   116,   117,     0,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,   580,     0,
     133,   134,   135,   136,   137,   581,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   582,   147,   148,
     149,     0,     0,     0,   583,     0,     0,     0,   150,   151,
     152,   153,   154,   155,   156,   157,   158,     0,   159,     0,
     160,   161,   162,   163,   164,   165,     0,   166,   167,   168,
     169,     0,     0,   170,   171,   172,   173,   174,     0,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
     184,   185,   186,   187,   188,   189,     0,   190,     0,   191,
     192,   193,   194,     0,   195,     0,   196,   584,     0,   585,
     197,   198,   199,   200,     0,   201,   202,     0,   203,   204,
       0,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,     0,   214,   215,   216,   217,   218,   219,     0,   220,
     587,   221,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   229,   588,   589,   230,   590,   231,   232,   233,   234,
     235,     0,     0,   236,   237,   591,   238,   592,     0,   239,
     240,   241,     0,     0,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   593,   259,   260,   261,   262,   263,     0,   264,   265,
     594,   266,     0,   267,   268,   269,   270,   271,   272,     0,
     273,   274,     0,     0,   275,   276,   277,     0,     0,   278,
     279,   595,   280,   596,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   291,   292,   293,   294,   295,
     296,   455,   298,   299,     0,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,     0,   326,   327,   597,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   598,   351,   352,   353,   354,     0,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,     0,   370,   599,   371,   372,   373,   374,
     375,     0,   376,   377,     0,     0,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,   388,   389,     0,
       0,   390,   391,   392,   393,   394,     0,     0,   395,   396,
     397,   398,   399,   400,   401,     0,   402,   601,   403,   404,
     405,   406,     0,     0,   407,     0,     0,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    93,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   103,   104,   105,     0,     0,     0,     0,     0,     0,
       0,   106,   107,     0,   108,   109,   110,     0,   111,   112,
     113,   114,   115,     0,   116,   117,     0,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,  1168,
     128,   129,   130,   131,   132,     0,     0,  1169,   133,   134,
     135,   136,   137,     0,   138,   139,   140,  1170,   141,   142,
     143,   144,   145,   146,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   150,   151,   152,   153,
     154,   155,   156,   157,   158,     0,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,     0,
       0,   170,   171,   172,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,   184,   185,
     186,   187,   188,   189,     0,   190,     0,   191,   192,   193,
     194,     0,   195,  1171,   196,     0,     0,     0,   197,   198,
     199,   200,     0,   201,   202,     0,   203,   204,     0,   205,
     206,   207,   208,  1172,     0,   210,   211,   212,   213,     0,
     214,   215,   216,   217,   218,   219,     0,   220,     0,   221,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   229,
       0,     0,   230,     0,   231,   232,   233,   234,   235,     0,
       0,   236,   237,     0,   238,     0,     0,   239,   240,   241,
       0,     0,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,     0,
     259,   260,   261,   262,   263,     0,   264,   265,     0,   266,
       0,   267,   268,   269,   270,   271,   272,     0,   273,   274,
       0,     0,   275,   276,   277,     0,     0,   278,   279,     0,
     280,     0,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   291,   292,   293,   294,   295,   296,   455,
     298,   299,  1173,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,     0,   370,     0,   371,   372,   373,   374,   375,     0,
     376,   377,     0,     0,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,   388,   389,     0,  1174,   390,
     391,   392,   393,   394,     0,     0,   395,   396,   397,   398,
     399,   400,   401,     0,   402,     0,   403,   404,   405,   406,
       0,     0,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    93,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,     0,   111,   112,   113,   114,
     115,     0,   116,   117,     0,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,  1168,   128,   129,
     130,   131,   132,     0,     0,     0,   133,   134,   135,   136,
     137,     0,   138,   139,   140,  1170,   141,   142,   143,   144,
     145,   146,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   185,   186,   187,
     188,   189,     0,   190,     0,   191,   192,   193,   194,     0,
     195,  1171,   196,     0,     0,     0,   197,   198,   199,   200,
       0,   201,   202,     0,   203,   204,     0,   205,   206,   207,
     208,   209,     0,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,     0,   221,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   229,     0,     0,
     230,     0,   231,   232,   233,   234,   235,     0,     0,   236,
     237,     0,   238,  1565,     0,   239,   240,   241,     0,     0,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,     0,   259,   260,
     261,   262,   263,     0,   264,   265,     0,   266,     0,   267,
     268,   269,   270,   271,   272,     0,   273,   274,     0,     0,
     275,   276,   277,     0,     0,   278,   279,     0,   280,     0,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   293,   294,   295,   296,   455,   298,   299,
    1173,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,     0,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   377,
       0,     0,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,   388,   389,     0,  1174,   390,   391,   392,
     393,   394,     0,     0,   395,   396,   397,   398,   399,   400,
     401,     0,   402,     0,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    93,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   103,   104,   105,
       3,     4,     0,     0,     0,     0,     0,   106,   107,     0,
     108,   109,   110,     0,   111,   112,   113,   114,   115,     0,
     116,   117,     0,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,     0,     0,   133,   134,   135,   136,   137,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   147,   148,   149,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,     0,     0,   170,   171,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,   184,   185,   186,   187,   188,   189,
       0,   190,     0,   191,   192,   193,   194,     0,   195,     0,
     196,     0,     0,     0,   197,   198,   199,   200,     0,   201,
     202,     0,   203,   204,     0,   205,   206,   207,   208,   209,
       0,   210,   211,   212,   213,     0,   214,   215,   216,   217,
     218,   219,     0,   220,     0,   221,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   229,     0,     0,   230,     0,
     231,   232,   233,   234,   235,     0,     0,   236,   237,     0,
     238,     0,     0,   239,   240,   241,     0,     0,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,     0,   259,   260,   261,   262,
     263,     0,   264,   265,     0,   266,     0,   267,   268,   269,
     270,   271,   272,     0,   273,   274,     0,     0,   275,   276,
     277,     0,     0,   278,   279,     0,   280,     0,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   291,
     292,   293,   294,   295,   296,   455,   298,   299,     0,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,     0,   370,     0,
     371,   372,   373,   374,   375,     0,   376,   377,     0,     0,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,   388,   389,     0,     0,   390,   391,   392,   393,   394,
       0,     0,   395,   396,   397,   398,   399,   400,   401,     0,
     402,     0,   403,   404,   405,   406,     0,     0,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    93,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,     0,     0,
       0,     0,     0,     0,     0,   106,   107,     0,   108,   109,
     110,     0,   111,   112,   113,   114,   115,     0,   116,   117,
       0,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   133,   134,   135,   136,   137,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     150,   151,   152,   153,   154,   155,   156,   157,   158,     0,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,     0,     0,   170,   171,   172,   173,   174,
       0,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,   184,   185,   186,   187,   188,   189,     0,   190,
       0,   191,   192,   193,   194,     0,   195,     0,   196,     0,
       0,     0,   197,   198,   199,   200,     0,   201,   202,     0,
     203,   204,     0,   205,   206,   207,   208,   209,     0,   210,
     211,   212,   213,     0,   214,   215,   216,   217,   218,   219,
       0,   220,     0,   221,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   229,     0,     0,   230,     0,   231,   232,
     233,   234,   235,     0,     0,   236,   237,     0,   238,     0,
       0,   239,   240,   241,     0,     0,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,     0,   259,   260,   261,   262,   263,     0,
     264,   265,     0,   266,     0,   267,   268,   269,   270,   271,
     272,     0,   273,   274,     0,     0,   275,   276,   277,     0,
       0,   278,   279,     0,   280,     0,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   291,   292,   293,
     294,   295,   296,   297,   298,   299,     0,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,     0,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,     0,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,     0,   370,     0,   371,   372,
     373,   374,   375,     0,   376,   377,     0,     0,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,   388,
     389,     0,     0,   390,   391,   392,   393,   394,     0,     0,
     395,   396,   397,   398,   399,   400,   401,     0,   402,     0,
     403,   404,   405,   406,     0,     0,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    93,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,   472,   103,   104,   105,     0,     0,     0,     0,
       0,     0,     0,   106,   107,     0,   108,   109,   110,     0,
     111,   112,   113,   114,   115,     0,   116,   117,     0,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     133,   134,   135,   136,   137,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   147,   148,
     149,     0,     0,     0,     0,     0,     0,     0,   150,   151,
     152,   153,   154,   155,   156,   157,   158,     0,   159,     0,
     160,   161,   162,   163,   164,   165,     0,   166,   167,   168,
     169,     0,     0,   170,   171,   172,   173,   174,     0,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
     184,   185,   186,   187,   188,   189,     0,   190,     0,   191,
     192,   193,   194,     0,   195,     0,   196,     0,     0,     0,
     197,   198,   199,   200,     0,   201,   202,     0,   203,   204,
       0,   205,   206,   207,   208,   209,     0,   210,   211,   212,
     213,     0,   214,   215,   216,   217,   218,   219,     0,   220,
       0,   221,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   229,     0,     0,   230,     0,   231,   232,   233,   234,
     235,     0,     0,   236,   237,     0,   238,     0,     0,   239,
     240,   241,     0,     0,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,     0,   259,   260,   261,   262,   263,     0,   264,   265,
       0,   266,     0,   267,   268,   269,   270,   271,   272,     0,
     273,   274,     0,     0,   275,   276,   277,     0,     0,   278,
     279,     0,   280,     0,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   291,   292,   293,   294,   295,
     296,   455,   298,   299,     0,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,     0,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,     0,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,     0,   370,     0,   371,   372,   373,   374,
     375,     0,   473,   377,     0,     0,   474,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,   388,   389,     0,
       0,   390,   391,   392,   393,   394,     0,     0,   395,   396,
     397,   398,   399,   400,   401,     0,   402,     0,   403,   404,
     405,   406,     0,     0,   407,     0,     0,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    93,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
     491,   103,   104,   105,     0,     0,     0,     0,     0,     0,
       0,   106,   107,     0,   108,   109,   110,     0,   111,   112,
     113,   114,   115,     0,   116,   117,     0,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   133,   134,
     135,   136,   137,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   150,   151,   152,   153,
     154,   155,   156,   157,   158,     0,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,     0,
       0,   170,   171,   172,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,   184,   185,
     186,   187,   188,   189,     0,   190,     0,   191,   192,   193,
     194,     0,   195,     0,   196,     0,     0,     0,   197,   198,
     199,   200,     0,   201,   202,     0,   203,   204,     0,   205,
     206,   207,   208,   209,     0,   210,   211,   212,   213,     0,
     214,   215,   216,   217,   218,   219,     0,   220,     0,   221,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   229,
       0,     0,   230,     0,   231,   232,   233,   234,   235,     0,
       0,   236,   237,     0,   238,     0,     0,   239,   240,   241,
       0,     0,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,     0,
     259,   260,   261,   262,   263,     0,   264,   265,     0,   266,
       0,   267,   268,   269,   270,   271,   272,     0,   273,   274,
       0,     0,   275,   276,   277,     0,     0,   278,   279,     0,
     280,     0,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   291,   292,   293,   294,   295,   296,   455,
     298,   299,     0,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,     0,   370,     0,   371,   372,   373,   374,   375,     0,
     492,   377,     0,     0,   493,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,   388,   389,     0,     0,   390,
     391,   392,   393,   394,     0,     0,   395,   396,   397,   398,
     399,   400,   401,     0,   402,     0,   403,   404,   405,   406,
       0,     0,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    93,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,     0,   111,   112,   113,   114,
     115,     0,   116,   117,     0,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   133,   134,   135,   136,
     137,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   185,   186,   187,
     188,   189,     0,   190,     0,   191,   192,   193,   194,     0,
     195,     0,   196,     0,     0,     0,   197,   198,   199,   200,
       0,   201,   202,     0,   203,   204,     0,   205,   206,   207,
     208,   209,     0,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,     0,   221,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   229,     0,     0,
     230,     0,   231,   232,   233,   234,   235,     0,     0,   236,
     237,     0,   238,     0,     0,   239,   240,   241,     0,     0,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,     0,   259,   260,
     261,   262,   263,     0,   264,   265,     0,   266,     0,   267,
     268,   269,   270,   271,   272,     0,   273,   274,     0,   496,
     275,   276,   277,     0,     0,   278,   279,     0,   280,     0,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   293,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,     0,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   377,
       0,     0,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,     0,     0,   395,   396,   397,   398,   399,   400,
     401,     0,   402,     0,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    93,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   103,   104,   105,
       0,     0,     0,     0,     0,     0,     0,   106,   107,     0,
     108,   109,   110,     0,   111,   112,   113,   114,   115,     0,
     116,   117,     0,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,     0,     0,   133,   134,   135,   136,   137,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   147,   148,   149,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,     0,     0,   170,   171,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,   184,   185,   186,   187,   188,   189,
       0,   190,     0,   191,   192,   193,   194,     0,   195,     0,
     196,     0,     0,     0,   197,   198,   199,   200,     0,   201,
     202,     0,   203,   204,     0,   205,   206,   207,   208,   534,
       0,   210,   211,   212,   213,     0,   214,   215,   216,   217,
     218,   219,     0,   220,     0,   221,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   229,     0,     0,   230,     0,
     231,   232,   233,   234,   235,     0,     0,   236,   237,     0,
     238,     0,     0,   239,   240,   241,     0,     0,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,     0,   259,   260,   261,   262,
     263,     0,   264,   265,     0,   266,     0,   267,   268,   269,
     270,   271,   272,     0,   273,   274,     0,   496,   275,   276,
     277,     0,     0,   278,   279,     0,   280,     0,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   291,
     292,   293,   294,   295,   296,   455,   298,   299,     0,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,     0,   370,     0,
     371,   372,   373,   374,   375,     0,   376,   377,     0,     0,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,   388,   389,     0,     0,   390,   391,   392,   393,   394,
       0,     0,   395,   396,   397,   398,   399,   400,   401,     0,
     402,     0,   403,   404,   405,   406,     0,     0,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    93,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,   556,   103,   104,   105,     0,     0,
       0,     0,     0,     0,     0,   106,   107,     0,   108,   109,
     110,     0,   111,   112,   113,   114,   115,     0,   116,   117,
       0,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   133,   134,   135,   136,   137,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     150,   151,   152,   153,   154,   155,   156,   157,   158,     0,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,     0,     0,   170,   171,   172,   173,   174,
       0,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,   184,   185,   186,   187,   188,   189,     0,   190,
       0,   191,   192,   193,   194,     0,   195,     0,   196,     0,
       0,     0,   197,   198,   199,   200,     0,   201,   202,     0,
     203,   204,     0,   205,   206,   207,   208,   209,     0,   210,
     211,   212,   213,     0,   214,   215,   216,   217,   218,   219,
       0,   220,     0,   221,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   229,     0,     0,   230,     0,   231,   232,
     233,   234,   235,     0,     0,   236,   237,     0,   238,     0,
       0,   239,   240,   241,     0,     0,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,     0,   259,   260,   261,   262,   263,     0,
     264,   265,     0,   266,     0,   267,   268,   269,   270,   271,
     272,     0,   273,   274,     0,     0,   275,   276,   277,     0,
       0,   278,   279,     0,   280,     0,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   291,   292,   293,
     294,   295,   296,   455,   298,   299,     0,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,     0,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,     0,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,     0,   370,     0,   371,   372,
     373,   374,   375,     0,   376,   377,     0,     0,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,   388,
     389,     0,     0,   390,   391,   392,   393,   394,     0,     0,
     395,   396,   397,   398,   399,   400,   401,     0,   402,     0,
     403,   404,   405,   406,     0,     0,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    93,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   103,   104,   105,     0,     0,     0,     0,
       0,     0,     0,   106,   107,     0,   108,   109,   110,     0,
     111,   112,   113,   114,   115,     0,   116,   117,     0,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     133,   134,   135,   136,   137,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   147,   148,
     149,     0,     0,     0,     0,     0,     0,     0,   150,   151,
     152,   153,   154,   155,   156,   157,   158,     0,   159,     0,
     160,   161,   162,   163,   164,   165,     0,   166,   167,   168,
     169,     0,     0,   170,   171,   172,   173,   174,     0,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
     184,   185,   186,   187,   188,   189,     0,   190,     0,   191,
     192,   193,   194,     0,   195,     0,   196,     0,     0,     0,
     197,   198,   199,  1418,     0,   201,   202,     0,   203,   204,
       0,   205,   206,   207,   208,   209,     0,   210,   211,   212,
     213,     0,   214,   215,   216,   217,   218,   219,     0,   220,
       0,   221,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   229,     0,     0,   230,     0,   231,   232,   233,   234,
     235,     0,     0,   236,   237,     0,   238,     0,     0,   239,
     240,  1419,     0,     0,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,     0,   259,   260,   261,   262,   263,     0,   264,   265,
       0,   266,     0,   267,   268,   269,   270,   271,   272,     0,
     273,   274,     0,     0,   275,   276,   277,     0,     0,   278,
     279,     0,   280,     0,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   291,   292,   293,   294,   295,
     296,   455,   298,   299,     0,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,     0,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,     0,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,  1420,   370,     0,   371,  1421,   373,  1422,
     375,     0,   376,   377,     0,     0,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,   388,   389,     0,
       0,   390,   391,  1423,   393,   394,     0,     0,   395,   396,
     397,   398,   399,   400,   401,     0,   402,     0,   403,   404,
     405,   406,     0,     0,   407,     0,     0,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    93,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   103,   104,   105,     0,     0,     0,     0,     0,  1947,
       0,   106,   107,     0,   108,   109,   110,     0,   111,   112,
     113,   114,   115,     0,   116,   117,     0,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   133,   134,
     135,   136,   137,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   150,   151,   152,   153,
     154,   155,   156,   157,   158,     0,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,     0,
       0,   170,   171,   172,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,   184,   185,
     186,   187,   188,   189,     0,   190,     0,   191,   192,   193,
     194,     0,   195,     0,   196,     0,     0,     0,   197,   198,
     199,   200,     0,   201,   202,     0,   203,   204,     0,   205,
     206,   207,   208,   209,     0,   210,   211,   212,   213,     0,
     214,   215,   216,   217,   218,   219,     0,   220,     0,   221,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   229,
       0,     0,   230,     0,   231,   232,   233,   234,   235,     0,
       0,   236,   237,     0,   238,     0,     0,   239,   240,   241,
       0,     0,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,     0,
     259,   260,   261,   262,   263,     0,   264,   265,     0,   266,
       0,   267,   268,   269,   270,   271,   272,     0,   273,   274,
       0,     0,   275,   276,   277,     0,     0,   278,   279,     0,
     280,     0,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   291,   292,   293,   294,   295,   296,   455,
     298,   299,     0,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,     0,   370,     0,   371,   372,   373,   374,   375,     0,
     376,   377,     0,     0,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,   388,   389,     0,     0,   390,
     391,   392,   393,   394,     0,     0,   395,   396,   397,   398,
     399,   400,   401,     0,   402,     0,   403,   404,   405,   406,
       0,     0,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    93,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,  1961,     0,   106,
     107,     0,   108,   109,   110,     0,   111,   112,   113,   114,
     115,     0,   116,   117,     0,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   133,   134,   135,   136,
     137,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   185,   186,   187,
     188,   189,     0,   190,     0,   191,   192,   193,   194,     0,
     195,     0,   196,     0,     0,     0,   197,   198,   199,   200,
       0,   201,   202,     0,   203,   204,     0,   205,   206,   207,
     208,   209,     0,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,     0,   221,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   229,     0,     0,
     230,     0,   231,   232,   233,   234,   235,     0,     0,   236,
     237,     0,   238,     0,     0,   239,   240,   241,     0,     0,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,     0,   259,   260,
     261,   262,   263,     0,   264,   265,     0,   266,     0,   267,
     268,   269,   270,   271,   272,     0,   273,   274,     0,     0,
     275,   276,   277,     0,     0,   278,   279,     0,   280,     0,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   293,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,     0,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   377,
       0,     0,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,     0,     0,   395,   396,   397,   398,   399,   400,
     401,     0,   402,     0,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    93,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   103,   104,   105,
       0,     0,     0,     0,     0,     0,     0,   106,   107,     0,
     108,   109,   110,     0,   111,   112,   113,   114,   115,     0,
     116,   117,     0,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,     0,     0,   133,   134,   135,   136,   137,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   147,   148,   149,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,     0,     0,   170,   171,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,   184,   185,   186,   187,   188,   189,
       0,   190,     0,   191,   192,   193,   194,     0,   195,     0,
     196,     0,     0,     0,   197,   198,   199,   200,     0,   201,
     202,     0,   203,   204,     0,   205,   206,   207,   208,   209,
       0,   210,   211,   212,   213,     0,   214,   215,   216,   217,
     218,   219,     0,   220,     0,   221,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   229,     0,     0,   230,     0,
     231,   232,   233,   234,   235,     0,     0,   236,   237,     0,
     238,     0,     0,   239,   240,   241,     0,     0,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,     0,   259,   260,   261,   262,
     263,     0,   264,   265,     0,   266,     0,   267,   268,   269,
     270,   271,   272,     0,   273,   274,     0,     0,   275,   276,
     277,     0,     0,   278,   279,     0,   280,     0,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   291,
     292,   293,   294,   295,   296,   455,   298,   299,     0,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,     0,   370,     0,
     371,   372,   373,   374,   375,     0,   376,   377,     0,     0,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,   388,   389,     0,     0,   390,   391,   392,   393,   394,
       0,     0,   395,   396,   397,   398,   399,   400,   401,     0,
     402,     0,   403,   404,   405,   406,     0,     0,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    93,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   103,   104,   105,     0,     0,
       0,     0,     0,     0,     0,   106,   107,     0,   108,   109,
     110,     0,   111,   112,   113,   114,   115,     0,   116,   117,
       0,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   133,   134,   135,   136,   137,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     150,   151,   152,   153,   154,   155,   156,   157,   158,     0,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,     0,     0,   170,   171,   172,   173,   174,
       0,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,   184,   185,   186,   187,   188,   189,     0,   190,
       0,   191,   192,   193,   194,     0,   195,     0,   196,     0,
       0,     0,   197,   198,   199,   200,     0,   201,   202,     0,
     203,   204,     0,   205,   206,   207,   208,   209,     0,   210,
     211,   212,   213,     0,   214,   215,   216,   217,   218,   219,
       0,   220,     0,   221,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   229,     0,     0,   230,     0,   231,   232,
     233,   234,   235,     0,     0,   236,   237,     0,   238,     0,
       0,   239,   240,   484,     0,     0,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,     0,   259,   260,   261,   262,   263,     0,
     264,   265,     0,   266,     0,   267,   268,   269,   270,   271,
     272,     0,   273,   274,     0,     0,   275,   276,   277,     0,
       0,   278,   279,     0,   280,     0,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   291,   292,   293,
     294,   295,   296,   455,   298,   299,     0,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,     0,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   485,   336,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   486,     0,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,     0,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,     0,   370,     0,   371,   372,
     373,   374,   375,     0,   487,   377,     0,     0,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,   388,
     389,     0,     0,   390,   391,   392,   393,   394,     0,     0,
     395,   396,   397,   398,   399,   400,   401,     0,   402,     0,
     403,   404,   405,   406,     0,     0,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    93,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   103,   104,   105,     0,     0,     0,     0,
       0,     0,     0,   106,   107,     0,   108,   109,   110,     0,
     111,   112,   113,   114,   115,     0,   116,   117,     0,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     133,   134,   135,   136,   137,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   147,   148,
     149,     0,     0,     0,     0,     0,     0,     0,   150,   151,
     152,   153,   154,   155,   156,   157,   158,     0,   159,     0,
     160,   161,   162,   163,   164,   165,     0,   166,   167,   168,
     169,     0,     0,   170,   171,   172,   173,   174,     0,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
     184,   185,   186,   187,   188,   189,     0,   190,     0,   191,
     192,   193,   194,     0,   195,     0,   196,     0,     0,     0,
     197,   198,   199,   200,     0,   201,   202,     0,   203,   204,
       0,   205,   206,   207,   208,   209,     0,   210,   211,   212,
     213,     0,   214,   215,   216,   217,   218,   219,     0,   220,
       0,   221,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   229,     0,     0,   230,     0,   231,   232,   233,   234,
     235,     0,     0,   236,   237,     0,   238,     0,     0,   239,
     240,   241,     0,     0,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,     0,   259,   260,   261,   262,   263,     0,   264,   265,
       0,   266,     0,   267,   268,   269,   270,   271,   272,     0,
     273,   274,     0,     0,   275,   276,   277,     0,     0,   278,
     279,     0,   280,     0,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   291,   292,   293,   294,   295,
     296,   455,   298,   299,     0,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   504,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,     0,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,     0,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,     0,   370,     0,   371,   372,   373,   374,
     375,     0,   376,   377,     0,     0,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,   388,   389,     0,
       0,   390,   391,   392,   393,   394,     0,     0,   395,   396,
     397,   398,   399,   400,   401,     0,   402,     0,   403,   404,
     405,   406,     0,     0,   407,     0,     0,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    93,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   103,   104,   105,     0,     0,     0,     0,     0,     0,
       0,   106,   107,     0,   108,   109,   110,     0,   111,   112,
     113,   114,   115,     0,   116,   117,     0,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   133,   134,
     135,   136,   137,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   150,   151,   152,   153,
     154,   155,   156,   157,   158,     0,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,     0,
       0,   170,   171,   172,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,   184,   185,
     186,   187,   188,   189,     0,   190,     0,   191,   192,   193,
     194,     0,   195,     0,   196,     0,     0,     0,   197,   198,
     199,   200,     0,   201,   202,     0,   203,   204,     0,   205,
     206,   207,   208,   529,     0,   210,   211,   212,   213,     0,
     214,   215,   216,   217,   218,   219,     0,   220,     0,   221,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   229,
       0,     0,   230,     0,   231,   232,   233,   234,   235,     0,
       0,   236,   237,     0,   238,     0,     0,   239,   240,   241,
       0,     0,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,     0,
     259,   260,   261,   262,   263,     0,   264,   265,     0,   266,
       0,   267,   268,   269,   270,   271,   272,     0,   273,   274,
       0,     0,   275,   276,   277,     0,     0,   278,   279,     0,
     280,     0,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   291,   292,   293,   294,   295,   296,   455,
     298,   299,     0,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,     0,   370,     0,   371,   372,   373,   374,   375,     0,
     376,   377,     0,     0,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,   388,   389,     0,     0,   390,
     391,   392,   393,   394,     0,     0,   395,   396,   397,   398,
     399,   400,   401,     0,   402,     0,   403,   404,   405,   406,
       0,     0,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    93,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,     0,   111,   112,   113,   114,
     115,     0,   116,   117,     0,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   133,   134,   135,   136,
     137,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   185,   186,   187,
     188,   189,     0,   190,     0,   191,   192,   193,   194,     0,
     195,     0,   196,     0,     0,     0,   197,   198,   199,   200,
       0,   201,   202,     0,   203,   204,     0,   205,   206,   207,
     208,   532,     0,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,     0,   221,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   229,     0,     0,
     230,     0,   231,   232,   233,   234,   235,     0,     0,   236,
     237,     0,   238,     0,     0,   239,   240,   241,     0,     0,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,     0,   259,   260,
     261,   262,   263,     0,   264,   265,     0,   266,     0,   267,
     268,   269,   270,   271,   272,     0,   273,   274,     0,     0,
     275,   276,   277,     0,     0,   278,   279,     0,   280,     0,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   293,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,     0,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   377,
       0,     0,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,     0,     0,   395,   396,   397,   398,   399,   400,
     401,     0,   402,     0,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    93,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   103,   104,   105,
       0,     0,     0,     0,     0,     0,     0,   106,   107,     0,
     108,   109,   110,     0,   111,   112,   113,   114,   115,     0,
     116,   117,     0,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,     0,     0,   133,   134,   135,   136,   137,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   147,   148,   149,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,     0,     0,   170,   171,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,   184,   185,   186,   187,   188,   189,
       0,   190,     0,   191,   192,   193,   194,     0,   195,     0,
     196,     0,     0,     0,   197,   198,   199,   200,     0,   201,
     202,     0,   203,   204,     0,   205,   206,   207,   208,   536,
       0,   210,   211,   212,   213,     0,   214,   215,   216,   217,
     218,   219,     0,   220,     0,   221,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   229,     0,     0,   230,     0,
     231,   232,   233,   234,   235,     0,     0,   236,   237,     0,
     238,     0,     0,   239,   240,   241,     0,     0,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,     0,   259,   260,   261,   262,
     263,     0,   264,   265,     0,   266,     0,   267,   268,   269,
     270,   271,   272,     0,   273,   274,     0,     0,   275,   276,
     277,     0,     0,   278,   279,     0,   280,     0,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   291,
     292,   293,   294,   295,   296,   455,   298,   299,     0,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,     0,   370,     0,
     371,   372,   373,   374,   375,     0,   376,   377,     0,     0,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,   388,   389,     0,     0,   390,   391,   392,   393,   394,
       0,     0,   395,   396,   397,   398,   399,   400,   401,     0,
     402,     0,   403,   404,   405,   406,     0,     0,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    93,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   103,   104,   105,     0,     0,
       0,     0,     0,     0,     0,   106,   107,     0,   108,   109,
     110,     0,   111,   112,   113,   114,   115,     0,   116,   117,
       0,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   133,   134,   135,   136,   137,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     150,   151,   152,   153,   154,   155,   156,   157,   158,     0,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,     0,     0,   170,   171,   172,   173,   174,
       0,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,   184,   185,   186,   187,   188,   189,     0,   190,
       0,   191,   192,   193,   194,     0,   195,     0,   196,     0,
       0,     0,   197,   198,   199,   200,     0,   201,   202,     0,
     203,   204,     0,   205,   206,   207,   208,   549,     0,   210,
     211,   212,   213,     0,   214,   215,   216,   217,   218,   219,
       0,   220,     0,   221,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   229,     0,     0,   230,     0,   231,   232,
     233,   234,   235,     0,     0,   236,   237,     0,   238,     0,
       0,   239,   240,   241,     0,     0,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,     0,   259,   260,   261,   262,   263,     0,
     264,   265,     0,   266,     0,   267,   268,   269,   270,   271,
     272,     0,   273,   274,     0,     0,   275,   276,   277,     0,
       0,   278,   279,     0,   280,     0,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   291,   292,   293,
     294,   295,   296,   455,   298,   299,     0,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,     0,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,     0,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,     0,   370,     0,   371,   372,
     373,   374,   375,     0,   376,   377,     0,     0,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,   388,
     389,     0,     0,   390,   391,   392,   393,   394,     0,     0,
     395,   396,   397,   398,   399,   400,   401,     0,   402,     0,
     403,   404,   405,   406,     0,     0,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    93,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   103,   104,   105,     0,     0,     0,     0,
       0,     0,     0,   106,   107,     0,   108,   109,   110,     0,
     111,   112,   113,   114,   115,     0,   116,   117,     0,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     133,   134,   135,   136,   137,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   147,   148,
     149,     0,     0,     0,     0,     0,     0,     0,   150,   151,
     152,   153,   154,   155,   156,   157,   158,     0,   159,     0,
     160,   161,   162,   163,   164,   165,     0,   166,   167,   168,
     169,     0,     0,   170,   171,   172,   173,   174,     0,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
     184,   185,   186,   187,   188,   189,     0,   190,     0,   191,
     192,   193,   194,     0,   195,     0,   196,     0,     0,     0,
     197,   198,   199,   200,     0,   201,   202,     0,   203,   204,
       0,   205,   206,   207,   208,   564,     0,   210,   211,   212,
     213,     0,   214,   215,   216,   217,   218,   219,     0,   220,
       0,   221,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   229,     0,     0,   230,     0,   231,   232,   233,   234,
     235,     0,     0,   236,   237,     0,   238,     0,     0,   239,
     240,   241,     0,     0,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,     0,   259,   260,   261,   262,   263,     0,   264,   265,
       0,   266,     0,   267,   268,   269,   270,   271,   272,     0,
     273,   274,     0,     0,   275,   276,   277,     0,     0,   278,
     279,     0,   280,     0,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   291,   292,   293,   294,   295,
     296,   455,   298,   299,     0,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,     0,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,     0,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,     0,   370,     0,   371,   372,   373,   374,
     375,     0,   376,   377,     0,     0,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,   388,   389,     0,
       0,   390,   391,   392,   393,   394,     0,     0,   395,   396,
     397,   398,   399,   400,   401,     0,   402,     0,   403,   404,
     405,   406,     0,     0,   407,     0,     0,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    93,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   103,   104,   105,     0,     0,     0,     0,     0,     0,
       0,   106,   107,     0,   108,   109,   110,     0,   111,   112,
     113,   114,   115,     0,   116,   117,     0,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   133,   134,
     135,   136,   137,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   150,   151,   152,   153,
     154,   155,   156,   157,   158,     0,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,     0,
       0,   170,   171,   172,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,   184,   185,
     186,   187,   188,   189,     0,   190,     0,   191,   192,   193,
     194,     0,   195,     0,   196,     0,     0,     0,   197,   198,
     199,   200,     0,   201,   202,     0,   203,   204,     0,   205,
     206,   207,   208,   568,     0,   210,   211,   212,   213,     0,
     214,   215,   216,   217,   218,   219,     0,   220,     0,   221,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   229,
       0,     0,   230,     0,   231,   232,   233,   234,   235,     0,
       0,   236,   237,     0,   238,     0,     0,   239,   240,   241,
       0,     0,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,     0,
     259,   260,   261,   262,   263,     0,   264,   265,     0,   266,
       0,   267,   268,   269,   270,   271,   272,     0,   273,   274,
       0,     0,   275,   276,   277,     0,     0,   278,   279,     0,
     280,     0,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   291,   292,   293,   294,   295,   296,   455,
     298,   299,     0,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,     0,   370,     0,   371,   372,   373,   374,   375,     0,
     376,   377,     0,     0,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,   388,   389,     0,     0,   390,
     391,   392,   393,   394,     0,     0,   395,   396,   397,   398,
     399,   400,   401,     0,   402,     0,   403,   404,   405,   406,
       0,     0,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    93,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,     0,   111,   112,   113,   114,
     115,     0,   116,   117,     0,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   133,   134,   135,   136,
     137,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   185,   186,   187,
     188,   189,     0,   190,     0,   191,   192,   193,   194,     0,
     195,     0,   196,     0,     0,     0,   197,   198,   199,   200,
       0,   201,   202,     0,   203,   204,     0,   205,   206,   207,
     208,   571,     0,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,     0,   221,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   229,     0,     0,
     230,     0,   231,   232,   233,   234,   235,     0,     0,   236,
     237,     0,   238,     0,     0,   239,   240,   241,     0,     0,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,     0,   259,   260,
     261,   262,   263,     0,   264,   265,     0,   266,     0,   267,
     268,   269,   270,   271,   272,     0,   273,   274,     0,     0,
     275,   276,   277,     0,     0,   278,   279,     0,   280,     0,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   293,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,     0,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   377,
       0,     0,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,     0,     0,   395,   396,   397,   398,   399,   400,
     401,     0,   402,     0,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    93,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   103,   104,   105,
       0,     0,     0,     0,     0,     0,     0,   106,   107,     0,
     108,   109,   110,     0,   111,   112,   113,   114,   115,     0,
     116,   117,     0,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,     0,     0,   133,   134,   135,   136,   137,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   147,   148,   149,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,     0,     0,   170,   171,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,   184,   185,   186,   187,   188,   189,
       0,   190,     0,   191,   192,   193,   194,     0,   195,     0,
     196,     0,     0,     0,   197,   198,   199,   200,     0,   201,
     202,     0,   203,   204,     0,   205,   206,   207,   208,   209,
       0,   210,   211,   212,   213,     0,   214,   215,   216,   217,
     218,   219,     0,   220,     0,   221,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   229,     0,     0,   230,     0,
     231,   232,   233,   234,   235,     0,     0,   236,   237,     0,
     238,     0,     0,   239,   240,   241,     0,     0,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,     0,   259,   260,   261,   262,
     263,     0,   264,   265,     0,   266,     0,   267,   268,   269,
     270,   271,   272,     0,   273,   274,     0,     0,   275,   276,
     277,     0,     0,   278,   279,     0,   280,     0,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   291,
     292,   293,   294,   295,   296,   455,   298,   299,     0,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   485,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,     0,   370,     0,
     371,   372,   373,   374,   375,     0,   487,   377,     0,     0,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,   388,   389,     0,     0,   390,   391,   392,   393,   394,
       0,     0,   395,   396,   397,   398,   399,   400,   401,     0,
     402,     0,   403,   404,   405,   406,     0,     0,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    93,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   103,   104,   105,     0,     0,
       0,     0,     0,     0,     0,   106,   107,     0,   108,   109,
     110,     0,   111,   112,   113,   114,   115,     0,   116,   117,
       0,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   133,   134,   135,   136,   137,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     150,   151,   152,   153,   154,   155,   156,   157,   158,     0,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,     0,     0,   170,   171,   172,   173,   174,
       0,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,   184,   185,   186,   187,   188,   189,     0,   190,
       0,   191,   192,   193,   194,     0,   195,     0,   196,     0,
       0,     0,   197,   198,   199,   200,     0,   201,   202,     0,
     203,   204,     0,   205,   206,   207,   208,   821,     0,   210,
     211,   212,   213,     0,   214,   215,   216,   217,   218,   219,
       0,   220,     0,   221,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   229,     0,     0,   230,     0,   231,   232,
     233,   234,   235,     0,     0,   236,   237,     0,   238,     0,
       0,   239,   240,   241,     0,     0,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,     0,   259,   260,   261,   262,   263,     0,
     264,   265,     0,   266,     0,   267,   268,   269,   270,   271,
     272,     0,   273,   274,     0,     0,   275,   276,   277,     0,
       0,   278,   279,     0,   280,     0,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   291,   292,   293,
     294,   295,   296,   455,   298,   299,     0,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,     0,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,     0,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,     0,   370,     0,   371,   372,
     373,   374,   375,     0,   376,   377,     0,     0,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,   388,
     389,     0,     0,   390,   391,   392,   393,   394,     0,     0,
     395,   396,   397,   398,   399,   400,   401,     0,   402,     0,
     403,   404,   405,   406,     0,     0,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    93,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   103,   104,   105,     0,     0,     0,     0,
       0,     0,     0,   106,   107,     0,   108,   109,   110,     0,
     111,   112,   113,   114,   115,     0,   116,   117,     0,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     133,   134,   135,   136,   137,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   147,   148,
     149,     0,     0,     0,     0,     0,     0,     0,   150,   151,
     152,   153,   154,   155,   156,   157,   158,     0,   159,     0,
     160,   161,   162,   163,   164,   165,     0,   166,   167,   168,
     169,     0,     0,   170,   171,   172,   173,   174,     0,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
     184,   185,   186,   187,   188,   189,     0,   190,     0,   191,
     192,   193,   194,     0,   195,     0,   196,     0,     0,     0,
     197,   198,   199,   200,     0,   201,   202,     0,   203,   204,
       0,   205,   206,   207,   208,   823,     0,   210,   211,   212,
     213,     0,   214,   215,   216,   217,   218,   219,     0,   220,
       0,   221,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   229,     0,     0,   230,     0,   231,   232,   233,   234,
     235,     0,     0,   236,   237,     0,   238,     0,     0,   239,
     240,   241,     0,     0,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,     0,   259,   260,   261,   262,   263,     0,   264,   265,
       0,   266,     0,   267,   268,   269,   270,   271,   272,     0,
     273,   274,     0,     0,   275,   276,   277,     0,     0,   278,
     279,     0,   280,     0,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   291,   292,   293,   294,   295,
     296,   455,   298,   299,     0,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,     0,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,     0,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,     0,   370,     0,   371,   372,   373,   374,
     375,     0,   376,   377,     0,     0,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,   388,   389,     0,
       0,   390,   391,   392,   393,   394,     0,     0,   395,   396,
     397,   398,   399,   400,   401,     0,   402,     0,   403,   404,
     405,   406,     0,     0,   407,     0,     0,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    93,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   103,   104,   105,     0,     0,     0,     0,     0,  1127,
       0,   106,   107,     0,   108,   109,   110,     0,   111,   112,
     113,   114,   115,     0,   116,   117,     0,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   133,   134,
     135,   136,   137,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   150,   151,   152,   153,
     154,   155,   156,   157,   158,     0,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,     0,
       0,   170,   171,   172,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,   184,   185,
     186,   187,   188,   189,     0,   190,     0,   191,   192,   193,
     194,     0,   195,     0,   196,     0,     0,     0,   197,   198,
     199,   200,     0,   201,   202,     0,   203,   204,     0,   205,
     206,   207,   208,   209,     0,   210,   211,   212,   213,     0,
     214,   215,   216,   217,   218,   219,     0,   220,     0,   221,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   229,
       0,     0,   230,     0,   231,   232,   233,   234,   235,     0,
       0,   236,   237,     0,   238,     0,     0,   239,   240,   241,
       0,     0,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,     0,
     259,   260,   261,   262,   263,     0,   264,   265,     0,   266,
       0,   267,   268,   269,   270,   271,   272,     0,   273,   274,
       0,     0,   275,   276,   277,     0,     0,   278,   279,     0,
     280,     0,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   291,   292,   293,   294,   295,   296,   455,
     298,   299,     0,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,     0,     0,   347,   348,   349,   350,     0,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,     0,   370,     0,   371,   372,   373,   374,   375,     0,
     376,   377,     0,     0,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,   388,   389,     0,     0,   390,
     391,   392,   393,   394,     0,     0,   395,   396,   397,   398,
     399,   400,   401,     0,   402,     0,   403,   404,   405,   406,
       0,     0,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    93,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,     0,   111,   112,   113,   114,
     115,     0,   116,   117,     0,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   133,   134,   135,   136,
     137,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   185,   186,   187,
     188,   189,     0,   190,     0,   191,   192,   193,   194,     0,
     195,     0,   196,     0,     0,     0,   197,   198,   199,   200,
       0,   201,   202,     0,   203,   204,     0,   205,   206,   207,
     208,  1245,     0,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,     0,   221,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   229,     0,     0,
     230,     0,   231,   232,   233,   234,   235,     0,     0,   236,
     237,     0,   238,     0,     0,   239,   240,   241,     0,     0,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,     0,   259,   260,
     261,   262,   263,     0,   264,   265,     0,   266,     0,   267,
     268,   269,   270,   271,   272,     0,   273,   274,     0,     0,
     275,   276,   277,     0,     0,   278,   279,     0,   280,     0,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   293,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,     0,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   377,
       0,     0,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,     0,     0,   395,   396,   397,   398,   399,   400,
     401,     0,   402,     0,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    93,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   103,   104,   105,
       0,     0,     0,     0,     0,     0,     0,   106,   107,     0,
     108,   109,   110,     0,   111,   112,   113,   114,   115,     0,
     116,   117,     0,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,     0,     0,   133,   134,   135,   136,   137,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   147,   148,   149,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,     0,     0,   170,   171,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,   184,   185,   186,   187,   188,   189,
       0,   190,     0,   191,   192,   193,   194,     0,   195,     0,
     196,     0,     0,     0,   197,   198,   199,   200,     0,   201,
     202,     0,   203,   204,     0,   205,   206,   207,   208,  1258,
       0,   210,   211,   212,   213,     0,   214,   215,   216,   217,
     218,   219,     0,   220,     0,   221,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   229,     0,     0,   230,     0,
     231,   232,   233,   234,   235,     0,     0,   236,   237,     0,
     238,     0,     0,   239,   240,   241,     0,     0,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,     0,   259,   260,   261,   262,
     263,     0,   264,   265,     0,   266,     0,   267,   268,   269,
     270,   271,   272,     0,   273,   274,     0,     0,   275,   276,
     277,     0,     0,   278,   279,     0,   280,     0,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   291,
     292,   293,   294,   295,   296,   455,   298,   299,     0,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,     0,   370,     0,
     371,   372,   373,   374,   375,     0,   376,   377,     0,     0,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,   388,   389,     0,     0,   390,   391,   392,   393,   394,
       0,     0,   395,   396,   397,   398,   399,   400,   401,     0,
     402,     0,   403,   404,   405,   406,     0,     0,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    93,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   103,   104,   105,     0,     0,
       0,     0,     0,     0,     0,   106,   107,     0,   108,   109,
     110,     0,   111,   112,   113,   114,   115,     0,   116,   117,
       0,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   133,   134,   135,   136,   137,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     150,   151,   152,   153,   154,   155,   156,   157,   158,     0,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,     0,     0,   170,   171,   172,   173,   174,
       0,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,   184,   185,   186,   187,   188,   189,     0,   190,
       0,   191,   192,   193,   194,     0,   195,     0,   196,     0,
       0,     0,   197,   198,   199,   200,     0,   201,   202,     0,
     203,   204,     0,   205,   206,   207,   208,  1496,     0,   210,
     211,   212,   213,     0,   214,   215,   216,   217,   218,   219,
       0,   220,     0,   221,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   229,     0,     0,   230,     0,   231,   232,
     233,   234,   235,     0,     0,   236,   237,     0,   238,     0,
       0,   239,   240,   241,     0,     0,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,     0,   259,   260,   261,   262,   263,     0,
     264,   265,     0,   266,     0,   267,   268,   269,   270,   271,
     272,     0,   273,   274,     0,     0,   275,   276,   277,     0,
       0,   278,   279,     0,   280,     0,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   291,   292,   293,
     294,   295,   296,   455,   298,   299,     0,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,     0,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,     0,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,     0,   370,     0,   371,   372,
     373,   374,   375,     0,   376,   377,     0,     0,   378,   379,
     380,   381,   382,     0,   383,   384,   385,   386,   387,   388,
     389,     0,     0,   390,   391,   392,   393,   394,     0,     0,
     395,   396,   397,   398,   399,   400,   401,     0,   402,     0,
     403,   404,   405,   406,     0,     0,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    93,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   103,   104,   105,     0,     0,     0,     0,
       0,     0,     0,   106,   107,     0,   108,   109,   110,     0,
     111,   112,   113,   114,   115,     0,   116,   117,     0,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     133,   134,   135,   136,   137,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   147,   148,
     149,     0,     0,     0,     0,     0,     0,     0,   150,   151,
     152,   153,   154,   155,   156,   157,   158,     0,   159,     0,
     160,   161,   162,   163,   164,   165,     0,   166,   167,   168,
     169,     0,     0,   170,   171,   172,   173,   174,     0,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
     184,   185,   186,   187,   188,   189,     0,   190,     0,   191,
     192,   193,   194,     0,   195,     0,   196,     0,     0,     0,
     197,   198,   199,   200,     0,   201,   202,     0,   203,   204,
       0,   205,   206,   207,   208,  1508,     0,   210,   211,   212,
     213,     0,   214,   215,   216,   217,   218,   219,     0,   220,
       0,   221,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   229,     0,     0,   230,     0,   231,   232,   233,   234,
     235,     0,     0,   236,   237,     0,   238,     0,     0,   239,
     240,   241,     0,     0,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,     0,   259,   260,   261,   262,   263,     0,   264,   265,
       0,   266,     0,   267,   268,   269,   270,   271,   272,     0,
     273,   274,     0,     0,   275,   276,   277,     0,     0,   278,
     279,     0,   280,     0,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   291,   292,   293,   294,   295,
     296,   455,   298,   299,     0,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,     0,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,     0,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,     0,   370,     0,   371,   372,   373,   374,
     375,     0,   376,   377,     0,     0,   378,   379,   380,   381,
     382,     0,   383,   384,   385,   386,   387,   388,   389,     0,
       0,   390,   391,   392,   393,   394,     0,     0,   395,   396,
     397,   398,   399,   400,   401,     0,   402,     0,   403,   404,
     405,   406,     0,     0,   407,     0,     0,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    93,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   103,   104,   105,     0,     0,     0,     0,     0,     0,
       0,   106,   107,     0,   108,   109,   110,     0,   111,   112,
     113,   114,   115,     0,   116,   117,     0,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   133,   134,
     135,   136,   137,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   150,   151,   152,   153,
     154,   155,   156,   157,   158,     0,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,     0,
       0,   170,   171,   172,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,   184,   185,
     186,   187,   188,   189,     0,   190,     0,   191,   192,   193,
     194,     0,   195,     0,   196,     0,     0,     0,   197,   198,
     199,   200,     0,   201,   202,     0,   203,   204,     0,   205,
     206,   207,   208,  1510,     0,   210,   211,   212,   213,     0,
     214,   215,   216,   217,   218,   219,     0,   220,     0,   221,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   229,
       0,     0,   230,     0,   231,   232,   233,   234,   235,     0,
       0,   236,   237,     0,   238,     0,     0,   239,   240,   241,
       0,     0,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,     0,
     259,   260,   261,   262,   263,     0,   264,   265,     0,   266,
       0,   267,   268,   269,   270,   271,   272,     0,   273,   274,
       0,     0,   275,   276,   277,     0,     0,   278,   279,     0,
     280,     0,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   291,   292,   293,   294,   295,   296,   455,
     298,   299,     0,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,     0,   370,     0,   371,   372,   373,   374,   375,     0,
     376,   377,     0,     0,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,   388,   389,     0,     0,   390,
     391,   392,   393,   394,     0,     0,   395,   396,   397,   398,
     399,   400,   401,     0,   402,     0,   403,   404,   405,   406,
       0,     0,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    93,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,     0,   111,   112,   113,   114,
     115,     0,   116,   117,     0,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   133,   134,   135,   136,
     137,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   185,   186,   187,
     188,   189,     0,   190,     0,   191,   192,   193,   194,     0,
     195,     0,   196,     0,     0,     0,   197,   198,   199,   200,
       0,   201,   202,     0,   203,   204,     0,   205,   206,   207,
     208,  2066,     0,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,     0,   221,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   229,     0,     0,
     230,     0,   231,   232,   233,   234,   235,     0,     0,   236,
     237,     0,   238,     0,     0,   239,   240,   241,     0,     0,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,     0,   259,   260,
     261,   262,   263,     0,   264,   265,     0,   266,     0,   267,
     268,   269,   270,   271,   272,     0,   273,   274,     0,     0,
     275,   276,   277,     0,     0,   278,   279,     0,   280,     0,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   293,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,     0,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   377,
       0,     0,   378,   379,   380,   381,   382,     0,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,     0,     0,   395,   396,   397,   398,   399,   400,
     401,     0,   402,     0,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    93,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   103,   104,   105,
       0,     0,     0,     0,     0,     0,     0,   106,   107,     0,
     108,   109,   110,     0,   111,   112,   113,   114,   115,     0,
     116,   117,     0,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,     0,     0,   133,   134,   135,   136,   137,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   147,   148,   149,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,     0,     0,   170,   171,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,   184,   185,   186,   187,   188,   189,
       0,   190,     0,   191,   192,   193,   194,     0,   195,     0,
     196,     0,     0,     0,   197,   198,   199,   200,     0,   201,
     202,     0,   203,   204,     0,   205,   206,   207,   208,   209,
       0,   210,   211,   212,   213,     0,   214,   215,   216,   217,
     218,   219,     0,   220,     0,   221,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   229,     0,     0,   230,     0,
     231,   232,   233,   234,   235,     0,     0,   236,   237,     0,
     238,     0,     0,   239,   240,   241,     0,     0,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,     0,   259,   260,   261,   262,
     263,     0,   264,   265,     0,   266,     0,   267,   268,   269,
     270,   271,   272,     0,   273,   274,     0,     0,   275,   276,
     277,     0,     0,   278,   279,     0,   280,     0,   281,   282,
     283,   284,   285,   286,   287,     0,   289,   290,     0,   291,
     292,   293,   294,   295,   296,   455,   298,   299,     0,   300,
     301,   302,   303,   304,   305,   306,     0,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,     0,
     328,   329,   330,   331,     0,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,     0,   370,     0,
     371,   372,   373,   374,   375,     0,   376,   377,     0,     0,
     378,   379,   380,   381,   382,     0,   383,   384,   385,   386,
     387,   388,   389,     0,     0,   390,   391,   392,   393,   394,
       0,     0,   395,   396,   397,   398,   399,   400,   401,     0,
     402,     0,   403,   404,   405,   406,     0,     0,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   874,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   103,   104,   105,     0,     0,
       0,     0,     0,     0,     0,   106,   107,     0,   108,   109,
     110,   578,   111,   112,   113,     0,   875,   579,   876,   877,
       0,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     878,   879,   127,     0,   128,   129,   130,   131,     0,     0,
     580,     0,   133,   134,   135,   136,   137,   581,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,   582,
     147,   148,   149,     0,     0,     0,   583,     0,     0,     0,
     150,   151,   152,   153,   154,   155,   880,   881,   158,     0,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,     0,     0,   170,   171,   645,   173,   174,
       0,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,   184,     0,   186,   187,   188,     0,     0,   190,
       0,   191,   192,   882,   194,     0,   195,     0,   196,   584,
       0,   585,   197,   198,   199,   200,     0,   201,     0,     0,
       0,   204,     0,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,     0,   214,   215,   216,   217,   218,   219,
       0,   220,   587,     0,   222,   223,   224,   225,   883,   884,
       0,   885,     0,   229,   588,   589,   230,   590,   231,   232,
     233,   234,   235,     0,     0,   236,     0,   591,   238,   592,
       0,   239,   240,   241,     0,     0,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   886,   593,   887,   260,   261,   262,     0,     0,
     264,   265,   594,   266,     0,     0,   268,   888,   270,   271,
     272,     0,   273,   274,     0,     0,   275,   276,   277,     0,
       0,   278,     0,   595,   280,   596,     0,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   291,   292,     0,
     294,   295,     0,   455,   298,   299,     0,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   889,   310,   311,   312,
     313,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,     0,   326,   327,   597,   328,   329,
     330,     0,   332,   333,   334,   335,   336,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,     0,   346,   890,
     348,   349,   350,   598,   351,   352,   891,   354,     0,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,     0,     0,   368,   369,     0,   370,   599,   371,   372,
     373,   374,   375,     0,   892,   893,     0,     0,   378,   379,
       0,   381,     0,     0,   383,   384,   385,   386,   387,   388,
     389,     0,     0,   390,   391,   392,   393,   394,     0,     0,
     395,   396,   397,   398,   399,     0,   894,     0,   402,   601,
     403,   404,   405,   406,     0,     0,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   874,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   425,   426,   427,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,   578,   111,   112,   113,     0,
     875,   579,   876,   877,     0,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   878,   879,   127,     0,   128,   129,
     130,   131,     0,     0,   580,     0,   133,   134,   135,   136,
     137,   581,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   582,   147,   148,   149,     0,     0,     0,
     583,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     880,   881,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   645,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,     0,   186,   187,
     188,     0,     0,   190,     0,   191,   192,   882,   194,     0,
     195,     0,   196,   584,     0,   585,   197,   198,   199,   200,
       0,   201,     0,     0,     0,   204,     0,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,   587,     0,   222,   223,
     224,   225,   883,   884,     0,   885,     0,   229,   588,   589,
     230,   590,   231,   232,   233,   234,   235,     0,     0,   236,
       0,   591,   238,   592,     0,   239,   240,   241,     0,     0,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   886,   593,   887,   260,
     261,   262,     0,     0,   264,   265,   594,   266,     0,     0,
     268,   888,   270,   271,   272,     0,   273,   274,     0,     0,
     275,   276,   277,     0,     0,   278,     0,   595,   280,   596,
       0,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,     0,   294,   295,     0,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     889,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   597,   328,   329,   330,     0,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,     0,   346,     0,   348,   349,   350,   598,   351,   352,
     891,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,     0,     0,   368,   369,     0,
     370,   599,   371,   372,   373,   374,   375,     0,   892,   893,
       0,     0,   378,   379,     0,   381,     0,     0,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,     0,     0,   395,   396,   397,   398,   399,     0,
     894,     0,   402,   601,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     425,   426,   427
};

static const yytype_int16 yycheck[] =
{
      15,   533,    29,    50,   804,     0,   451,   606,   606,   483,
       0,    10,   499,     0,    13,     0,   543,    16,    17,    18,
     944,   452,    21,    22,   764,    24,   642,   643,    27,    28,
       0,   524,   569,   459,   802,   908,   790,   683,  1435,   777,
     819,   971,   819,   730,    14,    14,   662,   459,   819,   819,
     847,   457,  1010,   968,   732,  1503,  1506,   672,   775,  1269,
     779,  1763,  1811,  1512,  1830,  1514,   782,  1390,    24,  1686,
    1713,   910,   613,  1457,    73,    74,    75,    76,    77,     0,
      52,  1838,  1845,    82,  1013,    28,    81,    86,   807,     9,
      49,    81,    52,     9,    81,     5,    81,    11,   839,  2070,
       5,    10,     5,   459,    13,     5,   106,     5,    17,    56,
      56,    81,     5,     5,  1562,    13,    14,     0,    27,    28,
      76,     5,   720,   458,     5,  2073,     5,  1148,   533,     9,
     535,  1719,   537,    39,    13,    14,   890,     5,   111,     5,
    2076,     0,   548,     5,     5,    13,    14,    65,    39,   503,
     162,  2140,   839,   104,   163,     5,   132,    26,   464,    56,
      11,    26,   204,   113,    33,    74,    73,     4,    33,     3,
       4,     5,     9,    22,     0,     9,    83,   177,  1752,   720,
     606,  1150,    56,   521,  1718,   611,   231,  1655,    14,    40,
     264,  2211,  2025,   791,   606,     8,   794,   795,    11,   611,
      73,     3,    80,    29,     4,   613,   946,    90,   163,     9,
      83,    35,   111,   272,   162,   104,    11,  2292,   272,   573,
      71,  1431,   521,   118,   711,    11,    52,    40,    30,    31,
      54,    90,   333,    71,    47,  2343,   914,   237,   252,  2241,
     240,   159,   231,  2401,   122,    40,  2168,   111,  1178,   790,
     255,   152,  1427,   113,   237,    81,   311,  2122,    71,    73,
     266,    75,   156,    77,   880,   881,   152,  2189,    82,  1782,
     152,   157,   888,  1448,    26,   610,    71,   111,   893,   103,
      26,   130,   154,  2272,    11,   963,   964,    33,   306,   976,
     411,  2227,   337,   467,  2159,   411,   722,   723,   297,   826,
    1917,    36,  2068,  1626,   730,   376,   279,   114,  1951,   154,
     722,   723,  1955,    40,   178,   746,   334,   114,   730,  1628,
     468,   222,   116,   471,   432,   138,    30,    31,   682,   284,
    1778,  1781,  1780,   116,  1012,  2443,   222,  1850,     5,   410,
     222,   341,   214,    26,    71,   453,   467,  1656,   337,   890,
    2183,   467,   357,  1941,   390,  1285,     0,   256,   341,   161,
     249,   163,   407,   187,    11,  2523,   467,   180,   423,   203,
     343,   140,   185,   125,   181,   249,  2241,   263,   325,   325,
     298,   263,   790,   266,   181,   120,    90,   251,   297,   834,
    2312,   225,   837,   467,  2469,   409,   256,   433,  1138,   293,
     845,   356,   162,   248,   377,   283,  1940,   266,   221,  1877,
     841,   235,   471,   839,   238,   198,    11,   471,   407,  1993,
     774,   270,   467,   849,    71,   249,   377,   839,   325,   471,
     971,  1169,   459,   202,   772,   741,  2544,   849,     8,  1239,
     388,    11,   125,   326,   417,    15,    16,    17,   448,  1470,
     426,   325,   451,   452,   453,   268,   280,   430,   467,   471,
    2480,   467,  2211,   413,   367,   368,  1390,   326,   374,  2458,
     485,  1429,  1430,   772,   323,   324,   350,   524,   467,  2096,
     453,   388,   890,   374,  2127,   484,   404,   486,   458,  2132,
     459,   360,  2135,   849,   467,   360,  2444,   496,   210,  1186,
     324,   350,  1471,   272,   382,   504,  2508,  2372,   467,  2445,
     420,  1252,   470,   848,   231,   388,   411,   516,   513,    47,
     344,  1731,  1437,   513,   471,   471,   513,   432,   513,   528,
    1459,  2502,   501,  2398,   979,  2123,  1711,   249,  1713,   511,
     364,  1465,   355,   513,   453,   231,   466,   430,   453,   463,
     976,   511,  2002,   552,   553,   554,   472,   467,   471,   913,
     516,   504,   467,   971,   976,  1252,  2015,   467,   922,   467,
     321,   430,   926,   465,   467,   467,  2342,   469,   458,   459,
     934,   935,   432,   467,  2347,   468,   467,   470,   467,  2346,
     116,   606,   513,   947,   948,   504,   611,  1337,  1338,   467,
    1198,   467,  1342,   453,   130,   467,   467,  1991,  1447,   468,
    1208,   470,   463,  1211,   360,   409,  2064,   467,   617,   421,
     337,   458,   459,  2266,   458,   459,   409,   465,   388,  2246,
     430,   469,   458,   459,   403,  1375,  1376,  1178,   451,   343,
     610,   353,  1572,  2508,   468,   458,   459,   460,   461,   462,
     463,   337,   180,   453,   421,   682,   311,   185,   458,   459,
     142,   188,  1194,   458,   459,   460,   461,   462,   463,   236,
     685,  1287,  1995,   377,   460,   461,   462,   463,   125,  2510,
     695,  1611,   496,   393,  2450,   511,    90,   513,    22,   344,
     407,    57,   707,   221,    28,   423,   456,   409,   268,    65,
      73,   340,  1626,  1633,   186,   720,   231,   722,   723,   469,
      83,   324,  1249,   417,   528,  1361,  1253,   421,   125,  1256,
    2170,   407,   377,    22,  1441,   427,   430,   726,   467,    28,
    1530,  2480,  1662,   460,   461,   462,   463,   350,   552,   553,
     554,  2572,   231,   150,  1285,   231,   745,   746,   163,   453,
     467,    29,   751,   752,   753,  1422,  1423,    65,  1184,  1204,
    1186,   467,  1167,   467,  1209,  1975,   432,  1564,   423,   471,
    1178,   297,  1184,    11,  1186,    53,  1951,   776,   777,   194,
    1955,   467,    13,    14,   610,   757,   758,   453,   760,  1194,
     789,   450,   177,   456,   209,   751,   130,   757,   758,   456,
     760,   467,    40,   111,   219,  2571,   469,   806,  1213,   208,
     467,   810,   337,  1218,   261,  1461,   815,   469,   125,  1538,
     646,   820,  2524,  2525,  1230,   251,  1252,   355,   266,   828,
     256,   130,   113,    71,   103,   834,   745,   430,   837,   343,
    1252,  1267,   841,   842,   251,   844,   845,  2297,   847,   256,
     806,   337,   237,  2302,   261,  1267,   682,  1573,   166,   225,
     453,    73,  1578,   458,   459,   460,   461,   462,   463,   450,
       4,    83,  2574,   377,     3,     9,     5,  1285,   848,   305,
     849,  1811,   407,   460,   454,   455,   456,  1811,   458,   459,
     460,   461,   462,   463,  1634,  1635,  1636,  1637,    62,    63,
    1640,  1641,  1642,  1643,  1644,  1645,  1646,  1647,  1648,  1649,
     450,   192,   726,   417,   329,   910,   931,     4,   407,     8,
     910,   407,     9,   910,   106,   910,    15,    16,    17,    13,
      14,   757,   758,   842,   760,   844,   270,  1291,   752,   343,
     910,  1434,   467,   251,   251,   944,   208,  2122,   256,   465,
    1690,  1691,  2127,   469,   261,  1427,   341,  2132,   125,   167,
    2135,  2136,   776,   467,   161,   381,   235,   383,   249,   238,
     251,   270,  1509,   377,  1511,   789,  1448,   106,   467,   471,
     979,   467,   467,   150,  2159,   319,  2434,  2435,   395,   323,
     298,  1669,  1792,  1908,   152,   177,   810,   468,   405,   157,
    2397,  1355,  2473,  1018,  2475,   313,   820,   432,  1007,  1967,
     468,    18,   188,   417,   462,    22,   350,   225,   162,   467,
     319,   469,   848,  1791,   323,  1379,   430,   468,   453,     4,
     471,  1572,  1559,   847,     9,  1702,  1703,  1704,  1705,   343,
     468,  1779,   467,   471,   204,  1660,  1661,  2495,   177,   453,
     468,   350,  1831,   471,  1831,   237,  1853,  1825,   240,   144,
    1831,  1831,  1416,   467,   222,   311,  2241,  1597,  1598,  1599,
    1611,  1995,   462,   377,  1790,   468,  1792,   467,   471,   469,
     414,  1759,   631,   632,   910,  2556,  1512,  1513,  1514,   256,
      53,  2266,  1633,  2332,   261,   467,   404,  2336,   344,  2338,
    1512,  1513,  1514,  2033,  1750,   263,   333,   334,   237,   658,
    2560,   240,  2509,   417,    22,   414,   381,  1116,   383,  1118,
      28,  1662,   145,  1810,   468,  1812,   430,   471,  1127,  2526,
    1129,   377,   465,   319,   467,  1125,   469,   333,   334,  1354,
    1585,  1356,  1357,   468,   468,  1686,   471,    22,  1117,   453,
     144,   468,   145,    28,   471,   981,   467,   145,   469,   341,
      22,   337,  1161,   467,  1572,   145,    28,   430,   344,   432,
    1169,  1170,   467,   381,   469,   383,  2049,   423,   381,   268,
     383,  1180,  1181,  1182,  1183,  2582,  1185,   251,   468,    22,
     467,   471,  1191,  1007,  1193,    28,   381,  2372,   383,   407,
      91,   377,   423,  1611,   468,  1204,  1205,   471,   722,   723,
    1209,  1210,   341,  1811,    79,  1214,  1215,  1216,  1217,   434,
    1219,  1220,   130,  2398,   468,  1633,   145,   471,   395,  1228,
    1229,  2031,   333,   334,  1727,  1728,  1729,  1724,   405,  1711,
     469,  1713,  1241,    22,   518,   468,   520,   423,   471,    28,
     145,   145,  1267,  1243,  1662,   130,   266,   468,   343,   468,
     471,  1170,   471,   377,    26,  2003,   448,  1956,   130,  1958,
    1811,  1180,   163,  1182,   333,   334,  1185,    65,  1686,    35,
     220,  2211,  1191,    71,  1193,   467,  2040,  2211,   210,   484,
    1968,   486,   377,   467,     5,    83,  1205,   130,     5,  1125,
     157,  1210,  1116,   194,  1118,  1214,  1215,  1216,  1217,  1987,
    1219,  1220,  1339,  1667,    76,  1852,   294,   468,   209,   448,
     471,   468,    84,   111,   471,   113,   467,   249,   219,   878,
     879,   468,   417,  2508,   471,   167,  2209,   468,   887,   467,
     471,  2271,     5,   468,  2274,   430,   471,  1161,     5,   343,
     112,   130,  1379,  2093,   245,   468,   188,   468,   471,   467,
     471,   468,   270,   467,   471,   454,   455,   456,   453,   458,
     459,   460,   461,   462,   463,   266,  1917,   467,   166,   467,
    1806,   467,   467,   377,  1810,   307,  1812,   467,   467,   938,
     939,  1390,   467,   225,  1806,   270,   468,   467,  1810,   471,
    1812,     5,   468,  1811,   192,   471,   468,   468,   270,   471,
     471,   319,   467,   467,  1228,   323,   178,  1243,     5,   468,
     467,  1420,   471,   417,  2022,  1452,   467,   189,  1427,   606,
      91,   353,   467,     5,   611,     7,   430,   270,   329,   271,
      12,  2181,   350,  2121,   319,   467,   467,    19,   323,  1448,
    2218,    23,  1447,  1452,   467,  1942,  1455,  1447,  1457,   453,
    1447,   323,  1447,   251,   279,   431,   468,   468,   256,   471,
     471,   468,   277,   467,   471,   350,   204,  1447,   468,  1951,
     471,   471,   468,  1955,    94,   471,   319,   409,   350,   220,
     323,   270,  2033,    35,   613,   350,   263,  2034,  2035,  2040,
     261,   157,   163,  1518,  1503,  2245,   414,   157,  1982,  1917,
     298,   388,   468,  1339,   140,   471,   468,   350,   468,   471,
     411,   471,   467,   467,    83,   313,   152,  2214,   343,   612,
     613,   157,   468,   194,   468,   471,  1551,   471,   468,   414,
     319,   471,   471,   720,   323,   722,   723,   388,   209,   381,
    2480,   383,   414,  1379,  1553,  2096,  2480,   468,   219,  1558,
     471,   140,   377,  1562,  1563,  1564,  1565,   468,    53,  1395,
     471,   350,   404,   152,    53,   407,   202,  1576,   157,   388,
     468,   414,  1581,   471,   245,  1411,  1585,   468,   242,  2015,
     471,    49,   468,   388,  2210,   471,   222,   468,  1588,   388,
     471,  1427,   417,  2015,   366,   468,  1420,   369,   471,   468,
     430,  2298,   471,  2211,   791,   430,   404,   794,   795,   145,
      90,  1447,  1448,   202,   251,  2033,  1452,  1626,   251,   467,
      35,   471,  2040,   469,    92,   414,   467,   263,   453,   420,
     467,    34,   467,   222,   426,   467,   272,     9,   386,  2142,
    2122,  1698,   467,   386,   471,  2127,  2149,    11,  1673,   117,
    2132,   386,   388,  2135,   467,   467,   171,  1576,   329,  1696,
    2211,   790,   153,   162,   468,   473,   134,   854,   855,   411,
     138,   467,    35,   202,   263,   353,  1713,  2159,  2096,   210,
     267,   471,   467,   272,   471,   210,   251,   210,   303,   264,
     158,  1700,   423,   161,  2320,  2246,   145,   790,   467,  1708,
    1709,  1710,  1711,   145,  1713,  1714,   251,   175,   430,  1718,
    1719,   266,   266,   251,    35,    34,   465,   467,  2327,  2327,
    2271,   465,   468,  2274,  2179,   388,  2423,   388,   468,   388,
    2540,   388,   162,   162,  1558,   468,   468,   924,   925,  1563,
    1564,  1565,   468,   468,   471,   932,   469,  1756,   468,   936,
     937,  2254,  1588,   468,   468,   468,   450,  1581,   450,  2241,
     468,   890,   468,  1772,   951,  1774,   953,   403,   468,  1778,
    1779,  1780,   468,  1782,   450,   468,  2313,   468,  2214,   966,
     967,   467,  2479,   388,  2266,   467,  1811,   467,   256,  1798,
     467,  1800,  2214,  2211,   276,  2292,   264,   890,   427,   468,
     167,   427,   613,  1828,  1813,  1814,  1815,  1816,  1817,  1818,
    1819,  1820,  1821,  1822,   403,   417,  2425,   456,  2259,   613,
     266,   188,   452,  1832,   267,   409,   267,   267,  2246,   465,
    1839,  2272,   468,   469,   230,   388,   471,   305,   251,   467,
     145,  1850,   971,   188,  1853,    35,   270,   145,   145,  1849,
     468,   388,   471,  2271,   388,  1774,  2274,   264,   225,   430,
    1696,   388,  2298,  2318,    54,   266,  2302,  2404,   388,    35,
     145,   145,  2480,   465,   341,  1711,  2298,  1713,   971,  1798,
    2302,   240,   468,   136,  1708,  1709,  1710,    11,   157,   613,
    2372,  2327,   162,   472,  1813,  1814,  1815,  1816,  1817,  1818,
    1819,  1820,  1821,  1822,   271,  2327,   468,   468,   468,   467,
     162,   468,  2276,   103,   272,   427,  2398,  1010,   377,   162,
     471,  1930,    35,   453,  1933,  1934,  1935,  1936,   467,  2480,
     171,  1940,  1941,  2542,   326,  1944,   468,  2378,  1947,   416,
     468,    54,  1951,  2485,  2399,   466,  1955,    81,  1772,   468,
     467,  1976,  1961,  1978,   267,   166,   145,   467,   467,   398,
    1147,  1148,   467,    35,   411,    77,   466,   468,   466,   162,
     337,   468,   468,   467,   209,   468,   166,  1986,   468,   790,
     467,   467,  1991,   275,  1984,  1985,  1995,  2423,   209,  2425,
     103,   104,   379,   467,  2003,   273,   790,   187,   111,    53,
     174,  2423,   468,  2425,   468,  2369,   468,   430,  1832,   190,
     179,  1198,   456,  1849,   381,   388,   383,  2381,   256,  2028,
     256,  1208,   456,   388,  1211,    35,  2508,   251,   104,  1853,
     467,  1427,   467,   430,   266,   467,    35,   404,   466,   162,
     407,   467,   467,  2479,   209,   235,   285,   467,   238,  1178,
     429,    83,  1448,   166,   468,  2064,   126,  2479,   313,   249,
     210,  2070,  2480,   467,   111,   467,   790,    35,   145,    71,
     118,  2071,  2081,    35,   187,   468,   145,   334,   334,   890,
    1267,    53,    35,   467,   467,  1178,   468,   468,   416,    71,
     280,   471,    35,   178,  1281,   411,   890,    35,   398,    65,
      65,   269,   471,    35,   350,   467,  2542,   456,   256,  1933,
    1934,  1935,  1936,  2122,  2123,  1951,  2125,   178,  2127,  1955,
    2542,   467,   235,  2132,   233,   238,  2135,  2136,   256,  2138,
     398,  2140,    35,   467,   324,   467,   249,   269,   251,   269,
     266,   468,   467,   249,     8,   471,   333,    11,  1984,  1985,
    2159,    15,    16,    17,   344,   190,  1285,   613,   459,   320,
     971,   266,   266,    32,   467,   116,   890,   280,    21,   409,
    2179,  2180,   513,  1793,   364,  1806,  1269,   971,  1192,  2188,
    1986,   482,   483,  1507,  1756,  2398,  2211,  2476,  2155,  1834,
    2027,  2482,  1285,  2563,  2527,  2305,    35,  2539,  2229,   777,
    1501,  1513,   503,  2212,  2213,  1839,  2479,  1553,  2537,  1810,
    2477,   324,  1498,   834,  2223,    54,  1557,  2226,  2340,  2423,
    2542,  2221,  1828,   745,  1462,   767,  1164,   715,  1477,  2238,
    1138,   344,  2241,   766,  1734,  2071,  2389,  1977,  1163,  2276,
    1448,  1713,  2242,   769,  1941,  1711,  1957,   971,  2372,  1436,
    2259,   364,  2371,   366,  2267,  2383,   369,  2266,  2466,  2384,
    2467,  2180,  1272,  2272,   103,  2151,  2454,  1465,  1005,  1395,
    2364,  1293,   573,  2282,  1440,  1337,  1338,  1393,  2287,  1008,
    1342,   849,  1469,  1470,  1560,  1267,  1117,  2296,   751,  1118,
    1757,  2127,    -1,  2212,  2213,    -1,  2132,    -1,    -1,  2135,
      -1,    -1,  2327,    -1,    -1,   606,  2331,  2226,    -1,  2318,
     611,   612,   613,  1375,  1376,  1711,  2341,  1713,    -1,    -1,
      -1,   185,    -1,    -1,    -1,    -1,    -1,    -1,   629,    -1,
      -1,    -1,    -1,    -1,   790,  2344,  1429,  1430,  1431,    -1,
      -1,    -1,   206,    -1,    -1,  2345,    -1,    -1,   187,    -1,
      -1,    -1,    -1,    -1,   467,    -1,    -1,    -1,   659,    -1,
      -1,    -1,    -1,  2372,  2188,    -1,    -1,  1178,  2287,  2378,
      -1,    -1,    -1,    -1,  2383,    -1,    -1,   678,   679,   680,
      -1,   682,    -1,    -1,  1178,  2221,    -1,    -1,    -1,  2398,
    2399,  2400,  2401,    -1,  2394,    -1,   235,    -1,    -1,   238,
    2425,   702,    -1,    -1,   268,  2430,  2242,  2432,  1595,  1596,
     249,  2436,  2437,  1600,  2238,    -1,    -1,    -1,    -1,    -1,
      -1,   722,   723,    -1,    -1,  2434,  2435,    -1,   729,   730,
    2266,    -1,    -1,    -1,   890,    -1,    -1,    -1,    -1,    -1,
    2276,   280,    -1,  1572,    -1,    -1,    -1,    -1,    -1,  2458,
      -1,    -1,    -1,    -1,  1178,  2480,    -1,  2466,   759,    -1,
      -1,    -1,   763,   764,    -1,    -1,    -1,  2476,     8,    -1,
      -1,    11,  2296,   774,  1285,    15,    16,    17,    -1,  1572,
      -1,    -1,  1611,    -1,    -1,   324,  2495,    -1,    -1,   790,
      -1,  1285,    32,  2502,    -1,    -1,    -1,    -1,    -1,  2508,
      -1,  2501,    -1,    -1,  1633,   344,    -1,    -1,    -1,  2345,
      -1,    -1,    -1,    -1,  2523,   971,    -1,  2542,  1611,    -1,
    2344,    -1,    -1,    -1,    -1,   364,    -1,     8,    -1,    -1,
      11,    -1,    -1,  1662,    15,    16,    17,    -1,   839,    -1,
    1633,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   849,    -1,
      -1,    32,    -1,    -1,    -1,  1951,    -1,  1686,  2394,  1955,
      -1,  1285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1662,
      -1,    -1,  1634,  1635,  1636,  1637,    -1,    -1,  1640,  1641,
    1642,  1643,  1644,  1645,  1646,  1647,  1648,  1649,    -1,   890,
     454,   455,   456,  1686,   458,   459,   460,   461,   462,   463,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   913,    -1,    -1,    -1,    -1,    -1,   919,    -1,
      -1,   922,    -1,    -1,  1811,   926,    -1,    -1,  1690,  1691,
      -1,    -1,    -1,   934,   935,    -1,    -1,    -1,  1731,    -1,
      -1,   942,    -1,    -1,   945,   946,   947,   948,    -1,    -1,
      -1,    -1,    -1,    -1,   955,   956,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2501,   206,  1854,    -1,    -1,
     971,   972,   973,   974,   975,   976,    -1,    -1,    -1,   980,
      -1,     8,  1811,   984,    11,    -1,   987,    -1,    -1,   990,
     991,   992,   993,   994,   995,   996,   997,   998,    -1,    -1,
    1001,    -1,    -1,    -1,    -1,    -1,    -1,  1008,    -1,  1010,
      -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,  1811,    -1,
      47,    -1,  1178,    -1,    -1,   206,  2122,    -1,   268,    -1,
      -1,  2127,    -1,    -1,    -1,    -1,  2132,    -1,    -1,  2135,
      -1,    -1,    -1,    -1,    71,    -1,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,
      -1,  1572,    -1,  2159,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    32,    -1,    11,    -1,  1572,    -1,
      15,    16,    17,    -1,    -1,    -1,    -1,   268,  1917,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,
    1611,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,   138,    47,    -1,    -1,    -1,    -1,  1611,    -1,  1120,
      -1,    -1,  1633,    -1,  1917,    -1,    -1,    -1,    -1,  1285,
      -1,    -1,    -1,    -1,    -1,  2022,    71,  1138,    -1,  1633,
    2027,    -1,    -1,    -1,    -1,  2241,  1147,  1148,  1572,    -1,
      -1,  1662,    -1,   180,  2041,  2042,    -1,    -1,   185,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1662,    -1,
    2266,    -1,    -1,    -1,  1967,  1686,    -1,  1178,    -1,    -1,
      -1,    -1,  1975,  1184,    -1,  1186,    -1,  1611,    -1,    -1,
      -1,    -1,  1686,    -1,   221,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2033,    -1,    -1,    -1,    -1,  1633,
      -1,  2040,    -1,    -1,   454,   455,   456,    -1,   458,   459,
     460,   461,   462,   463,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1662,    -1,
    2033,   268,    -1,    -1,    -1,   180,    -1,  2040,   206,    -1,
     185,  1252,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1686,    -1,    -1,    -1,  1267,  2096,  1269,  1270,
    1271,   206,   207,   454,   455,   456,  2372,   458,   459,   460,
     461,   462,   463,    -1,  1285,    -1,   221,    -1,    -1,    -1,
    1291,  1292,    -1,    -1,    -1,    -1,  1297,    -1,    -1,    -1,
    1811,    -1,  2398,  2096,    -1,    -1,    -1,    -1,    -1,    -1,
     268,    -1,    -1,    -1,    -1,  2202,  2203,  1811,    -1,   254,
      -1,    -1,    -1,    -1,  2211,    -1,    -1,    -1,   355,    -1,
      -1,  2093,    -1,   268,    -1,    -1,  1337,  1338,  1339,    -1,
      -1,  1342,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1354,  1355,  1356,  1357,    -1,    -1,    -1,
      -1,  1362,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1375,  1376,    -1,    -1,  1379,    -1,
      -1,    -1,  2211,    -1,    -1,    -1,    -1,  1811,    -1,    -1,
      -1,  1392,    -1,  1394,    -1,  1396,     0,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1917,    -1,    -1,    -1,
      -1,    -1,  2508,    -1,    -1,  1416,  1572,  2246,  2211,  2181,
     355,    -1,    -1,  1917,   451,    -1,  1427,    -1,  1429,  1430,
    1431,   458,   459,   460,   461,   462,   463,    -1,    -1,  1440,
    2327,    -1,  2271,    -1,    -1,  2274,    -1,  1448,    -1,    -1,
      -1,    -1,    -1,  2246,    -1,  1611,    -1,    -1,    -1,    -1,
      -1,  1462,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1477,  1633,  2271,    -1,
      -1,  2274,    -1,  2245,    -1,    -1,    90,    -1,    -1,    -1,
      -1,    -1,    -1,  1917,  1495,    -1,   454,   455,   456,    -1,
     458,   459,   460,   461,   462,   463,  1662,    -1,    -1,    -1,
      -1,  1512,  1513,  1514,    -1,    -1,   451,    -1,    -1,   454,
     455,   456,  2033,   458,   459,   460,   461,   462,   463,  2040,
    1686,    -1,    -1,    -1,    -1,    -1,   140,    -1,    -1,  2033,
      -1,     8,    -1,    -1,    11,    -1,  2040,    -1,   152,    -1,
      -1,    -1,    -1,   157,    -1,    -1,    -1,    -1,   162,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   171,    -1,    -1,
     174,  1572,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      47,    -1,    -1,    -1,    -1,  2096,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2480,    -1,    -1,    -1,    -1,   202,    -1,
      -1,    -1,  2096,    -1,    71,    -1,    -1,  1608,    -1,  2033,
    1611,    -1,    -1,    -1,    -1,    -1,  2040,  1618,   222,    -1,
      -1,    -1,    -1,  1624,    -1,    -1,  1627,    -1,    -1,    -1,
      -1,    -1,  1633,  1634,  1635,  1636,  1637,    -1,    -1,  1640,
    1641,  1642,  1643,  1644,  1645,  1646,  1647,  1648,  1649,    -1,
      -1,  2480,  1653,  1654,    -1,  1811,    -1,    -1,    -1,   263,
      -1,  1662,   266,    -1,    -1,    -1,  1667,    -1,   272,    -1,
      -1,   138,  2096,  1674,    -1,    -1,  1677,    -1,  1679,    -1,
      -1,    -1,    -1,    -1,    -1,  1686,  1687,  2480,    -1,  1690,
    1691,    -1,    -1,    -1,  1695,  1696,    -1,    -1,    -1,    -1,
    2211,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    -1,
    1711,    -1,  1713,   180,    -1,    -1,    -1,  2211,   185,    -1,
      -1,    -1,   326,    -1,  1725,    -1,    -1,    -1,    -1,    -1,
    1731,    -1,    -1,    40,    -1,  2246,    -1,    -1,    -1,    -1,
      47,  1742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2246,    -1,   221,    -1,    -1,  1758,    -1,    -1,
    2271,  1917,    -1,  2274,    71,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   377,    -1,    -1,    -1,  2271,    -1,    -1,
    2274,    -1,    -1,    -1,    -1,    -1,    -1,  2211,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   403,
      -1,   268,    -1,    -1,    -1,  1806,    -1,    -1,    -1,  1810,
    1811,  1812,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2246,   427,    -1,   429,   430,    -1,    -1,    -1,
     482,   483,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2271,    -1,    -1,
    2274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   465,    -1,    -1,   468,   469,   470,  1868,    -1,    -1,
      -1,    -1,    -1,   180,    -1,    -1,    -1,  2033,   185,    -1,
      -1,    -1,    -1,    -1,  2040,    -1,    -1,    -1,   355,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     0,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     0,    -1,    -1,
    1911,  1912,    -1,    -1,   221,  1916,  1917,    18,    -1,    -1,
    1921,    -1,    -1,  1924,  1925,    -1,    -1,    28,  1929,    30,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2096,    -1,    -1,    -1,    -1,    46,    -1,    -1,    -1,    -1,
    1951,    -1,    -1,    -1,  1955,    -1,    -1,    -1,    -1,    -1,
     612,   268,    -1,    -1,    -1,    66,  1967,    -1,    -1,  2480,
      -1,    -1,    -1,    -1,  1975,    -1,    77,   629,    -1,    -1,
      -1,  1982,    -1,    -1,   451,    -1,  2480,    88,    -1,    90,
      -1,   458,   459,   460,   461,   462,   463,    90,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   107,   659,    -1,    -1,
      -1,    -1,    -1,    -1,  2015,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2024,    -1,    -1,   678,   679,   680,   130,
     682,    -1,  2033,    -1,     8,   136,    -1,    11,    -1,  2040,
      -1,    -1,    -1,   144,    -1,   146,    -1,   140,   355,    -1,
     702,    -1,    -1,    -1,    -1,  2211,  2480,    -1,    -1,   152,
      -1,    -1,    -1,    -1,   157,    -1,    40,    -1,    -1,   162,
      -1,    -1,    -1,    47,    -1,    -1,    -1,   729,   171,    -1,
      -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2246,    -1,  2093,    -1,    -1,  2096,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,  2105,  2106,    -1,   759,  2109,   202,
      -1,   763,   764,    -1,    -1,  2271,    -1,    -1,  2274,    -1,
      -1,  2122,    -1,   224,    -1,    -1,  2127,    -1,    -1,   222,
      -1,  2132,    -1,    -1,  2135,  2136,    -1,    -1,    -1,    -1,
      -1,    -1,  2143,  2144,   451,    -1,    -1,    -1,    -1,    -1,
      -1,   458,   459,   460,   461,   462,   463,    -1,  2159,    -1,
    2161,    -1,    -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,
     263,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,   272,
    2181,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   292,    -1,    -1,   295,    -1,    -1,    -1,    -1,    -1,
     696,    -1,    -1,    -1,    -1,    -1,   180,    -1,    -1,    -1,
    2211,   185,    -1,  2214,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   323,     8,    -1,    -1,    11,     0,    -1,    -1,
     331,    -1,    -1,   326,    -1,    -1,    -1,    -1,    -1,    -1,
    2241,    -1,   343,    -1,  2245,  2246,   742,   221,    -1,   350,
      -1,    -1,    -1,   354,    -1,    40,    -1,    -1,    -1,    -1,
      -1,  2262,    47,   364,    -1,  2266,    -1,   919,    -1,    -1,
    2271,    -1,    -1,  2274,    -1,  2276,   377,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   377,    -1,    71,  2288,    -1,    -1,
     942,    -1,    -1,   945,   268,    -1,   948,  2298,    -1,    -1,
      -1,  2302,  2303,   955,   956,    -1,    -1,    -1,    -1,    -1,
     403,   412,    -1,    -1,    -1,    -1,   417,    90,    -1,    -1,
     972,   973,   974,   975,  2480,    -1,  2327,    -1,   980,   430,
      -1,    -1,   984,    -1,   427,   987,   429,   430,   990,   991,
     992,   993,   994,   995,   996,   997,   998,    -1,    -1,  1001,
      -1,     8,   453,   138,    11,    -1,  1008,    -1,  1010,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   467,   140,  2369,   470,
      -1,  2372,   465,   869,    -1,   468,   469,   470,    -1,   152,
    2381,   355,    -1,    40,   157,    -1,    -1,    -1,  2389,   162,
      47,    -1,    -1,    -1,    -1,   180,    -1,  2398,   171,    -1,
     185,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    71,    -1,    -1,  2418,    -1,    -1,
      -1,   917,  2423,    -1,  2425,    -1,    -1,    -1,    -1,   202,
      -1,    -1,    -1,    -1,    -1,    -1,   221,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   941,    -1,    -1,    -1,   222,
     946,    -1,  2453,  2454,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   957,   958,   959,    -1,   961,    -1,    -1,  1120,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   451,  2479,  2480,
      -1,   138,    -1,   268,   458,   459,   460,   461,   462,   463,
     263,    -1,    -1,   266,    -1,  1147,  1148,    -1,    -1,   272,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2508,    -1,  2510,
    1006,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   180,    -1,    -1,    -1,    -1,   185,    -1,
      -1,    -1,  1028,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,  2542,    -1,    -1,    15,    16,    17,    -1,    -1,    -1,
      -1,    -1,    -1,   326,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    32,    -1,    -1,   221,    -1,    -1,    -1,    -1,    40,
     355,  2572,  2573,    -1,    -1,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      71,    -1,    -1,    -1,   377,    -1,    -1,    -1,    -1,    -1,
      -1,   268,    -1,    -1,    -1,    -1,    -1,  1269,  1270,  1271,
      22,    -1,    -1,    -1,    -1,    -1,    28,    -1,    -1,    -1,
     403,    -1,    -1,    35,    -1,    -1,    -1,    -1,  1134,    -1,
    1292,    -1,    -1,    -1,    -1,  1297,    -1,    -1,    -1,    -1,
    1146,    -1,    54,    -1,   427,  1151,   429,   430,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1339,    -1,    -1,
      -1,    -1,   465,    -1,    -1,   468,   469,   470,   355,    -1,
      -1,   103,  1354,    -1,  1356,  1357,    -1,    -1,    -1,   180,
    1362,    -1,    -1,    -1,   185,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    -1,   130,    -1,
      -1,    -1,    -1,    -1,    -1,   206,   207,    -1,    -1,    -1,
    1392,    -1,  1394,    -1,  1396,    -1,    -1,    -1,    -1,    40,
     221,    -1,    -1,    -1,    -1,    -1,    47,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1429,  1430,  1431,
      71,    -1,    -1,   254,    -1,   187,    -1,    -1,  1440,    40,
      -1,    -1,    -1,    -1,   451,    -1,    47,   268,    -1,  1295,
     271,   458,   459,   460,   461,   462,   463,    -1,    -1,    -1,
    1462,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      71,    -1,  1318,    -1,    -1,  1477,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   235,    -1,    -1,   238,    -1,    -1,  1335,
      -1,  1337,  1338,  1495,  1340,    -1,  1342,   249,    -1,    -1,
    1346,    -1,     8,    -1,    -1,    11,    -1,  1353,    -1,    15,
      16,    17,  1358,    -1,    -1,    -1,    -1,    -1,   270,    -1,
      -1,    -1,  1368,  1369,  1370,  1371,    32,    -1,   280,  1375,
    1376,    -1,  1378,    -1,   355,    -1,    -1,    -1,    -1,   180,
      -1,    -1,    -1,  1389,   185,  1391,    -1,    -1,    -1,    -1,
      -1,    -1,  1398,  1399,  1400,  1401,  1402,  1403,  1404,  1405,
    1406,  1407,    -1,    -1,    -1,   206,   207,   319,    -1,    -1,
      -1,   323,   324,    -1,    -1,    -1,    -1,    -1,    -1,   180,
     221,    -1,    -1,    -1,   185,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   344,    -1,    -1,    -1,    -1,    -1,   350,  1445,
      -1,    -1,    -1,    -1,    -1,    -1,  1608,    -1,    -1,    -1,
      -1,    -1,   364,   254,    -1,    -1,  1618,    -1,    -1,    -1,
     221,    -1,  1624,    -1,    -1,  1627,    -1,   268,    -1,    -1,
     451,    -1,    -1,   454,   455,   456,    -1,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     471,  1653,  1654,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   414,    -1,    -1,    -1,    -1,   268,    -1,    -1,
      -1,    -1,  1674,    -1,     3,  1677,    -1,  1679,    -1,     8,
      -1,    -1,    11,    -1,    -1,  1687,    15,    16,    17,    -1,
      -1,    -1,    -1,  1695,  1696,    -1,    -1,    -1,    -1,    -1,
     206,    -1,    -1,    32,    -1,    -1,    35,    -1,    -1,    -1,
      -1,    40,    -1,    -1,   355,    -1,    -1,    -1,    47,    -1,
      -1,    -1,    -1,  1725,    -1,    -1,    -1,    -1,    -1,  1731,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1742,    -1,    71,    -1,    -1,  1591,  1592,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   355,    -1,  1758,    -1,    -1,    -1,
      -1,  1607,   268,    -1,    -1,     8,    -1,  1613,    11,    -1,
      -1,    -1,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1630,  1631,  1632,    -1,  1634,  1635,
    1636,  1637,    -1,    -1,  1640,  1641,  1642,  1643,  1644,  1645,
    1646,  1647,  1648,  1649,  1650,    -1,    -1,    -1,    -1,    -1,
     451,    -1,    -1,   454,   455,   456,    -1,   458,   459,   460,
     461,   462,   463,    -1,  1670,    -1,    -1,    -1,    -1,  1675,
    1676,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1689,  1690,  1691,  1692,    -1,  1694,    -1,
     451,   180,    -1,   454,   455,   456,   185,   458,   459,   460,
     461,   462,   463,    -1,     8,    -1,  1868,    11,    -1,    -1,
      -1,    15,    16,    17,    -1,    -1,    -1,   206,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1737,   221,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1911,
    1912,    -1,    -1,    -1,  1916,    -1,    -1,    -1,    -1,  1921,
      -1,    -1,  1924,  1925,    -1,   254,    -1,  1929,    -1,  1775,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,   268,
      -1,    11,   271,    -1,    -1,    15,    16,    17,   454,   455,
     456,    -1,   458,   459,   460,   461,   462,   463,    -1,    -1,
      -1,    -1,    32,   206,    -1,  1967,    -1,    -1,    -1,    -1,
      40,    -1,    -1,  1975,    -1,     8,    -1,    47,    11,    -1,
    1982,    -1,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,
      -1,    71,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2024,  1869,    -1,   268,   355,  1873,  1874,    -1,
    1876,    -1,    -1,  1879,  1880,  1881,  1882,    -1,    71,    -1,
    1886,  1887,  1888,  1889,  1890,  1891,  1892,  1893,  1894,  1895,
    1896,  1897,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   206,    -1,  1910,    -1,    -1,  1913,    -1,  1915,
      -1,    -1,    -1,  1919,    -1,    -1,  1922,  1923,    -1,    -1,
    1926,  1927,    -1,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2105,  2106,    -1,    -1,  2109,    -1,    -1,
     180,    -1,    -1,    -1,    -1,   185,    -1,    -1,    -1,    -1,
      -1,    -1,   451,  1969,   268,   454,   455,   456,    -1,   458,
     459,   460,   461,   462,   463,  1981,   206,   207,    -1,    -1,
      20,  2143,  2144,    -1,    -1,    -1,    -1,   180,  1994,    -1,
      -1,   221,   185,    -1,    -1,    -1,    -1,    -1,    -1,  2161,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   206,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   254,    -1,    -1,    -1,   221,    -1,
      -1,    -1,    72,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,   271,    -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,
      -1,   454,   455,   456,    -1,   458,   459,   460,   461,   462,
     463,   254,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   268,    -1,    -1,   271,    -1,
      -1,    -1,    -1,  2089,    -1,    -1,    -1,  2093,    -1,    -1,
      -1,    -1,    -1,  2099,  2100,  2101,    -1,    -1,  2104,   139,
    2262,  2107,  2108,    -1,    -1,    -1,  2112,   147,    -1,    -1,
      -1,    -1,    -1,    -1,  2276,    -1,    -1,    -1,    -1,   159,
      -1,    -1,    -1,    -1,    -1,   355,  2288,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2303,    -1,    -1,    -1,    -1,    -1,    -1,   188,    -1,
     454,   455,   456,    -1,   458,   459,   460,   461,   462,   463,
      -1,    -1,   355,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2181,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2199,   234,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   411,    -1,
      -1,   451,    -1,    -1,   454,   455,   456,  2389,   458,   459,
     460,   461,   462,   463,    -1,    -1,   466,    -1,  2244,  2245,
      -1,    -1,    -1,  2249,  2250,  2251,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,  2418,    -1,   451,    -1,
      -1,   454,   455,   456,   304,   458,   459,   460,   461,   462,
     463,    -1,    -1,    -1,  2280,  2281,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2294,    -1,
      -1,  2453,  2454,    -1,    -1,   335,    -1,   337,    -1,    -1,
    2306,    -1,    -1,    -1,   344,    -1,    -1,   347,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   366,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,    -1,    -1,
      -1,    -1,    -1,    -1,   384,    -1,    -1,    -1,  2510,    -1,
      -1,    -1,    -1,   393,    -1,    -1,    -1,    -1,    -1,    -1,
    2366,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2377,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   423,    -1,    -1,    -1,    -1,    -1,    -1,
    2396,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2410,    -1,    -1,    -1,    -1,    -1,
    2572,  2573,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,  2487,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,  2513,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,  2584,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,    -1,    -1,    -1,    -1,    -1,
     458,   459,   460,    -1,    -1,    -1,    -1,    -1,    -1,   467,
     468,    -1,    -1,    -1,   472,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,   453,    -1,    -1,    -1,    -1,
     458,   459,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,
     468,    -1,    -1,    -1,   472,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,   453,    -1,    -1,    -1,    -1,
     458,   459,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,
      -1,    -1,    -1,    -1,   472,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,    -1,    -1,    -1,    -1,    -1,
     458,   459,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,
      -1,    -1,    -1,    -1,   472,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,    -1,    -1,    -1,    -1,    -1,
     458,   459,   460,    -1,    -1,    -1,    -1,    -1,    -1,   467,
      -1,    -1,    -1,    -1,   472,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,    -1,    -1,    -1,    -1,    -1,
     458,   459,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,
      -1,    -1,    -1,    -1,   472,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,    -1,    -1,    -1,    -1,    -1,
     458,   459,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,
     468,    -1,    -1,    -1,   472,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,    -1,    -1,    -1,    -1,    -1,
     458,   459,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,
      -1,    -1,    -1,    -1,   472,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,    -1,    -1,    -1,    -1,    -1,
     458,   459,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,
      -1,    -1,    -1,    -1,   472,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,    -1,    -1,    -1,    -1,    -1,
     458,   459,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,
      -1,    -1,    -1,    -1,   472,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,    -1,    -1,    -1,    -1,    -1,
     458,   459,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,
      -1,    -1,    -1,    -1,   472,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,    -1,    -1,    -1,    -1,    -1,
     458,   459,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,
      -1,    -1,    -1,    -1,   472,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,    -1,    -1,    -1,    -1,    -1,
     458,   459,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,
      -1,    -1,    -1,    -1,   472,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,    -1,    -1,    -1,    -1,    -1,
     458,   459,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,
      -1,    -1,    -1,    -1,   472,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,    -1,    -1,    -1,    -1,    -1,
     458,   459,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,
      -1,    -1,    -1,    -1,   472,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,    -1,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     458,   459,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,
      -1,    -1,    -1,    -1,   472,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,    -1,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,    -1,    -1,    -1,    -1,    -1,
     458,   459,    -1,    -1,     3,     4,     5,     6,     7,   467,
       9,    10,    -1,    -1,   472,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    72,    -1,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,    -1,    -1,   127,   128,
     129,   130,   131,    -1,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,    -1,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,    -1,   163,   164,   165,   166,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,   194,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
     219,   220,   221,    -1,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,    -1,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,    -1,   268,
     269,   270,    -1,    -1,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,    -1,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,    -1,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,    -1,
      -1,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,   410,    -1,   412,   413,   414,   415,   416,   417,   418,
      -1,   420,   421,   422,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   458,
     459,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,    -1,
      -1,    -1,    -1,   472,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    72,    -1,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,    -1,    -1,   127,   128,
     129,   130,   131,    -1,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,    -1,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,    -1,   163,   164,   165,   166,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,   194,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
     219,   220,   221,    -1,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,    -1,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,    -1,   268,
     269,   270,    -1,    -1,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,    -1,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,    -1,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,    -1,
      -1,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,   410,    -1,   412,   413,   414,   415,   416,   417,   418,
      -1,   420,   421,   422,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   458,
     459,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,    -1,
      -1,    -1,    -1,   472,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    72,    -1,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,    -1,    -1,   127,   128,
     129,   130,   131,    -1,   133,   134,   135,    -1,   137,    -1,
     139,    -1,   141,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,    -1,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,    -1,   163,   164,   165,   166,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,   194,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,
     209,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
     219,   220,    -1,    -1,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,    -1,   255,   256,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,    -1,   268,
     269,   270,    -1,    -1,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,    -1,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,    -1,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,    -1,
      -1,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,   410,    -1,   412,   413,   414,   415,   416,   417,   418,
      -1,   420,   421,   422,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   458,
     459,     3,    -1,    -1,    -1,    -1,    -1,    -1,   467,    -1,
      -1,    -1,    -1,   472,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    35,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    91,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,    -1,    -1,   127,   128,   129,   130,   131,
      -1,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,   144,   145,   146,   147,   148,   149,    -1,   151,
      -1,   153,   154,   155,   156,    -1,   158,    -1,   160,    -1,
      -1,   163,   164,   165,   166,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,    -1,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,   194,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,   208,   209,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,    -1,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,    -1,
      -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   468,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    72,    -1,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,    -1,    -1,   127,   128,   129,   130,
     131,    -1,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,   144,   145,   146,   147,   148,   149,    -1,
     151,    -1,   153,   154,   155,   156,    -1,   158,    -1,   160,
     161,    -1,   163,   164,   165,   166,   167,    -1,   169,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,   194,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,    -1,   217,   218,   219,   220,
     221,    -1,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
      -1,   252,   253,   254,   255,    -1,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,   267,   268,   269,   270,
      -1,    -1,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,    -1,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,    -1,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,    -1,    -1,   390,
     391,   392,   393,   394,    -1,   396,   397,   398,   399,   400,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,   410,
      -1,   412,   413,   414,   415,   416,   417,   418,    -1,   420,
     421,   422,   423,   424,   425,    -1,    -1,   428,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
      -1,    -1,   453,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   467,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,   145,   146,   147,   148,   149,
      -1,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,    -1,   163,   164,   165,   166,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,    -1,   217,   218,   219,
     220,   221,    -1,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,    -1,   252,   253,   254,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,   267,   268,   269,
     270,    -1,    -1,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
     410,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,    -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,   145,   146,   147,   148,   149,
      -1,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,    -1,   163,   164,   165,   166,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,   219,
     220,   221,    -1,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,    -1,   252,   253,   254,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
     410,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,    -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,   145,   146,   147,   148,   149,
      -1,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,    -1,   163,   164,   165,   166,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,   219,
     220,   221,    -1,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,    -1,   252,   253,   254,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
     410,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,    -1,    -1,     3,     4,     5,    -1,    -1,    -1,     9,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,    -1,   163,   164,   165,   166,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,   219,
     220,   221,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,    -1,   252,   253,   254,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,   266,    -1,   268,   269,
     270,    -1,    -1,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,    -1,    -1,     3,    -1,    -1,    -1,    -1,   458,   459,
     460,    -1,    -1,    -1,    -1,    -1,    -1,   467,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,   145,   146,   147,   148,   149,
      -1,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,    -1,   163,   164,   165,   166,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,   219,
     220,   221,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,    -1,   252,   253,   254,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,    -1,    -1,   453,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,    -1,    -1,   127,   128,
     129,   130,   131,    -1,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,   144,   145,   146,   147,   148,
     149,    -1,   151,    -1,   153,   154,   155,   156,    -1,   158,
      -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,
      -1,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
      -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,    -1,   246,   247,   248,
     249,   250,    -1,   252,   253,    -1,   255,    -1,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,    -1,   268,
     269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,    -1,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,    -1,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
      -1,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,   384,    -1,   386,   387,    -1,
      -1,   390,   391,   392,   393,   394,    -1,   396,   397,   398,
     399,   400,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,    -1,   412,   413,   414,   415,   416,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,   428,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,    -1,    -1,   453,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,    -1,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,    -1,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,    -1,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,    -1,    -1,    -1,    -1,    -1,     3,     4,
       5,    -1,    -1,     8,     9,    -1,    -1,    -1,    -1,   467,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    -1,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
      -1,   146,   147,   148,    -1,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,    -1,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,   277,    -1,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,    -1,   292,   293,    -1,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,    -1,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,    -1,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,    -1,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   448,   449,   450,    -1,     3,    -1,   454,
     455,   456,     8,   458,   459,   460,   461,   462,   463,    15,
      16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,    -1,
      -1,   127,   128,   129,   130,   131,    -1,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,   144,   145,
     146,   147,   148,   149,    -1,   151,    -1,   153,   154,   155,
     156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,
     166,   167,    -1,   169,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,    -1,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,   208,    -1,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,    -1,    -1,    -1,   454,   455,
     456,    -1,   458,   459,   460,   461,   462,   463,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
      -1,    -1,    32,    15,    16,    17,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,     8,    -1,    47,    11,    -1,
      32,    -1,    15,    16,    17,    -1,    -1,    -1,    40,    -1,
      -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,    32,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    40,    -1,     8,
      -1,    -1,    11,    -1,    47,    -1,    15,    16,    17,    71,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    32,    15,    16,    17,    -1,    71,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,
      -1,    -1,    -1,    -1,    -1,    -1,    47,     8,    -1,    -1,
      11,    -1,    71,    -1,    15,    16,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      71,    32,    15,    16,    17,    -1,    -1,    -1,    -1,    40,
      -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,    32,
     180,    -1,    -1,    -1,    -1,   185,    -1,    40,    -1,    -1,
      -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,   180,    -1,
      71,    -1,    -1,   185,    -1,    -1,   206,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   180,    71,    -1,
      -1,   221,   185,    -1,   206,   207,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   221,
      -1,    -1,    -1,   206,   207,    -1,    -1,    -1,    -1,    -1,
      -1,   180,    -1,    -1,   254,    -1,   185,    -1,   221,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,   180,
      -1,   271,   254,    -1,   185,    -1,    -1,   206,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,    -1,   271,
      -1,   254,   221,    -1,    -1,   206,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   268,    -1,    -1,   271,   180,
     221,    -1,    -1,    -1,   185,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   254,    -1,   180,    -1,    -1,
      -1,    -1,   185,    -1,    -1,   206,   207,    -1,    -1,   268,
      -1,    -1,   271,   254,    -1,    -1,    -1,    -1,    -1,    -1,
     221,    -1,    -1,   206,   207,   355,    -1,   268,    -1,    -1,
     271,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   221,    -1,
      -1,    -1,    -1,   355,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   254,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   355,    -1,    -1,    -1,    -1,   268,    -1,    -1,
     271,   254,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   268,    -1,    -1,   271,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,    -1,    -1,
      -1,   451,    -1,    -1,   454,   455,   456,    -1,   458,   459,
     460,   461,   462,   463,    -1,    -1,    -1,    -1,   468,   451,
      -1,    -1,   454,   455,   456,    -1,   458,   459,   460,   461,
     462,   463,    -1,    -1,   355,    -1,   468,    -1,   451,    -1,
      -1,   454,   455,   456,    -1,   458,   459,   460,   461,   462,
     463,    -1,   355,    -1,    -1,   468,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   451,    -1,    -1,   454,   455,   456,    -1,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,    -1,   468,
     451,    -1,    -1,   454,   455,   456,    -1,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,    -1,   468,    -1,    -1,
      -1,    -1,    -1,    22,    -1,    -1,    -1,    -1,    -1,    28,
      -1,    -1,    -1,    -1,    -1,    -1,    35,    -1,    -1,    -1,
     451,    -1,    -1,   454,   455,   456,    -1,   458,   459,   460,
     461,   462,   463,    -1,    -1,    54,    -1,   468,   451,    -1,
      -1,   454,   455,   456,    -1,   458,   459,   460,   461,   462,
     463,     8,    -1,    -1,    11,   468,    -1,    -1,    15,    16,
      17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,    32,    15,    16,    17,    -1,
      -1,    -1,    -1,    40,   103,    -1,    -1,    -1,     8,    -1,
      47,    11,    -1,    32,    -1,    15,    16,    17,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,
      -1,   130,    32,    -1,    71,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,
      -1,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,    -1,   238,
      -1,    -1,    -1,   180,    -1,    -1,    -1,    -1,   185,    -1,
     249,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   180,    -1,    -1,    -1,    -1,   185,    -1,    -1,   206,
     207,   270,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   280,    -1,    -1,   221,   185,    -1,   206,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   221,    -1,    -1,    -1,   206,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   254,    -1,    -1,
     319,   221,    -1,    -1,   323,   324,    -1,    -1,    -1,    -1,
      -1,   268,    -1,    -1,   271,   254,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   344,    -1,    -1,    -1,   268,
      -1,   350,   271,    -1,   254,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   364,    -1,    -1,   268,    -1,
      -1,   271,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   414,    -1,    -1,   355,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   451,    -1,    -1,   454,   455,   456,
      -1,   458,   459,   460,   461,   462,   463,    -1,    -1,    -1,
      -1,   468,   451,    -1,    -1,   454,   455,   456,    -1,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,    -1,   468,
      -1,   451,    -1,    -1,   454,   455,   456,     3,   458,   459,
     460,   461,   462,   463,    -1,    -1,    -1,    -1,   468,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   460,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,     4,     5,    -1,    -1,    -1,     9,
      -1,    -1,   460,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,    -1,   163,   164,   165,   166,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,   219,
     220,   221,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,    -1,   252,   253,   254,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,   266,    -1,   268,   269,
     270,    -1,    -1,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,     4,     5,    -1,    -1,    -1,     9,   458,   459,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      72,    -1,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,    -1,    -1,   127,   128,   129,   130,   131,
      -1,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
      -1,   163,   164,   165,   166,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,   194,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,   219,   220,   221,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,    -1,
     252,   253,   254,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,   266,    -1,   268,   269,   270,    -1,
      -1,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,   421,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
       4,     5,    -1,    -1,    -1,     9,   458,   459,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,    -1,    -1,   127,   128,   129,   130,   131,    -1,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,    -1,   163,
     164,   165,   166,   167,    -1,   169,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
     194,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,    -1,   217,   218,   219,   220,   221,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,    -1,   252,   253,
     254,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,   266,    -1,   268,   269,   270,    -1,    -1,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,    -1,    -1,     8,
      -1,    -1,    11,    -1,   458,   459,    15,    16,    17,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,
      16,    17,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    32,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,
       8,    47,    -1,    11,    -1,    -1,    -1,    15,    16,    17,
      -1,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    32,    71,    -1,    35,     8,    -1,
      -1,    11,    40,    -1,    -1,    15,    16,    17,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    71,    -1,    -1,    -1,    47,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,
      16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    71,    -1,    -1,    -1,    -1,    32,    -1,   157,    35,
      -1,    -1,    -1,   162,    40,    -1,    -1,    -1,    -1,    -1,
     156,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   180,    -1,    -1,    -1,    -1,   185,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   180,    71,    -1,    -1,    -1,   185,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   206,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     206,   207,   221,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   180,    -1,    -1,   221,    -1,   185,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   254,    -1,    -1,   206,   207,
     180,    -1,    -1,    -1,    -1,   185,    -1,    -1,   254,   268,
      -1,    -1,   271,   221,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   268,    -1,    -1,   271,   206,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   221,    -1,    -1,   180,    -1,   254,   293,    -1,   185,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     268,    -1,    -1,   271,    -1,    -1,    -1,    -1,    -1,    -1,
     206,   207,    -1,    -1,   254,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   221,    -1,    -1,   268,    -1,
       8,   271,    -1,    11,    -1,    -1,   355,    15,    16,    17,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,   355,
      -1,    -1,    -1,    -1,    32,    -1,    -1,    -1,   254,    -1,
      -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,
       8,    -1,   268,    11,    -1,   271,    -1,    15,    16,    17,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   355,    -1,    -1,
      -1,    -1,    -1,    71,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,
      -1,    -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   451,    71,    -1,   454,   455,   456,    -1,   458,
     459,   460,   461,   462,   463,   451,    -1,    -1,   454,   455,
     456,    -1,   458,   459,   460,   461,   462,   463,    -1,   355,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,    -1,
      -1,    -1,    -1,   451,   162,    -1,   454,   455,   456,    -1,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,    40,
      -1,    -1,   180,    -1,    -1,    -1,    47,   185,    -1,    -1,
      -1,   451,    -1,    -1,   454,   455,   456,    -1,   458,   459,
     460,   461,   462,   463,    -1,    -1,    -1,    -1,   206,   207,
      71,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   180,   221,    -1,    -1,    -1,   185,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   451,    -1,    -1,   454,   455,
     456,    -1,   458,   459,   460,   461,   462,   463,   206,   207,
      -1,    -1,    -1,    -1,    -1,    -1,   254,    -1,    -1,    -1,
      -1,    -1,    -1,   221,    -1,    -1,    -1,    -1,     8,    -1,
     268,    11,    -1,   271,    -1,    15,    16,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    32,    -1,    -1,    -1,   254,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,
     268,    -1,    -1,   271,    -1,    -1,    -1,    -1,    -1,   180,
      -1,    -1,    -1,    -1,   185,    -1,    -1,    -1,    -1,    -1,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   206,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   355,    -1,    -1,
     221,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   254,    -1,    -1,    -1,   355,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,    -1,    -1,    -1,    -1,   185,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   451,    -1,    -1,   454,   455,   456,    -1,
     458,   459,   460,   461,   462,   463,   206,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   221,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   451,   355,    -1,   454,   455,   456,    -1,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   254,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,   271,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     451,    -1,    -1,   454,   455,   456,    -1,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,
      -1,   451,    -1,    -1,   454,   455,   456,    -1,   458,   459,
     460,   461,   462,   463,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,    -1,   252,   253,   254,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,    -1,   163,   164,   165,   166,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,   219,
     220,   221,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,    -1,   252,   253,   254,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,   266,    -1,   268,   269,
     270,    -1,    -1,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      72,    -1,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,    -1,    -1,   127,   128,   129,   130,   131,
      -1,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,   144,   145,   146,   147,   148,   149,    -1,   151,
      -1,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
      -1,   163,   164,   165,   166,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,   194,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,   219,   220,   221,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,    -1,
     252,   253,   254,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,   421,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,    -1,    -1,   127,   128,   129,   130,   131,    -1,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
     144,   145,   146,   147,   148,   149,    -1,   151,    -1,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,    -1,   163,
     164,   165,   166,   167,    -1,   169,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
     194,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,    -1,   217,   218,   219,   220,   221,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,    -1,   252,   253,
     254,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    -1,    -1,    73,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,    -1,
      -1,   127,   128,   129,   130,   131,    -1,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,   144,   145,
     146,   147,   148,   149,    -1,   151,    -1,   153,   154,   155,
     156,    -1,   158,   159,   160,    -1,    -1,    -1,   164,   165,
     166,   167,    -1,   169,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,    -1,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,   208,    -1,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,   404,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,   159,   160,    -1,    -1,    -1,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,    -1,   220,   221,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,   145,   146,   147,   148,   149,
      -1,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,    -1,    -1,    -1,   164,   165,   166,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
      -1,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,    -1,    -1,   127,   128,   129,   130,   131,
      -1,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,   144,   145,   146,   147,   148,   149,    -1,   151,
      -1,   153,   154,   155,   156,    -1,   158,    -1,   160,    -1,
      -1,    -1,   164,   165,   166,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,    -1,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,    -1,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    -1,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,    -1,    -1,   127,   128,   129,   130,   131,    -1,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
     144,   145,   146,   147,   148,   149,    -1,   151,    -1,   153,
     154,   155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,
     164,   165,   166,   167,    -1,   169,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,    -1,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
      -1,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,   213,
     214,    -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,    -1,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,    -1,
      -1,   127,   128,   129,   130,   131,    -1,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,   144,   145,
     146,   147,   148,   149,    -1,   151,    -1,   153,   154,   155,
     156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,
     166,   167,    -1,   169,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,    -1,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,   208,    -1,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,   145,   146,   147,   148,   149,
      -1,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,    -1,    -1,    -1,   164,   165,   166,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
      -1,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,   267,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,    -1,    -1,   127,   128,   129,   130,   131,
      -1,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,   144,   145,   146,   147,   148,   149,    -1,   151,
      -1,   153,   154,   155,   156,    -1,   158,    -1,   160,    -1,
      -1,    -1,   164,   165,   166,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,    -1,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,    -1,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    -1,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,    -1,    -1,   127,   128,   129,   130,   131,    -1,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
     144,   145,   146,   147,   148,   149,    -1,   151,    -1,   153,
     154,   155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,
     164,   165,   166,   167,    -1,   169,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,    -1,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
      -1,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,   213,
     214,    -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    35,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,    -1,
      -1,   127,   128,   129,   130,   131,    -1,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,   144,   145,
     146,   147,   148,   149,    -1,   151,    -1,   153,   154,   155,
     156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,
     166,   167,    -1,   169,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,    -1,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,   208,    -1,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    35,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,   145,   146,   147,   148,   149,
      -1,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,    -1,    -1,    -1,   164,   165,   166,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
      -1,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,    -1,    -1,   127,   128,   129,   130,   131,
      -1,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,   144,   145,   146,   147,   148,   149,    -1,   151,
      -1,   153,   154,   155,   156,    -1,   158,    -1,   160,    -1,
      -1,    -1,   164,   165,   166,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,    -1,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,    -1,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    -1,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,    -1,    -1,   127,   128,   129,   130,   131,    -1,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
     144,   145,   146,   147,   148,   149,    -1,   151,    -1,   153,
     154,   155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,
     164,   165,   166,   167,    -1,   169,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,    -1,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
      -1,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,   213,
     214,    -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,    -1,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,    -1,
      -1,   127,   128,   129,   130,   131,    -1,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,   144,   145,
     146,   147,   148,   149,    -1,   151,    -1,   153,   154,   155,
     156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,
     166,   167,    -1,   169,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,    -1,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,   208,    -1,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,   145,   146,   147,   148,   149,
      -1,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,    -1,    -1,    -1,   164,   165,   166,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
      -1,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,    -1,    -1,   127,   128,   129,   130,   131,
      -1,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,   144,   145,   146,   147,   148,   149,    -1,   151,
      -1,   153,   154,   155,   156,    -1,   158,    -1,   160,    -1,
      -1,    -1,   164,   165,   166,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,    -1,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,    -1,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    -1,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,    -1,    -1,   127,   128,   129,   130,   131,    -1,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
     144,   145,   146,   147,   148,   149,    -1,   151,    -1,   153,
     154,   155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,
     164,   165,   166,   167,    -1,   169,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,    -1,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
      -1,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,   213,
     214,    -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,    -1,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,    -1,
      -1,   127,   128,   129,   130,   131,    -1,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,   144,   145,
     146,   147,   148,   149,    -1,   151,    -1,   153,   154,   155,
     156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,
     166,   167,    -1,   169,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,    -1,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,   208,    -1,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,   145,   146,   147,   148,   149,
      -1,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,    -1,    -1,    -1,   164,   165,   166,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
      -1,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,    -1,    -1,   127,   128,   129,   130,   131,
      -1,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,   144,   145,   146,   147,   148,   149,    -1,   151,
      -1,   153,   154,   155,   156,    -1,   158,    -1,   160,    -1,
      -1,    -1,   164,   165,   166,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,    -1,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,    -1,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    -1,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,    -1,    -1,   127,   128,   129,   130,   131,    -1,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
     144,   145,   146,   147,   148,   149,    -1,   151,    -1,   153,
     154,   155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,
     164,   165,   166,   167,    -1,   169,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,    -1,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
      -1,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,   213,
     214,    -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,    -1,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    35,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,    -1,
      -1,   127,   128,   129,   130,   131,    -1,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,   144,   145,
     146,   147,   148,   149,    -1,   151,    -1,   153,   154,   155,
     156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,
     166,   167,    -1,   169,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,    -1,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,   208,    -1,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,    -1,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,   145,   146,   147,   148,   149,
      -1,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,    -1,    -1,    -1,   164,   165,   166,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
      -1,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,    -1,    -1,   127,   128,   129,   130,   131,
      -1,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,   144,   145,   146,   147,   148,   149,    -1,   151,
      -1,   153,   154,   155,   156,    -1,   158,    -1,   160,    -1,
      -1,    -1,   164,   165,   166,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,    -1,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,    -1,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    -1,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,    -1,    -1,   127,   128,   129,   130,   131,    -1,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
     144,   145,   146,   147,   148,   149,    -1,   151,    -1,   153,
     154,   155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,
     164,   165,   166,   167,    -1,   169,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,    -1,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
      -1,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,   213,
     214,    -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,    -1,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,    -1,
      -1,   127,   128,   129,   130,   131,    -1,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,   144,   145,
     146,   147,   148,   149,    -1,   151,    -1,   153,   154,   155,
     156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,
     166,   167,    -1,   169,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,    -1,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,   208,    -1,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,   145,   146,   147,   148,   149,
      -1,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,    -1,    -1,    -1,   164,   165,   166,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
      -1,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    -1,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    -1,    -1,
      72,    -1,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,    -1,    -1,   127,   128,   129,   130,   131,
      -1,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,   144,    -1,   146,   147,   148,    -1,    -1,   151,
      -1,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
      -1,   163,   164,   165,   166,   167,    -1,   169,    -1,    -1,
      -1,   173,    -1,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,    -1,   217,    -1,   219,   220,   221,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,    -1,    -1,
     252,   253,   254,   255,    -1,    -1,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,    -1,   275,   276,   277,    -1,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,    -1,
     292,   293,    -1,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,    -1,    -1,   375,   376,    -1,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
      -1,   393,    -1,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   448,   449,   450,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    -1,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    -1,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,    -1,   146,   147,
     148,    -1,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,    -1,    -1,    -1,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
      -1,   219,   220,   221,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,    -1,    -1,   252,   253,   254,   255,    -1,    -1,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,    -1,   275,   276,   277,
      -1,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,    -1,   292,   293,    -1,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,    -1,   375,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,    -1,   393,    -1,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     448,   449,   450
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    18,    28,    30,    31,    46,    66,    77,    88,    90,
     107,   130,   136,   144,   146,   224,   292,   295,   323,   331,
     343,   350,   354,   364,   377,   412,   417,   430,   453,   467,
     475,   476,   477,   478,   489,   490,   492,   496,   510,   511,
     513,   515,   522,   524,   570,   576,   577,   594,   595,   596,
     597,   598,   599,   636,   753,   756,   759,   766,   767,   768,
     775,   779,   785,   787,   792,   796,   797,   800,   802,   804,
     390,   433,   523,   188,   337,   344,   377,   423,   523,   523,
      49,   467,   589,   167,   225,   271,   337,   381,   383,   404,
     407,   568,   765,     3,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    37,    38,    40,    41,
      42,    44,    45,    46,    47,    48,    50,    51,    53,    54,
      55,    56,    57,    60,    61,    62,    63,    64,    66,    67,
      68,    69,    70,    74,    75,    76,    77,    78,    80,    81,
      82,    84,    85,    86,    87,    88,    89,    92,    93,    94,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   112,
     114,   115,   116,   117,   118,   119,   121,   122,   123,   124,
     127,   128,   129,   130,   131,   133,   134,   135,   137,   138,
     139,   141,   142,   143,   144,   145,   146,   147,   148,   149,
     151,   153,   154,   155,   156,   158,   160,   164,   165,   166,
     167,   169,   170,   172,   173,   175,   176,   177,   178,   179,
     181,   182,   183,   184,   186,   187,   188,   189,   190,   191,
     193,   195,   196,   197,   198,   199,   200,   201,   203,   205,
     208,   210,   211,   212,   213,   214,   217,   218,   220,   223,
     224,   225,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   246,
     247,   248,   249,   250,   252,   253,   255,   257,   258,   259,
     260,   261,   262,   264,   265,   268,   269,   270,   273,   274,
     276,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   327,   328,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   344,   345,   346,   347,   348,   350,   351,   352,   353,
     354,   356,   357,   358,   359,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   375,   376,
     378,   380,   381,   382,   383,   384,   386,   387,   390,   391,
     392,   393,   394,   396,   397,   398,   399,   400,   401,   402,
     405,   406,   407,   408,   409,   412,   413,   414,   415,   416,
     417,   418,   420,   422,   423,   424,   425,   428,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   740,   746,
     807,   808,    20,    72,    87,   139,   147,   159,   188,   234,
     290,   304,   335,   337,   344,   347,   366,   377,   384,   393,
     423,   571,   572,   575,   523,   295,   740,    90,   421,   467,
     492,   576,   594,   771,   775,   792,   804,     5,   745,   786,
     746,   740,    26,   386,   390,   746,   798,   799,   801,   523,
      26,   125,   606,   607,   225,   337,   348,   386,   780,   781,
     801,    26,   386,   390,   801,   523,   267,   647,   738,   746,
     163,   467,   789,   467,   311,   600,   601,   740,   600,   595,
     596,   599,     0,   470,   116,   198,   409,   140,   202,   272,
     403,   608,   609,   595,   597,   598,   471,   421,   769,   179,
     738,   740,   179,   738,   179,   647,   179,   738,   492,   576,
     594,   755,   792,   738,   381,   383,   381,   383,   321,   179,
     746,   311,   344,   377,   423,   188,    26,   740,   236,   393,
     104,   377,   423,   340,   179,   573,   746,   748,   179,   739,
     740,   179,   740,   467,   514,   568,   771,     3,    43,    49,
      72,    79,    91,    98,   161,   163,   180,   194,   206,   207,
     209,   219,   221,   245,   254,   275,   277,   329,   355,   379,
     417,   421,   772,   774,   775,   777,   778,   807,   808,   809,
     769,   456,   467,   467,   754,   450,   208,   469,   266,     3,
       4,     6,     7,     8,     9,    10,    48,    50,    51,    58,
      59,    62,    63,    70,    72,    95,    96,    97,    98,    99,
     100,   101,   108,   109,   111,   129,   145,   149,   150,   155,
     170,   200,   201,   203,   218,   226,   227,   244,   246,   251,
     256,   257,   259,   268,   278,   291,   308,   333,   349,   358,
     373,   386,   387,   392,   394,   395,   410,   418,   451,   458,
     459,   460,   467,   472,   595,   662,   665,   668,   669,   670,
     672,   673,   674,   675,   677,   678,   682,   684,   685,   686,
     688,   701,   705,   723,   728,   735,   736,   742,   743,   744,
     745,   746,   747,   807,   809,   734,   735,   780,   745,   780,
     450,   162,   388,   456,   450,   208,   467,   738,   460,   465,
     469,   729,   731,     3,   161,   163,   421,   775,   788,   790,
     161,   791,   682,   709,   600,   471,   467,   750,   468,   468,
     477,   162,   204,   647,   793,    26,   125,   605,   605,    53,
     605,   152,   157,   222,   263,   614,   616,   617,   629,   631,
     632,   633,   608,   609,   467,   738,   145,    22,    28,   130,
     270,   319,   323,   350,   414,   483,   486,   487,   319,   145,
      35,    54,   103,   187,   235,   238,   249,   280,   319,   324,
     344,   350,   364,   486,   516,   519,   145,   319,   350,   486,
     145,   319,   350,   486,   468,   467,   558,   568,   251,   757,
     423,   179,   738,   179,   738,   806,   738,    79,   762,   434,
      80,   122,   283,   382,   145,    56,   325,   471,   574,   469,
     749,   145,   471,   574,   145,   266,   709,   377,   468,   471,
       4,   150,   266,   395,   458,   459,   518,   521,   744,   745,
     770,   772,   773,   776,   771,   518,   776,   782,   784,   682,
     710,   711,   747,   751,     3,    48,    50,    51,    62,    63,
     108,   109,   155,   200,   201,   203,   244,   246,   259,   308,
     351,   358,   386,   387,   418,   659,   661,   663,   665,   667,
     669,   670,   671,   673,   674,   677,   678,   712,   747,   807,
      35,   220,   746,   467,   732,   420,   676,   682,   727,   467,
     676,   676,   467,   157,   467,   467,   467,   664,   664,   294,
     595,   467,   467,   666,   467,   467,   467,   467,    62,    63,
     676,   682,   467,   664,   467,   467,   467,   467,   467,   432,
     453,   467,   679,   467,   679,   467,   467,   682,   682,   682,
     595,   682,   709,   732,   731,   745,   467,   467,   745,     3,
       8,    11,    15,    16,    17,    32,    35,    40,    47,    71,
     180,   185,   206,   207,   221,   254,   268,   271,   355,   451,
     454,   455,   456,   458,   459,   460,   461,   462,   463,   703,
     704,   705,   707,   431,   689,   277,   682,   204,   471,   602,
     467,   745,   731,   602,     3,   111,   225,   518,   678,   745,
     783,    94,   111,   784,   111,   784,   220,   738,   682,   730,
       3,    26,    30,    31,    32,    33,    34,    35,    36,    39,
      52,    58,    59,    65,    71,    73,    83,    90,    95,    96,
      97,    99,   100,   101,   111,   113,   120,   125,   126,   132,
     136,   140,   150,   152,   157,   159,   162,   168,   171,   174,
     185,   192,   202,   204,   215,   216,   222,   226,   227,   251,
     256,   263,   266,   267,   271,   272,   288,   298,   313,   326,
     343,   349,   360,   374,   377,   385,   388,   389,   395,   403,
     404,   410,   411,   419,   426,   427,   429,   430,   460,   741,
     752,   807,   808,   809,   810,   729,   468,   471,   769,   468,
     471,   601,   739,    35,   793,   494,   738,    35,   746,   350,
     597,   597,   610,   611,   682,   597,   154,   248,   623,   210,
     249,   307,   353,   409,    26,   618,   682,   458,   459,   619,
     620,   682,   684,   629,   630,   617,   616,   614,   615,   157,
     632,   261,   634,   614,   629,   709,   750,   738,    65,    73,
      83,   159,   179,   298,   404,   539,   549,   564,   746,    73,
      83,   491,    83,   491,   467,   388,   467,   537,   231,   407,
     537,    83,   471,   388,   738,   661,   518,    53,   520,   518,
     518,   103,   235,   238,    53,   388,   430,   453,   517,   242,
     337,   517,   519,   647,    83,   388,   491,   337,   738,   388,
     337,   388,   557,   562,   746,   430,   587,   311,   423,   145,
      90,   511,   524,   758,   759,   802,   738,   251,   512,   516,
     251,   467,   558,    35,   558,   179,   552,   746,   763,   573,
     748,   741,   469,   739,   740,   740,   748,   468,   179,   738,
     806,   771,   777,     4,   744,     4,   744,   471,   468,   471,
      13,    14,   661,    34,   660,   106,   177,   237,   240,   341,
     448,   467,   680,   681,   468,   471,   664,   749,   755,   709,
     729,   467,   426,   724,   725,   682,   709,   467,   744,   744,
     709,     3,   106,   177,   237,   240,   341,   448,   713,   714,
     745,   744,   709,   709,   744,   744,   676,   676,   682,     8,
      15,    16,    17,   454,   455,   456,   458,   459,   460,   461,
     462,   463,   703,   708,   746,   682,   715,   458,   459,   467,
     683,   684,   705,   717,   468,   709,   682,   709,   718,   386,
     386,   744,   744,   682,    52,   162,   216,   389,   682,   709,
     721,   468,   471,   744,   472,   744,   680,   659,   682,   682,
     682,   682,   752,   386,    39,   374,   733,   748,   682,   467,
     595,   722,   125,   150,   251,   256,   261,   395,   405,   682,
     467,   682,   388,    47,   180,   185,   221,   355,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,    26,    33,
     360,   702,   171,   153,   690,   333,   467,   701,   167,   225,
     377,   381,   383,   407,   603,   738,   736,   162,   637,    26,
     125,   419,   460,   468,   710,   637,   467,   745,   468,   466,
     473,   738,   788,   738,   796,   682,   468,   467,   411,   795,
     111,   279,   467,   493,   594,    35,   746,   467,   498,   507,
     509,   746,   471,    36,   120,   411,   612,   333,   334,   458,
     459,   620,   622,   684,   353,   210,   267,   471,     4,   621,
     744,   621,   333,   334,   622,   737,   738,   255,   357,   635,
     630,   615,   468,   319,   486,   467,   179,   549,   740,   210,
     251,   210,   411,   467,   542,   659,   740,   746,   179,   740,
     179,   746,    22,   130,   350,   482,   485,   532,   547,   752,
     740,   541,   561,   752,   740,   483,   740,   319,   350,   486,
     516,   518,   748,   740,   518,   748,   740,   518,   319,   350,
     486,   740,   740,   740,   740,   319,   350,   486,   740,   740,
     303,   583,   468,   471,   264,   162,   388,   578,   423,   738,
     746,   568,   467,   145,   145,   221,   539,   549,   553,   556,
     565,   567,   746,   430,   432,   544,   144,   594,   430,   764,
     251,   266,   574,   741,   574,   266,   574,   251,    35,   782,
     711,   682,   682,    34,   660,   465,   465,   388,   388,   388,
     467,   388,   744,   659,   664,   468,   709,   682,   132,   725,
     726,    35,   468,   682,   468,   468,   468,   468,   162,   468,
     468,   468,   468,   468,   471,   468,   469,   288,   716,   468,
     683,   683,   682,    11,    15,    16,    17,   185,   206,   268,
     454,   455,   456,   458,   459,   460,   461,   462,   463,   705,
     683,   468,   468,   157,   162,   719,   720,   468,   450,   450,
     468,   468,    35,   721,   709,   721,   721,   162,   468,   732,
     682,   468,   468,   468,   450,   683,   683,   138,   709,   162,
     125,   150,   256,   261,   395,   405,   467,   138,   708,   682,
     374,   733,   682,   722,   682,   388,   467,   595,   467,   467,
     276,   694,   381,   383,   381,   383,   738,   377,   604,   604,
     604,   215,   334,   467,   595,   638,   639,   640,   647,   650,
     685,   687,   688,   742,   746,   427,   655,   710,   710,   711,
     468,   471,   608,   609,   655,   744,   680,   682,   730,   750,
     755,   638,   427,   794,   417,   376,   410,   502,   497,   506,
     746,   266,   499,   746,   503,   509,   471,   637,   456,   732,
     611,   268,   703,   706,   452,   613,     4,   744,   622,   267,
     409,   619,   471,   230,   388,   682,   251,   564,   467,   145,
     467,   542,   188,   562,   525,   270,   535,   525,    22,   130,
     323,   324,   350,   479,   480,   481,   487,   488,   145,   574,
     145,   574,   532,   547,   532,   468,   471,   528,   745,   468,
     471,   456,   469,   388,   337,    83,   388,   491,   337,   388,
     388,   388,   337,   367,   368,   592,   745,   557,   583,   738,
     558,   757,   377,   562,   738,   738,   806,   738,   468,   471,
     264,   537,   264,   266,   536,   740,   430,   805,   537,    35,
     145,   738,   748,   145,   465,   744,   466,   744,   177,   237,
     681,   237,   681,   681,   744,   240,   468,   468,   385,   682,
     136,   659,   468,   682,   682,   708,   682,   719,   659,   683,
     683,   683,   683,   125,   251,   261,   683,   683,   683,   683,
     683,   683,   683,   683,   683,   683,   682,   682,   720,   719,
     679,   679,   659,   468,   468,   468,   709,   468,   472,   745,
     682,    32,    32,   682,   468,   682,   162,   467,   712,   682,
     468,   138,   683,   683,   138,   138,   682,   682,   609,   427,
     467,   695,   746,   604,   604,   604,   604,   738,   738,   738,
     595,   650,   746,   162,   595,   639,   640,    35,   641,   642,
     746,   471,    91,   163,   194,   209,   219,   245,   329,   644,
     642,    35,   641,   643,   746,   453,   654,   467,   731,   682,
     171,   624,   608,   608,   608,   419,   468,   624,   468,   466,
     468,   682,   326,   501,   416,   468,   471,   732,    81,   501,
     468,   471,   498,   794,   682,   467,   613,   154,   214,   267,
     738,   740,   468,   145,   562,   549,   562,   525,   552,   468,
     113,   192,   249,   251,   548,   467,   559,   166,   111,   178,
     251,   537,   517,   104,   111,   166,   251,   366,   369,   519,
     537,   350,   481,   398,   740,   746,   485,   561,   250,   268,
     351,   458,   459,   518,   526,   563,   659,   706,   745,   747,
     810,   752,   740,   740,   740,   740,   740,   740,   740,   740,
     740,   740,   517,   592,   467,   764,   179,   738,   468,   512,
     467,    35,   546,   544,   553,    77,   514,   104,   249,   594,
     552,   411,   761,   574,   806,   744,   466,   466,   468,   682,
     468,   468,   720,   162,   125,   261,   467,   468,   680,   682,
     682,   682,   712,   468,   682,    32,    32,   682,   682,   138,
     468,   468,   682,   696,   746,   738,   738,   738,   738,   642,
     643,   731,   467,   468,   746,   467,   639,   209,   275,   645,
     639,   645,   209,   644,   645,   209,   379,   648,   467,   746,
     467,   273,   710,    53,   174,   628,   468,   468,   468,   711,
     745,   628,   745,   735,   594,   279,   594,   497,   266,   467,
     495,   456,   509,   501,   708,   525,   549,   468,   468,   430,
     555,   114,   181,   190,   113,   413,   532,   550,    65,    71,
      83,   111,   113,   166,   192,   251,   256,   298,   313,   404,
     530,   531,   543,    29,    53,   569,   179,   256,   518,   682,
     569,   256,   458,   459,   521,   746,   659,   574,   574,   747,
     749,   456,   388,   388,   467,   584,   588,   411,   579,   581,
     562,    35,   251,   467,   764,   556,   144,   594,   142,   186,
     536,   116,   130,   297,   805,   104,   430,   803,   266,   746,
     760,   467,    35,   466,   683,   162,   467,   712,   468,   682,
     682,   682,   468,   285,   697,   651,   652,   687,   641,   467,
     739,   639,   266,   411,   646,   639,   209,   639,   742,   656,
     657,   746,   467,   656,   746,   608,   467,   625,   626,   627,
     682,   682,   429,   691,   608,   691,   502,    83,   467,   500,
     508,   687,   746,   126,   682,   468,   313,   555,   467,   545,
     525,   468,   471,   467,   748,   740,   683,   569,   114,   181,
     113,   256,   210,   738,   555,   111,    35,   145,    71,   658,
     749,   462,   526,   740,   740,   586,   593,   752,    49,    92,
     117,   134,   138,   158,   161,   175,   256,   264,   305,   590,
     517,   118,   468,   594,   145,    35,   468,   740,   805,    26,
      76,    84,   112,   178,   189,   366,   369,   540,   540,   334,
     334,    57,    65,   225,   738,   508,   683,   712,   468,    53,
     608,   468,   471,    35,   653,   739,   468,   682,   467,   639,
     646,   467,   468,   471,   659,   656,   468,   468,   468,   471,
     692,   693,   746,   468,   416,   740,   682,   468,   471,    71,
     504,   504,   252,   409,   738,   525,   551,   554,   752,   532,
     682,   251,   531,    35,   555,   558,   178,   748,   411,   484,
     462,   398,   468,   471,   460,   467,   518,   585,   776,    35,
     582,   745,   582,   251,   256,   305,   582,   582,   584,   745,
     764,   803,   738,   594,   544,   514,    65,   269,    65,   761,
     468,   468,   709,   306,   334,   698,   654,   651,   467,   468,
     739,   709,   657,   658,   468,   626,   471,    35,   594,   468,
     655,   500,   748,   505,   748,   505,   350,   558,   468,   471,
     456,   468,   178,   233,   566,   467,   527,   682,   398,   586,
     580,   591,   776,   745,   745,   256,   562,   460,   562,   745,
     745,    35,   467,   803,   536,   805,   269,   269,   467,   764,
      47,    94,   400,   682,   699,   700,   699,   468,   656,   468,
     468,   693,   695,   504,   612,   612,   507,   566,   554,   526,
     249,   538,   527,   163,   284,   356,   266,   533,   534,   560,
     516,   468,   471,   562,   594,   508,   655,   700,   333,   156,
     293,   156,   293,   468,   320,   649,   505,   613,   613,   655,
     534,   190,   116,   409,   266,   560,   266,   533,   468,   591,
     803,   468,    32,   467,   612,   525,    56,   249,   325,   350,
     529,   529,   764,   700,   682,   613,    21,   111,   256,   655,
     468
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 628 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 644 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 656 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 34:
#line 694 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 35:
#line 706 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 36:
#line 715 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 37:
#line 724 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 38:
#line 733 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 39:
#line 742 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 40:
#line 751 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 760 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 769 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 782 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 44:
#line 784 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 45:
#line 789 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 46:
#line 790 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 47:
#line 796 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 48:
#line 800 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 49:
#line 804 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 50:
#line 815 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 51:
#line 823 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 52:
#line 827 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 53:
#line 836 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 54:
#line 845 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 55:
#line 854 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 56:
#line 863 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 57:
#line 872 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 58:
#line 881 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 889 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 897 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 906 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 915 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 924 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 933 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 950 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 959 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 968 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 977 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 987 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 1000 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 1015 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 1024 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 1032 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 1047 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 1055 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 1065 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 1075 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 1082 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 1089 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 1097 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 1104 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 82:
#line 1114 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 83:
#line 1115 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 84:
#line 1121 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 85:
#line 1125 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 86:
#line 1130 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 87:
#line 1135 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 88:
#line 1142 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 89:
#line 1143 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 90:
#line 1148 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 91:
#line 1152 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = 1; ;}
    break;

  case 92:
#line 1153 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = 0; ;}
    break;

  case 93:
#line 1163 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 94:
#line 1169 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 95:
#line 1175 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 96:
#line 1181 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 97:
#line 1194 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 98:
#line 1203 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 99:
#line 1213 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 100:
#line 1223 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 101:
#line 1233 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 102:
#line 1243 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 1253 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 1263 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 1273 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 1283 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 1294 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 1305 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 1315 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 1327 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 111:
#line 1328 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = 0; ;}
    break;

  case 112:
#line 1340 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 113:
#line 1352 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 114:
#line 1358 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 115:
#line 1365 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 116:
#line 1371 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 117:
#line 1378 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 118:
#line 1388 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 119:
#line 1392 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 120:
#line 1401 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 121:
#line 1410 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 122:
#line 1418 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 123:
#line 1425 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 124:
#line 1426 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.with) = NULL; ;}
    break;

  case 125:
#line 1432 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 126:
#line 1444 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 127:
#line 1449 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 128:
#line 1474 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 129:
#line 1484 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 130:
#line 1493 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 131:
#line 1500 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 132:
#line 1511 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 133:
#line 1522 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 134:
#line 1536 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 135:
#line 1537 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 136:
#line 1543 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 137:
#line 1544 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 138:
#line 1549 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 139:
#line 1550 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 140:
#line 1556 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 141:
#line 1557 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 142:
#line 1561 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 143:
#line 1562 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 144:
#line 1568 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 145:
#line 1570 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 146:
#line 1575 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 147:
#line 1576 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 148:
#line 1580 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 149:
#line 1581 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 150:
#line 1587 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 151:
#line 1603 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 152:
#line 1610 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 153:
#line 1618 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 154:
#line 1637 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 155:
#line 1647 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 156:
#line 1659 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 157:
#line 1660 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 158:
#line 1670 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 159:
#line 1678 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 160:
#line 1695 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 161:
#line 1713 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 162:
#line 1714 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 163:
#line 1726 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 164:
#line 1734 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 165:
#line 1745 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 166:
#line 1746 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 167:
#line 1750 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 168:
#line 1751 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 169:
#line 1752 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 170:
#line 1757 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 171:
#line 1758 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 172:
#line 1760 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 173:
#line 1764 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 174:
#line 1769 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 175:
#line 1773 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 176:
#line 1777 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 177:
#line 1781 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 178:
#line 1785 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 179:
#line 1789 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 180:
#line 1793 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 181:
#line 1797 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 182:
#line 1801 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 183:
#line 1805 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 184:
#line 1809 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 185:
#line 1814 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 186:
#line 1818 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 187:
#line 1822 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 188:
#line 1828 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 189:
#line 1829 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 190:
#line 1833 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 191:
#line 1834 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 192:
#line 1835 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 193:
#line 1840 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 194:
#line 1847 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 195:
#line 1853 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 196:
#line 1859 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 197:
#line 1866 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 198:
#line 1873 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 199:
#line 1882 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 200:
#line 1883 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 201:
#line 1884 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 202:
#line 1895 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 203:
#line 1910 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 204:
#line 1927 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = 0; ;}
    break;

  case 205:
#line 1929 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 206:
#line 1955 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 207:
#line 1956 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 208:
#line 1957 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 209:
#line 1958 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 210:
#line 1959 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 211:
#line 1960 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 212:
#line 1964 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 213:
#line 1965 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 214:
#line 1970 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 215:
#line 1975 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 216:
#line 1976 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 217:
#line 1977 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 218:
#line 1978 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 219:
#line 1979 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 220:
#line 1985 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 221:
#line 1991 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 222:
#line 1992 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 223:
#line 1994 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 224:
#line 2011 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 225:
#line 2018 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 226:
#line 2025 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 227:
#line 2035 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 228:
#line 2045 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 229:
#line 2057 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 230:
#line 2066 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 231:
#line 2075 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 232:
#line 2094 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 233:
#line 2100 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 234:
#line 2106 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 235:
#line 2108 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 236:
#line 2110 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 237:
#line 2112 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 238:
#line 2114 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 239:
#line 2119 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 240:
#line 2120 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 241:
#line 2124 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 242:
#line 2125 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 243:
#line 2126 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 244:
#line 2127 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 245:
#line 2132 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 246:
#line 2136 "third_party/libpg_query/grammar/grammar.y.tmp"
    {  (yyval.boolean) = true; ;}
    break;

  case 247:
#line 2137 "third_party/libpg_query/grammar/grammar.y.tmp"
    {  (yyval.boolean) = false; ;}
    break;

  case 248:
#line 2143 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 249:
#line 2149 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 250:
#line 2154 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 251:
#line 2155 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 252:
#line 2156 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 253:
#line 2157 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 254:
#line 2158 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 255:
#line 2159 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 256:
#line 2160 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 257:
#line 2161 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 258:
#line 2167 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 259:
#line 2168 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 260:
#line 2172 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 261:
#line 2178 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 262:
#line 2185 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 263:
#line 2192 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 264:
#line 2199 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 265:
#line 2210 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 266:
#line 2211 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 267:
#line 2212 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 268:
#line 2213 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 269:
#line 2217 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 270:
#line 2222 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 271:
#line 2223 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 272:
#line 2224 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = 0; ;}
    break;

  case 273:
#line 2229 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 274:
#line 2234 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 275:
#line 2235 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 276:
#line 2236 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 277:
#line 2237 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 278:
#line 2238 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 279:
#line 2239 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 280:
#line 2245 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 281:
#line 2268 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 282:
#line 2272 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 283:
#line 2278 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 284:
#line 2279 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 285:
#line 2283 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 286:
#line 2287 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 287:
#line 2288 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 288:
#line 2289 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 289:
#line 2294 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 290:
#line 2298 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 291:
#line 2305 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 292:
#line 2306 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 293:
#line 2311 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 294:
#line 2312 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 295:
#line 2317 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 296:
#line 2324 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 297:
#line 2325 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 298:
#line 2330 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 299:
#line 2331 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 300:
#line 2335 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 301:
#line 2341 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 302:
#line 2345 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 303:
#line 2349 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 304:
#line 2354 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 305:
#line 2361 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 306:
#line 2362 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 307:
#line 2366 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 308:
#line 2368 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 309:
#line 2374 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 310:
#line 2385 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 311:
#line 2399 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 312:
#line 2412 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 313:
#line 2427 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 314:
#line 2440 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 315:
#line 2455 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 316:
#line 2477 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 317:
#line 2481 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 318:
#line 2488 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 319:
#line 2492 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 320:
#line 2500 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 321:
#line 2504 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 322:
#line 2512 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 323:
#line 2521 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 324:
#line 2522 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 325:
#line 2523 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 326:
#line 2524 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 327:
#line 2526 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 328:
#line 2533 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 329:
#line 2539 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 330:
#line 2540 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 331:
#line 2545 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 332:
#line 2546 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 333:
#line 2558 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 334:
#line 2568 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 335:
#line 2578 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 336:
#line 2588 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 337:
#line 2598 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 338:
#line 2608 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 339:
#line 2621 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 340:
#line 2622 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 341:
#line 2623 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 342:
#line 2624 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 343:
#line 2625 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 344:
#line 2626 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 345:
#line 2627 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 346:
#line 2628 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 347:
#line 2629 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 348:
#line 2630 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 349:
#line 2631 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 350:
#line 2632 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 351:
#line 2633 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 352:
#line 2638 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 353:
#line 2639 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 354:
#line 2640 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 355:
#line 2641 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 356:
#line 2642 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 357:
#line 2643 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 358:
#line 2644 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 359:
#line 2649 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 360:
#line 2650 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 361:
#line 2655 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 362:
#line 2656 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 363:
#line 2657 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 364:
#line 2662 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 365:
#line 2663 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 366:
#line 2664 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 367:
#line 2678 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 368:
#line 2692 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 369:
#line 2720 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 370:
#line 2742 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 371:
#line 2743 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 372:
#line 2749 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 373:
#line 2752 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.defelt) = NULL; ;}
    break;

  case 374:
#line 2758 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 375:
#line 2762 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 376:
#line 2769 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 377:
#line 2770 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 378:
#line 2774 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 379:
#line 2775 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 380:
#line 2780 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 381:
#line 2781 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 382:
#line 2785 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 383:
#line 2786 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 384:
#line 2791 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 385:
#line 2792 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 386:
#line 2793 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 387:
#line 2794 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 388:
#line 2795 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 389:
#line 2801 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 390:
#line 2809 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 391:
#line 2812 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.defelt) = NULL; ;}
    break;

  case 392:
#line 2817 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 393:
#line 2818 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 394:
#line 2824 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 395:
#line 2827 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.defelt) = NULL; ;}
    break;

  case 396:
#line 2833 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 397:
#line 2837 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 398:
#line 2841 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 399:
#line 2845 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 400:
#line 2849 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 401:
#line 2853 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 402:
#line 2857 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 403:
#line 2861 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 404:
#line 2865 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 405:
#line 2869 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 406:
#line 2873 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 407:
#line 2877 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 408:
#line 2881 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 409:
#line 2885 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 410:
#line 2892 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 411:
#line 2898 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 412:
#line 2899 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = NULL; ;}
    break;

  case 413:
#line 2900 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = NULL; ;}
    break;

  case 414:
#line 2906 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 415:
#line 2910 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 418:
#line 2966 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 419:
#line 2967 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 420:
#line 2982 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 421:
#line 2984 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 422:
#line 2991 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 423:
#line 2999 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 424:
#line 3007 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 425:
#line 3015 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 426:
#line 3023 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 427:
#line 3031 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 428:
#line 3041 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 429:
#line 3042 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 430:
#line 3072 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (9)].list);
					n->intoClause = (yyvsp[(4) - (9)].into);
					n->fromClause = (yyvsp[(5) - (9)].list);
					n->whereClause = (yyvsp[(6) - (9)].node);
					n->groupClause = (yyvsp[(7) - (9)].list);
					n->havingClause = (yyvsp[(8) - (9)].node);
					n->windowClause = (yyvsp[(9) - (9)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 431:
#line 3086 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (9)].list);
					n->targetList = (yyvsp[(3) - (9)].list);
					n->intoClause = (yyvsp[(4) - (9)].into);
					n->fromClause = (yyvsp[(5) - (9)].list);
					n->whereClause = (yyvsp[(6) - (9)].node);
					n->groupClause = (yyvsp[(7) - (9)].list);
					n->havingClause = (yyvsp[(8) - (9)].node);
					n->windowClause = (yyvsp[(9) - (9)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 432:
#line 3098 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 433:
#line 3100 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 434:
#line 3119 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 435:
#line 3123 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 436:
#line 3127 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 437:
#line 3144 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 438:
#line 3151 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 439:
#line 3158 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 440:
#line 3167 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 441:
#line 3168 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 442:
#line 3172 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 443:
#line 3184 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 444:
#line 3194 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.into) = NULL; ;}
    break;

  case 445:
#line 3203 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 446:
#line 3208 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 447:
#line 3213 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 448:
#line 3218 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 449:
#line 3223 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 450:
#line 3231 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 451:
#line 3239 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 452:
#line 3244 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 453:
#line 3249 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 454:
#line 3255 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 455:
#line 3256 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 456:
#line 3260 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 457:
#line 3261 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 458:
#line 3262 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 459:
#line 3269 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 460:
#line 3270 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 461:
#line 3274 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL;;}
    break;

  case 462:
#line 3275 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 463:
#line 3279 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 464:
#line 3280 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 465:
#line 3284 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 466:
#line 3288 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 467:
#line 3289 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 468:
#line 3293 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 469:
#line 3302 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 470:
#line 3312 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 471:
#line 3313 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 472:
#line 3314 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 473:
#line 3317 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 474:
#line 3318 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.nullorder) = SORTBY_NULLS_LAST; ;}
    break;

  case 475:
#line 3319 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 476:
#line 3323 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 477:
#line 3324 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 478:
#line 3325 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 479:
#line 3326 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 480:
#line 3330 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 481:
#line 3331 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 482:
#line 3336 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 483:
#line 3338 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 484:
#line 3354 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 485:
#line 3356 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 486:
#line 3361 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 487:
#line 3364 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 488:
#line 3368 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 489:
#line 3370 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 490:
#line 3377 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 491:
#line 3397 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 492:
#line 3399 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 493:
#line 3401 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 494:
#line 3405 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 495:
#line 3406 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 496:
#line 3410 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = 0; ;}
    break;

  case 497:
#line 3411 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = 0; ;}
    break;

  case 498:
#line 3414 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = 0; ;}
    break;

  case 499:
#line 3415 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = 0; ;}
    break;

  case 500:
#line 3440 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 501:
#line 3441 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 502:
#line 3445 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 503:
#line 3446 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 504:
#line 3450 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 505:
#line 3451 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 506:
#line 3456 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 507:
#line 3468 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 508:
#line 3469 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 509:
#line 3473 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 510:
#line 3474 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 511:
#line 3478 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 512:
#line 3479 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 513:
#line 3483 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 514:
#line 3484 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 515:
#line 3489 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 516:
#line 3499 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 517:
#line 3500 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 518:
#line 3501 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 519:
#line 3502 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 520:
#line 3506 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 521:
#line 3507 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 522:
#line 3512 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 523:
#line 3513 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 524:
#line 3514 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 525:
#line 3524 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 526:
#line 3530 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 527:
#line 3547 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 528:
#line 3548 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 529:
#line 3552 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 530:
#line 3553 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 531:
#line 3560 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyvsp[(1) - (2)].range)->alias = (yyvsp[(2) - (2)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (2)].range);
				;}
    break;

  case 532:
#line 3565 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRangeTableSample *n = (PGRangeTableSample *) (yyvsp[(3) - (3)].node);
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					/* relation_expr goes inside the PGRangeTableSample node */
					n->relation = (PGNode *) (yyvsp[(1) - (3)].range);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 533:
#line 3573 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (2)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (2)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (2)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 534:
#line 3580 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 535:
#line 3588 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (2)].node);
					n->alias = (yyvsp[(2) - (2)].alias);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[(2) - (2)].alias) == NULL)
					{
						if (IsA((yyvsp[(1) - (2)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(1) - (2)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (2)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (2)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 536:
#line 3623 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					/* same comment as above */
					if ((yyvsp[(3) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(2) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(2) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 537:
#line 3648 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 538:
#line 3652 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 539:
#line 3678 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 540:
#line 3682 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					(yyval.jexpr) = n;
				;}
    break;

  case 541:
#line 3694 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					(yyval.jexpr) = n;
				;}
    break;

  case 542:
#line 3707 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					(yyval.jexpr) = n;
				;}
    break;

  case 543:
#line 3721 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					(yyval.jexpr) = n;
				;}
    break;

  case 544:
#line 3732 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					(yyval.jexpr) = n;
				;}
    break;

  case 545:
#line 3747 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 546:
#line 3753 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 547:
#line 3758 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 548:
#line 3764 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 549:
#line 3770 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 550:
#line 3771 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.alias) = NULL; ;}
    break;

  case 551:
#line 3780 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 552:
#line 3784 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 553:
#line 3788 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 554:
#line 3794 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 555:
#line 3800 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 556:
#line 3805 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 557:
#line 3806 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 558:
#line 3807 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 559:
#line 3808 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 560:
#line 3812 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 561:
#line 3813 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 562:
#line 3825 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 563:
#line 3826 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 564:
#line 3832 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 565:
#line 3839 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 566:
#line 3846 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 567:
#line 3853 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 568:
#line 3876 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRangeTableSample *n = makeNode(PGRangeTableSample);
					/* n->relation will be filled in later */
					n->method = (yyvsp[(2) - (6)].list);
					n->args = (yyvsp[(4) - (6)].list);
					n->repeatable = (yyvsp[(6) - (6)].node);
					n->location = (yylsp[(2) - (6)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 569:
#line 3888 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].node); ;}
    break;

  case 570:
#line 3889 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 571:
#line 3905 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 572:
#line 3915 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 573:
#line 3927 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 574:
#line 3931 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 575:
#line 3932 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 576:
#line 3935 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 577:
#line 3936 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 578:
#line 3939 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 579:
#line 3940 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 580:
#line 3945 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 581:
#line 3946 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 582:
#line 3952 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 583:
#line 3956 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 584:
#line 3962 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 585:
#line 3983 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 586:
#line 3990 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 587:
#line 4003 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 588:
#line 4008 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 589:
#line 4015 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 590:
#line 4020 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 591:
#line 4026 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 592:
#line 4031 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 593:
#line 4040 "third_party/libpg_query/grammar/grammar.y.tmp"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 594:
#line 4042 "third_party/libpg_query/grammar/grammar.y.tmp"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 595:
#line 4044 "third_party/libpg_query/grammar/grammar.y.tmp"
    {  (yyval.list) = NIL; ;}
    break;

  case 596:
#line 4048 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 597:
#line 4049 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 598:
#line 4050 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 599:
#line 4051 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 600:
#line 4052 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 601:
#line 4054 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 602:
#line 4059 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 603:
#line 4078 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 604:
#line 4079 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 605:
#line 4080 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 606:
#line 4081 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 607:
#line 4093 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 608:
#line 4099 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(2) - (3)].list)));
					(yyval.typnam)->typmods = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 609:
#line 4106 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 610:
#line 4107 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 611:
#line 4114 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 612:
#line 4119 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 613:
#line 4124 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 614:
#line 4129 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 615:
#line 4134 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 616:
#line 4139 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 617:
#line 4144 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 618:
#line 4149 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 619:
#line 4155 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 620:
#line 4161 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 621:
#line 4167 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 622:
#line 4174 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 623:
#line 4195 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("float8");
				;}
    break;

  case 624:
#line 4205 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 625:
#line 4209 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 626:
#line 4217 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 627:
#line 4221 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 628:
#line 4229 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 629:
#line 4241 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 630:
#line 4262 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 631:
#line 4266 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 632:
#line 4272 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 633:
#line 4276 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 634:
#line 4289 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 635:
#line 4297 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 636:
#line 4307 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 637:
#line 4309 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 638:
#line 4311 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 639:
#line 4313 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 640:
#line 4315 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 641:
#line 4317 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 642:
#line 4321 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 643:
#line 4322 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 644:
#line 4330 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 645:
#line 4339 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 646:
#line 4347 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 647:
#line 4356 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 648:
#line 4367 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 649:
#line 4374 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 650:
#line 4375 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 651:
#line 4376 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 652:
#line 4381 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 653:
#line 4383 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 654:
#line 4385 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 655:
#line 4387 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 656:
#line 4389 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 657:
#line 4391 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 658:
#line 4393 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 659:
#line 4398 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 660:
#line 4403 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 661:
#line 4409 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(DAY) |
												INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 662:
#line 4417 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 663:
#line 4422 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 664:
#line 4429 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 665:
#line 4435 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 666:
#line 4440 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)])));
				;}
    break;

  case 667:
#line 4444 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make2(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (4)])),
									makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 668:
#line 4479 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 669:
#line 4481 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 670:
#line 4483 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 671:
#line 4491 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 672:
#line 4506 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 673:
#line 4508 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 674:
#line 4510 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 675:
#line 4512 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 676:
#line 4514 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 677:
#line 4516 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 678:
#line 4518 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 679:
#line 4520 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 680:
#line 4522 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 681:
#line 4524 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 682:
#line 4526 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 683:
#line 4528 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 684:
#line 4530 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 685:
#line 4532 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 686:
#line 4535 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 687:
#line 4537 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 688:
#line 4539 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 689:
#line 4542 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 690:
#line 4544 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 691:
#line 4546 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 692:
#line 4548 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 693:
#line 4551 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 694:
#line 4556 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 695:
#line 4564 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 696:
#line 4569 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 697:
#line 4577 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 698:
#line 4582 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 699:
#line 4590 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 700:
#line 4595 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 701:
#line 4604 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 702:
#line 4612 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 703:
#line 4620 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 704:
#line 4628 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 705:
#line 4646 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 706:
#line 4654 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 707:
#line 4662 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 708:
#line 4670 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 709:
#line 4678 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 710:
#line 4694 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 711:
#line 4702 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 712:
#line 4710 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 713:
#line 4718 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 714:
#line 4726 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 715:
#line 4734 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 716:
#line 4742 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 717:
#line 4746 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 718:
#line 4750 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 719:
#line 4754 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 720:
#line 4758 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 721:
#line 4766 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 722:
#line 4774 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 723:
#line 4782 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 724:
#line 4790 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 725:
#line 4810 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 726:
#line 4832 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 727:
#line 4843 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 728:
#line 4850 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 729:
#line 4875 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 730:
#line 4877 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 731:
#line 4879 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 732:
#line 4881 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 733:
#line 4883 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 734:
#line 4885 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 735:
#line 4887 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 736:
#line 4889 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 737:
#line 4891 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 738:
#line 4893 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 739:
#line 4895 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 740:
#line 4897 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 741:
#line 4899 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 742:
#line 4901 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 743:
#line 4903 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 744:
#line 4905 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 745:
#line 4907 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 746:
#line 4909 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 747:
#line 4911 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 748:
#line 4913 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 749:
#line 4917 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 750:
#line 4921 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 751:
#line 4925 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 752:
#line 4938 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 753:
#line 4939 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 754:
#line 4941 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 755:
#line 4953 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 756:
#line 4968 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 757:
#line 4980 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 758:
#line 4982 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 759:
#line 4984 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 760:
#line 4995 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 761:
#line 5019 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 762:
#line 5032 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 763:
#line 5036 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 764:
#line 5042 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 765:
#line 5049 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 766:
#line 5056 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 767:
#line 5066 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 768:
#line 5073 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 769:
#line 5101 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 770:
#line 5136 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 771:
#line 5146 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 772:
#line 5147 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 773:
#line 5155 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 774:
#line 5161 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 775:
#line 5165 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 776:
#line 5169 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 777:
#line 5173 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 778:
#line 5177 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 779:
#line 5181 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 780:
#line 5185 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 781:
#line 5189 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 782:
#line 5193 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 783:
#line 5197 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 784:
#line 5201 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 785:
#line 5205 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 786:
#line 5209 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 787:
#line 5213 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 788:
#line 5217 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 789:
#line 5221 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); ;}
    break;

  case 790:
#line 5223 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 791:
#line 5227 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 792:
#line 5236 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 793:
#line 5241 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 794:
#line 5248 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 795:
#line 5263 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("btrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 796:
#line 5270 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 797:
#line 5274 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 798:
#line 5278 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("btrim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 799:
#line 5282 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 800:
#line 5286 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 801:
#line 5293 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGMinMaxExpr *v = makeNode(PGMinMaxExpr);
					v->args = (yyvsp[(3) - (4)].list);
					v->op = PG_IS_GREATEST;
					v->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)v;
				;}
    break;

  case 802:
#line 5301 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGMinMaxExpr *v = makeNode(PGMinMaxExpr);
					v->args = (yyvsp[(3) - (4)].list);
					v->op = IS_LEAST;
					v->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)v;
				;}
    break;

  case 803:
#line 5315 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 804:
#line 5316 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 805:
#line 5320 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 806:
#line 5321 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 807:
#line 5329 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 808:
#line 5330 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 809:
#line 5334 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 810:
#line 5336 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 811:
#line 5341 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 812:
#line 5349 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 813:
#line 5351 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 814:
#line 5364 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.windef) = NULL; ;}
    break;

  case 815:
#line 5369 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 816:
#line 5394 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 817:
#line 5395 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = NULL; ;}
    break;

  case 818:
#line 5398 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 819:
#line 5399 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 820:
#line 5411 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.windef) = n;
				;}
    break;

  case 821:
#line 5429 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 822:
#line 5435 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 823:
#line 5445 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 824:
#line 5462 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 825:
#line 5507 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 826:
#line 5515 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 827:
#line 5523 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 828:
#line 5531 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 829:
#line 5539 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 830:
#line 5559 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 831:
#line 5560 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 832:
#line 5561 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 833:
#line 5564 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 834:
#line 5565 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 835:
#line 5566 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 836:
#line 5569 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 837:
#line 5570 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 838:
#line 5573 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "+"; ;}
    break;

  case 839:
#line 5574 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "-"; ;}
    break;

  case 840:
#line 5575 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "*"; ;}
    break;

  case 841:
#line 5576 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "/"; ;}
    break;

  case 842:
#line 5577 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "%"; ;}
    break;

  case 843:
#line 5578 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "^"; ;}
    break;

  case 844:
#line 5579 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "<"; ;}
    break;

  case 845:
#line 5580 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = ">"; ;}
    break;

  case 846:
#line 5581 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "="; ;}
    break;

  case 847:
#line 5582 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "<="; ;}
    break;

  case 848:
#line 5583 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = ">="; ;}
    break;

  case 849:
#line 5584 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 850:
#line 5588 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 851:
#line 5590 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 852:
#line 5595 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 853:
#line 5597 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 854:
#line 5602 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 855:
#line 5604 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 856:
#line 5606 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 857:
#line 5608 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 858:
#line 5610 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 859:
#line 5612 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 860:
#line 5626 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 861:
#line 5628 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 862:
#line 5632 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 863:
#line 5636 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 864:
#line 5643 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 865:
#line 5647 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 866:
#line 5653 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 867:
#line 5657 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 868:
#line 5666 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 869:
#line 5676 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 870:
#line 5677 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 871:
#line 5682 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 872:
#line 5685 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 873:
#line 5692 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 874:
#line 5693 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 875:
#line 5694 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 876:
#line 5695 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 877:
#line 5696 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 878:
#line 5697 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 879:
#line 5698 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 880:
#line 5699 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 881:
#line 5710 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 882:
#line 5714 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 883:
#line 5721 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 884:
#line 5727 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 885:
#line 5728 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 886:
#line 5745 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 887:
#line 5749 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 888:
#line 5754 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 889:
#line 5758 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), -1));
				;}
    break;

  case 890:
#line 5773 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 891:
#line 5777 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 892:
#line 5781 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 893:
#line 5784 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 894:
#line 5787 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 895:
#line 5788 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 896:
#line 5789 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 897:
#line 5793 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 898:
#line 5799 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 899:
#line 5810 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 900:
#line 5823 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 901:
#line 5824 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 902:
#line 5829 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 903:
#line 5839 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 904:
#line 5840 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 905:
#line 5843 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 906:
#line 5844 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 907:
#line 5848 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 908:
#line 5852 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 909:
#line 5859 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 910:
#line 5863 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeNode(PGAStar);
				;}
    break;

  case 911:
#line 5867 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 912:
#line 5875 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 913:
#line 5885 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 914:
#line 5886 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 915:
#line 5890 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 916:
#line 5891 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 917:
#line 5895 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 918:
#line 5896 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 921:
#line 5910 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 922:
#line 5911 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 923:
#line 5915 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 924:
#line 5916 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 925:
#line 5920 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 926:
#line 5936 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 927:
#line 5944 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 928:
#line 5952 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					n->fields = list_make1(makeNode(PGAStar));
					n->location = (yylsp[(1) - (1)]);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 929:
#line 5973 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 930:
#line 5974 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 931:
#line 5986 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 932:
#line 5990 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 933:
#line 6017 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 934:
#line 6019 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 935:
#line 6023 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 936:
#line 6025 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 937:
#line 6036 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 938:
#line 6038 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 939:
#line 6049 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 940:
#line 6053 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 941:
#line 6057 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 942:
#line 6061 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 943:
#line 6065 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 944:
#line 6074 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 945:
#line 6081 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 946:
#line 6113 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 947:
#line 6117 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 948:
#line 6123 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 949:
#line 6131 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTypeName *t = (yyvsp[(1) - (6)].typnam);
					if ((yyvsp[(6) - (6)].list) != NIL)
					{
						t->typmods = lappend((yyvsp[(6) - (6)].list), makeParamRef(0, (yylsp[(3) - (6)])));
					}
					else
						t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
												makeParamRef(0, (yylsp[(3) - (6)])));
					(yyval.node) = makeParamRefCast(0, (yylsp[(5) - (6)]), t);
				;}
    break;

  case 950:
#line 6143 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 951:
#line 6147 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 952:
#line 6151 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 953:
#line 6156 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 954:
#line 6157 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 955:
#line 6173 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 956:
#line 6174 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 957:
#line 6175 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 958:
#line 6180 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 959:
#line 6181 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 960:
#line 6182 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 961:
#line 6185 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 962:
#line 6186 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 963:
#line 6190 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 964:
#line 6192 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 965:
#line 6196 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 966:
#line 6197 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 968:
#line 6208 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 969:
#line 6209 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 970:
#line 6210 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 971:
#line 6211 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 972:
#line 6212 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 973:
#line 6222 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 974:
#line 6232 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 975:
#line 6233 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 980:
#line 6250 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 981:
#line 6259 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 982:
#line 6277 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 983:
#line 6283 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 988:
#line 6304 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 989:
#line 6329 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 990:
#line 6355 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 991:
#line 6359 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 992:
#line 6360 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 993:
#line 6365 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 994:
#line 6366 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 995:
#line 6371 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 996:
#line 6372 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = NULL; ;}
    break;

  case 997:
#line 6376 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 998:
#line 6377 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 999:
#line 6382 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 1000:
#line 6383 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 1001:
#line 6393 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1002:
#line 6402 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1003:
#line 6411 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1004:
#line 6420 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1005:
#line 6429 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1006:
#line 6438 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1007:
#line 6453 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1008:
#line 6468 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1009:
#line 6475 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1010:
#line 6485 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1011:
#line 6492 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1012:
#line 6502 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 1013:
#line 6503 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 1014:
#line 6508 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1015:
#line 6509 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1016:
#line 6510 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 1022:
#line 6523 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1023:
#line 6524 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1024:
#line 6525 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1025:
#line 6526 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1026:
#line 6531 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1027:
#line 6532 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1028:
#line 6538 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1029:
#line 6542 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1030:
#line 6549 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 1031:
#line 6550 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 1032:
#line 6555 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1033:
#line 6556 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1034:
#line 6557 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1035:
#line 6563 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1036:
#line 6569 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1037:
#line 6576 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1038:
#line 6577 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1039:
#line 6590 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1040:
#line 6596 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = true;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1041:
#line 6602 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1042:
#line 6611 "third_party/libpg_query/grammar/grammar.y.tmp"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1043:
#line 6613 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1044:
#line 6621 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1045:
#line 6632 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1046:
#line 6644 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1047:
#line 6652 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1048:
#line 6660 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1049:
#line 6667 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1050:
#line 6677 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1051:
#line 6679 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1052:
#line 6685 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1053:
#line 6689 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1054:
#line 6693 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1055:
#line 6708 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1056:
#line 6714 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1057:
#line 6715 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 1058:
#line 6716 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 1059:
#line 6720 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1060:
#line 6721 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1061:
#line 6731 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1062:
#line 6739 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1063:
#line 6749 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1064:
#line 6763 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1065:
#line 6777 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1066:
#line 6789 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1067:
#line 6797 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1068:
#line 6810 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1069:
#line 6811 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1070:
#line 6812 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1071:
#line 6813 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1072:
#line 6815 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1073:
#line 6827 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 1074:
#line 6828 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 1075:
#line 6833 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1076:
#line 6834 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1077:
#line 6838 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 1078:
#line 6839 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 1079:
#line 6850 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1080:
#line 6863 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1081:
#line 6867 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1082:
#line 6874 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1083:
#line 6884 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1084:
#line 6885 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 1085:
#line 6891 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1086:
#line 6892 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 1087:
#line 6904 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1088:
#line 6914 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1089:
#line 6926 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1090:
#line 6932 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1091:
#line 6939 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1092:
#line 6948 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1093:
#line 6950 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1094:
#line 6957 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1095:
#line 6968 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1096:
#line 6974 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "timezone";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1097:
#line 6980 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "transaction_isolation";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1098:
#line 6986 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "all";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1099:
#line 6994 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1100:
#line 6996 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1101:
#line 7008 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->replace = false;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1102:
#line 7021 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->replace = true;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1103:
#line 7034 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->replace = false;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1104:
#line 7052 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->replace = true;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1105:
#line 7072 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1106:
#line 7073 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1107:
#line 7074 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1108:
#line 7075 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1109:
#line 7089 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1110:
#line 7102 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1111:
#line 7118 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 1112:
#line 7119 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 1113:
#line 7120 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 1114:
#line 7126 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 21805 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 7145 "third_party/libpg_query/grammar/grammar.y.tmp"



/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, -1);
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}

static PGNode *
makeParamRefCast(int number, int location, PGTypeName *tpname)
{
	PGNode *p = makeParamRef(number, location);
	return makeTypeCast(p, tpname, -1);
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

