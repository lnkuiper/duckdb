/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LESS_EQUALS = 270,
     GREATER_EQUALS = 271,
     NOT_EQUALS = 272,
     ABORT_P = 273,
     ABSOLUTE_P = 274,
     ACCESS = 275,
     ACTION = 276,
     ADD_P = 277,
     ADMIN = 278,
     AFTER = 279,
     AGGREGATE = 280,
     ALL = 281,
     ALSO = 282,
     ALTER = 283,
     ALWAYS = 284,
     ANALYSE = 285,
     ANALYZE = 286,
     AND = 287,
     ANY = 288,
     ARRAY = 289,
     AS = 290,
     ASC_P = 291,
     ASSERTION = 292,
     ASSIGNMENT = 293,
     ASYMMETRIC = 294,
     AT = 295,
     ATTACH = 296,
     ATTRIBUTE = 297,
     AUTHORIZATION = 298,
     BACKWARD = 299,
     BEFORE = 300,
     BEGIN_P = 301,
     BETWEEN = 302,
     BIGINT = 303,
     BINARY = 304,
     BIT = 305,
     BOOLEAN_P = 306,
     BOTH = 307,
     BY = 308,
     CACHE = 309,
     CALLED = 310,
     CASCADE = 311,
     CASCADED = 312,
     CASE = 313,
     CAST = 314,
     CATALOG_P = 315,
     CHAIN = 316,
     CHAR_P = 317,
     CHARACTER = 318,
     CHARACTERISTICS = 319,
     CHECK_P = 320,
     CHECKPOINT = 321,
     CLASS = 322,
     CLOSE = 323,
     CLUSTER = 324,
     COALESCE = 325,
     COLLATE = 326,
     COLLATION = 327,
     COLUMN = 328,
     COLUMNS = 329,
     COMMENT = 330,
     COMMENTS = 331,
     COMMIT = 332,
     COMMITTED = 333,
     CONCURRENTLY = 334,
     CONFIGURATION = 335,
     CONFLICT = 336,
     CONNECTION = 337,
     CONSTRAINT = 338,
     CONSTRAINTS = 339,
     CONTENT_P = 340,
     CONTINUE_P = 341,
     CONVERSION_P = 342,
     COPY = 343,
     COST = 344,
     CREATE_P = 345,
     CROSS = 346,
     CSV = 347,
     CUBE = 348,
     CURRENT_P = 349,
     CURRENT_CATALOG = 350,
     CURRENT_DATE = 351,
     CURRENT_ROLE = 352,
     CURRENT_SCHEMA = 353,
     CURRENT_TIME = 354,
     CURRENT_TIMESTAMP = 355,
     CURRENT_USER = 356,
     CURSOR = 357,
     CYCLE = 358,
     DATA_P = 359,
     DATABASE = 360,
     DAY_P = 361,
     DEALLOCATE = 362,
     DEC = 363,
     DECIMAL_P = 364,
     DECLARE = 365,
     DEFAULT = 366,
     DEFAULTS = 367,
     DEFERRABLE = 368,
     DEFERRED = 369,
     DEFINER = 370,
     DELETE_P = 371,
     DELIMITER = 372,
     DELIMITERS = 373,
     DEPENDS = 374,
     DESC_P = 375,
     DETACH = 376,
     DICTIONARY = 377,
     DISABLE_P = 378,
     DISCARD = 379,
     DISTINCT = 380,
     DO = 381,
     DOCUMENT_P = 382,
     DOMAIN_P = 383,
     DOUBLE_P = 384,
     DROP = 385,
     EACH = 386,
     ELSE = 387,
     ENABLE_P = 388,
     ENCODING = 389,
     ENCRYPTED = 390,
     END_P = 391,
     ENUM_P = 392,
     ESCAPE = 393,
     EVENT = 394,
     EXCEPT = 395,
     EXCLUDE = 396,
     EXCLUDING = 397,
     EXCLUSIVE = 398,
     EXECUTE = 399,
     EXISTS = 400,
     EXPLAIN = 401,
     EXTENSION = 402,
     EXTERNAL = 403,
     EXTRACT = 404,
     FALSE_P = 405,
     FAMILY = 406,
     FETCH = 407,
     FILTER = 408,
     FIRST_P = 409,
     FLOAT_P = 410,
     FOLLOWING = 411,
     FOR = 412,
     FORCE = 413,
     FOREIGN = 414,
     FORWARD = 415,
     FREEZE = 416,
     FROM = 417,
     FULL = 418,
     FUNCTION = 419,
     FUNCTIONS = 420,
     GENERATED = 421,
     GLOBAL = 422,
     GRANT = 423,
     GRANTED = 424,
     GREATEST = 425,
     GROUP_P = 426,
     GROUPING = 427,
     HANDLER = 428,
     HAVING = 429,
     HEADER_P = 430,
     HOLD = 431,
     HOUR_P = 432,
     IDENTITY_P = 433,
     IF_P = 434,
     ILIKE = 435,
     IMMEDIATE = 436,
     IMMUTABLE = 437,
     IMPLICIT_P = 438,
     IMPORT_P = 439,
     IN_P = 440,
     INCLUDING = 441,
     INCREMENT = 442,
     INDEX = 443,
     INDEXES = 444,
     INHERIT = 445,
     INHERITS = 446,
     INITIALLY = 447,
     INLINE_P = 448,
     INNER_P = 449,
     INOUT = 450,
     INPUT_P = 451,
     INSENSITIVE = 452,
     INSERT = 453,
     INSTEAD = 454,
     INT_P = 455,
     INTEGER = 456,
     INTERSECT = 457,
     INTERVAL = 458,
     INTO = 459,
     INVOKER = 460,
     IS = 461,
     ISNULL = 462,
     ISOLATION = 463,
     JOIN = 464,
     KEY = 465,
     LABEL = 466,
     LANGUAGE = 467,
     LARGE_P = 468,
     LAST_P = 469,
     LATERAL_P = 470,
     LEADING = 471,
     LEAKPROOF = 472,
     LEAST = 473,
     LEFT = 474,
     LEVEL = 475,
     LIKE = 476,
     LIMIT = 477,
     LISTEN = 478,
     LOAD = 479,
     LOCAL = 480,
     LOCALTIME = 481,
     LOCALTIMESTAMP = 482,
     LOCATION = 483,
     LOCK_P = 484,
     LOCKED = 485,
     LOGGED = 486,
     MAPPING = 487,
     MATCH = 488,
     MATERIALIZED = 489,
     MAXVALUE = 490,
     METHOD = 491,
     MINUTE_P = 492,
     MINVALUE = 493,
     MODE = 494,
     MONTH_P = 495,
     MOVE = 496,
     NAME_P = 497,
     NAMES = 498,
     NATIONAL = 499,
     NATURAL = 500,
     NCHAR = 501,
     NEW = 502,
     NEXT = 503,
     NO = 504,
     NONE = 505,
     NOT = 506,
     NOTHING = 507,
     NOTIFY = 508,
     NOTNULL = 509,
     NOWAIT = 510,
     NULL_P = 511,
     NULLIF = 512,
     NULLS_P = 513,
     NUMERIC = 514,
     OBJECT_P = 515,
     OF = 516,
     OFF = 517,
     OFFSET = 518,
     OIDS = 519,
     OLD = 520,
     ON = 521,
     ONLY = 522,
     OPERATOR = 523,
     OPTION = 524,
     OPTIONS = 525,
     OR = 526,
     ORDER = 527,
     ORDINALITY = 528,
     OUT_P = 529,
     OUTER_P = 530,
     OVER = 531,
     OVERLAPS = 532,
     OVERLAY = 533,
     OVERRIDING = 534,
     OWNED = 535,
     OWNER = 536,
     PARALLEL = 537,
     PARSER = 538,
     PARTIAL = 539,
     PARTITION = 540,
     PASSING = 541,
     PASSWORD = 542,
     PLACING = 543,
     PLANS = 544,
     POLICY = 545,
     POSITION = 546,
     PRAGMA_P = 547,
     PRECEDING = 548,
     PRECISION = 549,
     PREPARE = 550,
     PREPARED = 551,
     PRESERVE = 552,
     PRIMARY = 553,
     PRIOR = 554,
     PRIVILEGES = 555,
     PROCEDURAL = 556,
     PROCEDURE = 557,
     PROGRAM = 558,
     PUBLICATION = 559,
     QUOTE = 560,
     RANGE = 561,
     READ_P = 562,
     REAL = 563,
     REASSIGN = 564,
     RECHECK = 565,
     RECURSIVE = 566,
     REF = 567,
     REFERENCES = 568,
     REFERENCING = 569,
     REFRESH = 570,
     REINDEX = 571,
     RELATIVE_P = 572,
     RELEASE = 573,
     RENAME = 574,
     REPEATABLE = 575,
     REPLACE = 576,
     REPLICA = 577,
     RESET = 578,
     RESTART = 579,
     RESTRICT = 580,
     RETURNING = 581,
     RETURNS = 582,
     REVOKE = 583,
     RIGHT = 584,
     ROLE = 585,
     ROLLBACK = 586,
     ROLLUP = 587,
     ROW = 588,
     ROWS = 589,
     RULE = 590,
     SAVEPOINT = 591,
     SCHEMA = 592,
     SCHEMAS = 593,
     SCROLL = 594,
     SEARCH = 595,
     SECOND_P = 596,
     SECURITY = 597,
     SELECT = 598,
     SEQUENCE = 599,
     SEQUENCES = 600,
     SERIALIZABLE = 601,
     SERVER = 602,
     SESSION = 603,
     SESSION_USER = 604,
     SET = 605,
     SETOF = 606,
     SETS = 607,
     SHARE = 608,
     SHOW = 609,
     SIMILAR = 610,
     SIMPLE = 611,
     SKIP = 612,
     SMALLINT = 613,
     SNAPSHOT = 614,
     SOME = 615,
     SQL_P = 616,
     STABLE = 617,
     STANDALONE_P = 618,
     START = 619,
     STATEMENT = 620,
     STATISTICS = 621,
     STDIN = 622,
     STDOUT = 623,
     STORAGE = 624,
     STRICT_P = 625,
     STRIP_P = 626,
     SUBSCRIPTION = 627,
     SUBSTRING = 628,
     SYMMETRIC = 629,
     SYSID = 630,
     SYSTEM_P = 631,
     TABLE = 632,
     TABLES = 633,
     TABLESAMPLE = 634,
     TABLESPACE = 635,
     TEMP = 636,
     TEMPLATE = 637,
     TEMPORARY = 638,
     TEXT_P = 639,
     THEN = 640,
     TIME = 641,
     TIMESTAMP = 642,
     TO = 643,
     TRAILING = 644,
     TRANSACTION = 645,
     TRANSFORM = 646,
     TREAT = 647,
     TRIGGER = 648,
     TRIM = 649,
     TRUE_P = 650,
     TRUNCATE = 651,
     TRUSTED = 652,
     TYPE_P = 653,
     TYPES_P = 654,
     UNBOUNDED = 655,
     UNCOMMITTED = 656,
     UNENCRYPTED = 657,
     UNION = 658,
     UNIQUE = 659,
     UNKNOWN = 660,
     UNLISTEN = 661,
     UNLOGGED = 662,
     UNTIL = 663,
     UPDATE = 664,
     USER = 665,
     USING = 666,
     VACUUM = 667,
     VALID = 668,
     VALIDATE = 669,
     VALIDATOR = 670,
     VALUE_P = 671,
     VALUES = 672,
     VARCHAR = 673,
     VARIADIC = 674,
     VARYING = 675,
     VERBOSE = 676,
     VERSION_P = 677,
     VIEW = 678,
     VIEWS = 679,
     VOLATILE = 680,
     WHEN = 681,
     WHERE = 682,
     WHITESPACE_P = 683,
     WINDOW = 684,
     WITH = 685,
     WITHIN = 686,
     WITHOUT = 687,
     WORK = 688,
     WRAPPER = 689,
     WRITE_P = 690,
     XML_P = 691,
     XMLATTRIBUTES = 692,
     XMLCONCAT = 693,
     XMLELEMENT = 694,
     XMLEXISTS = 695,
     XMLFOREST = 696,
     XMLNAMESPACES = 697,
     XMLPARSE = 698,
     XMLPI = 699,
     XMLROOT = 700,
     XMLSERIALIZE = 701,
     XMLTABLE = 702,
     YEAR_P = 703,
     YES_P = 704,
     ZONE = 705,
     NOT_LA = 706,
     NULLS_LA = 707,
     WITH_LA = 708,
     POSTFIXOP = 709,
     UMINUS = 710
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LESS_EQUALS 270
#define GREATER_EQUALS 271
#define NOT_EQUALS 272
#define ABORT_P 273
#define ABSOLUTE_P 274
#define ACCESS 275
#define ACTION 276
#define ADD_P 277
#define ADMIN 278
#define AFTER 279
#define AGGREGATE 280
#define ALL 281
#define ALSO 282
#define ALTER 283
#define ALWAYS 284
#define ANALYSE 285
#define ANALYZE 286
#define AND 287
#define ANY 288
#define ARRAY 289
#define AS 290
#define ASC_P 291
#define ASSERTION 292
#define ASSIGNMENT 293
#define ASYMMETRIC 294
#define AT 295
#define ATTACH 296
#define ATTRIBUTE 297
#define AUTHORIZATION 298
#define BACKWARD 299
#define BEFORE 300
#define BEGIN_P 301
#define BETWEEN 302
#define BIGINT 303
#define BINARY 304
#define BIT 305
#define BOOLEAN_P 306
#define BOTH 307
#define BY 308
#define CACHE 309
#define CALLED 310
#define CASCADE 311
#define CASCADED 312
#define CASE 313
#define CAST 314
#define CATALOG_P 315
#define CHAIN 316
#define CHAR_P 317
#define CHARACTER 318
#define CHARACTERISTICS 319
#define CHECK_P 320
#define CHECKPOINT 321
#define CLASS 322
#define CLOSE 323
#define CLUSTER 324
#define COALESCE 325
#define COLLATE 326
#define COLLATION 327
#define COLUMN 328
#define COLUMNS 329
#define COMMENT 330
#define COMMENTS 331
#define COMMIT 332
#define COMMITTED 333
#define CONCURRENTLY 334
#define CONFIGURATION 335
#define CONFLICT 336
#define CONNECTION 337
#define CONSTRAINT 338
#define CONSTRAINTS 339
#define CONTENT_P 340
#define CONTINUE_P 341
#define CONVERSION_P 342
#define COPY 343
#define COST 344
#define CREATE_P 345
#define CROSS 346
#define CSV 347
#define CUBE 348
#define CURRENT_P 349
#define CURRENT_CATALOG 350
#define CURRENT_DATE 351
#define CURRENT_ROLE 352
#define CURRENT_SCHEMA 353
#define CURRENT_TIME 354
#define CURRENT_TIMESTAMP 355
#define CURRENT_USER 356
#define CURSOR 357
#define CYCLE 358
#define DATA_P 359
#define DATABASE 360
#define DAY_P 361
#define DEALLOCATE 362
#define DEC 363
#define DECIMAL_P 364
#define DECLARE 365
#define DEFAULT 366
#define DEFAULTS 367
#define DEFERRABLE 368
#define DEFERRED 369
#define DEFINER 370
#define DELETE_P 371
#define DELIMITER 372
#define DELIMITERS 373
#define DEPENDS 374
#define DESC_P 375
#define DETACH 376
#define DICTIONARY 377
#define DISABLE_P 378
#define DISCARD 379
#define DISTINCT 380
#define DO 381
#define DOCUMENT_P 382
#define DOMAIN_P 383
#define DOUBLE_P 384
#define DROP 385
#define EACH 386
#define ELSE 387
#define ENABLE_P 388
#define ENCODING 389
#define ENCRYPTED 390
#define END_P 391
#define ENUM_P 392
#define ESCAPE 393
#define EVENT 394
#define EXCEPT 395
#define EXCLUDE 396
#define EXCLUDING 397
#define EXCLUSIVE 398
#define EXECUTE 399
#define EXISTS 400
#define EXPLAIN 401
#define EXTENSION 402
#define EXTERNAL 403
#define EXTRACT 404
#define FALSE_P 405
#define FAMILY 406
#define FETCH 407
#define FILTER 408
#define FIRST_P 409
#define FLOAT_P 410
#define FOLLOWING 411
#define FOR 412
#define FORCE 413
#define FOREIGN 414
#define FORWARD 415
#define FREEZE 416
#define FROM 417
#define FULL 418
#define FUNCTION 419
#define FUNCTIONS 420
#define GENERATED 421
#define GLOBAL 422
#define GRANT 423
#define GRANTED 424
#define GREATEST 425
#define GROUP_P 426
#define GROUPING 427
#define HANDLER 428
#define HAVING 429
#define HEADER_P 430
#define HOLD 431
#define HOUR_P 432
#define IDENTITY_P 433
#define IF_P 434
#define ILIKE 435
#define IMMEDIATE 436
#define IMMUTABLE 437
#define IMPLICIT_P 438
#define IMPORT_P 439
#define IN_P 440
#define INCLUDING 441
#define INCREMENT 442
#define INDEX 443
#define INDEXES 444
#define INHERIT 445
#define INHERITS 446
#define INITIALLY 447
#define INLINE_P 448
#define INNER_P 449
#define INOUT 450
#define INPUT_P 451
#define INSENSITIVE 452
#define INSERT 453
#define INSTEAD 454
#define INT_P 455
#define INTEGER 456
#define INTERSECT 457
#define INTERVAL 458
#define INTO 459
#define INVOKER 460
#define IS 461
#define ISNULL 462
#define ISOLATION 463
#define JOIN 464
#define KEY 465
#define LABEL 466
#define LANGUAGE 467
#define LARGE_P 468
#define LAST_P 469
#define LATERAL_P 470
#define LEADING 471
#define LEAKPROOF 472
#define LEAST 473
#define LEFT 474
#define LEVEL 475
#define LIKE 476
#define LIMIT 477
#define LISTEN 478
#define LOAD 479
#define LOCAL 480
#define LOCALTIME 481
#define LOCALTIMESTAMP 482
#define LOCATION 483
#define LOCK_P 484
#define LOCKED 485
#define LOGGED 486
#define MAPPING 487
#define MATCH 488
#define MATERIALIZED 489
#define MAXVALUE 490
#define METHOD 491
#define MINUTE_P 492
#define MINVALUE 493
#define MODE 494
#define MONTH_P 495
#define MOVE 496
#define NAME_P 497
#define NAMES 498
#define NATIONAL 499
#define NATURAL 500
#define NCHAR 501
#define NEW 502
#define NEXT 503
#define NO 504
#define NONE 505
#define NOT 506
#define NOTHING 507
#define NOTIFY 508
#define NOTNULL 509
#define NOWAIT 510
#define NULL_P 511
#define NULLIF 512
#define NULLS_P 513
#define NUMERIC 514
#define OBJECT_P 515
#define OF 516
#define OFF 517
#define OFFSET 518
#define OIDS 519
#define OLD 520
#define ON 521
#define ONLY 522
#define OPERATOR 523
#define OPTION 524
#define OPTIONS 525
#define OR 526
#define ORDER 527
#define ORDINALITY 528
#define OUT_P 529
#define OUTER_P 530
#define OVER 531
#define OVERLAPS 532
#define OVERLAY 533
#define OVERRIDING 534
#define OWNED 535
#define OWNER 536
#define PARALLEL 537
#define PARSER 538
#define PARTIAL 539
#define PARTITION 540
#define PASSING 541
#define PASSWORD 542
#define PLACING 543
#define PLANS 544
#define POLICY 545
#define POSITION 546
#define PRAGMA_P 547
#define PRECEDING 548
#define PRECISION 549
#define PREPARE 550
#define PREPARED 551
#define PRESERVE 552
#define PRIMARY 553
#define PRIOR 554
#define PRIVILEGES 555
#define PROCEDURAL 556
#define PROCEDURE 557
#define PROGRAM 558
#define PUBLICATION 559
#define QUOTE 560
#define RANGE 561
#define READ_P 562
#define REAL 563
#define REASSIGN 564
#define RECHECK 565
#define RECURSIVE 566
#define REF 567
#define REFERENCES 568
#define REFERENCING 569
#define REFRESH 570
#define REINDEX 571
#define RELATIVE_P 572
#define RELEASE 573
#define RENAME 574
#define REPEATABLE 575
#define REPLACE 576
#define REPLICA 577
#define RESET 578
#define RESTART 579
#define RESTRICT 580
#define RETURNING 581
#define RETURNS 582
#define REVOKE 583
#define RIGHT 584
#define ROLE 585
#define ROLLBACK 586
#define ROLLUP 587
#define ROW 588
#define ROWS 589
#define RULE 590
#define SAVEPOINT 591
#define SCHEMA 592
#define SCHEMAS 593
#define SCROLL 594
#define SEARCH 595
#define SECOND_P 596
#define SECURITY 597
#define SELECT 598
#define SEQUENCE 599
#define SEQUENCES 600
#define SERIALIZABLE 601
#define SERVER 602
#define SESSION 603
#define SESSION_USER 604
#define SET 605
#define SETOF 606
#define SETS 607
#define SHARE 608
#define SHOW 609
#define SIMILAR 610
#define SIMPLE 611
#define SKIP 612
#define SMALLINT 613
#define SNAPSHOT 614
#define SOME 615
#define SQL_P 616
#define STABLE 617
#define STANDALONE_P 618
#define START 619
#define STATEMENT 620
#define STATISTICS 621
#define STDIN 622
#define STDOUT 623
#define STORAGE 624
#define STRICT_P 625
#define STRIP_P 626
#define SUBSCRIPTION 627
#define SUBSTRING 628
#define SYMMETRIC 629
#define SYSID 630
#define SYSTEM_P 631
#define TABLE 632
#define TABLES 633
#define TABLESAMPLE 634
#define TABLESPACE 635
#define TEMP 636
#define TEMPLATE 637
#define TEMPORARY 638
#define TEXT_P 639
#define THEN 640
#define TIME 641
#define TIMESTAMP 642
#define TO 643
#define TRAILING 644
#define TRANSACTION 645
#define TRANSFORM 646
#define TREAT 647
#define TRIGGER 648
#define TRIM 649
#define TRUE_P 650
#define TRUNCATE 651
#define TRUSTED 652
#define TYPE_P 653
#define TYPES_P 654
#define UNBOUNDED 655
#define UNCOMMITTED 656
#define UNENCRYPTED 657
#define UNION 658
#define UNIQUE 659
#define UNKNOWN 660
#define UNLISTEN 661
#define UNLOGGED 662
#define UNTIL 663
#define UPDATE 664
#define USER 665
#define USING 666
#define VACUUM 667
#define VALID 668
#define VALIDATE 669
#define VALIDATOR 670
#define VALUE_P 671
#define VALUES 672
#define VARCHAR 673
#define VARIADIC 674
#define VARYING 675
#define VERBOSE 676
#define VERSION_P 677
#define VIEW 678
#define VIEWS 679
#define VOLATILE 680
#define WHEN 681
#define WHERE 682
#define WHITESPACE_P 683
#define WINDOW 684
#define WITH 685
#define WITHIN 686
#define WITHOUT 687
#define WORK 688
#define WRAPPER 689
#define WRITE_P 690
#define XML_P 691
#define XMLATTRIBUTES 692
#define XMLCONCAT 693
#define XMLELEMENT 694
#define XMLEXISTS 695
#define XMLFOREST 696
#define XMLNAMESPACES 697
#define XMLPARSE 698
#define XMLPI 699
#define XMLROOT 700
#define XMLSERIALIZE 701
#define XMLTABLE 702
#define YEAR_P 703
#define YES_P 704
#define ZONE 705
#define NOT_LA 706
#define NULLS_LA 707
#define WITH_LA 708
#define POSTFIXOP 709
#define UMINUS 710




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "parser/parse_expr.hpp"
#include "utils/datetime.hpp"

#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static PGNode *makeParamRefCast(int number, int location, PGTypeName *tpname);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1218 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1243 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  512
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   43953

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  474
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  337
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1548
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2593

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   710

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,   462,     2,     2,
     467,   468,   460,   458,   471,   459,   469,   461,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   473,   470,
     454,   456,   455,   472,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   465,     2,   466,   463,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   457,
     464
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    70,    75,    82,    87,    94,
      99,   106,   111,   118,   120,   123,   127,   130,   132,   136,
     139,   143,   145,   149,   152,   158,   162,   169,   174,   181,
     188,   195,   201,   207,   214,   224,   229,   235,   243,   250,
     255,   264,   269,   272,   277,   281,   288,   293,   296,   299,
     302,   305,   307,   310,   311,   313,   316,   319,   322,   324,
     328,   333,   336,   337,   340,   344,   347,   351,   358,   365,
     374,   381,   390,   397,   406,   413,   422,   431,   442,   451,
     462,   464,   465,   473,   475,   480,   485,   493,   496,   498,
     502,   507,   511,   512,   514,   515,   518,   522,   528,   537,
     543,   544,   550,   556,   564,   567,   568,   570,   572,   574,
     578,   581,   582,   584,   585,   587,   591,   593,   597,   599,
     603,   606,   609,   614,   620,   626,   635,   637,   638,   642,
     652,   665,   669,   670,   675,   682,   684,   687,   689,   691,
     692,   694,   697,   700,   702,   705,   708,   710,   713,   717,
     720,   723,   726,   729,   733,   737,   741,   743,   747,   749,
     750,   752,   755,   758,   761,   764,   767,   770,   773,   776,
     778,   780,   781,   791,   804,   805,   808,   810,   812,   814,
     816,   818,   820,   824,   825,   827,   830,   832,   834,   837,
     840,   844,   846,   848,   851,   854,   856,   859,   863,   869,
     872,   878,   884,   887,   891,   893,   895,   898,   901,   902,
     907,   908,   912,   917,   922,   923,   927,   930,   931,   935,
     937,   939,   941,   943,   945,   947,   949,   951,   953,   955,
     959,   963,   965,   968,   971,   974,   977,   980,   983,   984,
     988,   992,   996,   997,   999,  1002,  1004,  1007,  1010,  1013,
    1016,  1021,  1023,  1027,  1029,  1033,  1035,  1037,  1039,  1041,
    1045,  1047,  1050,  1051,  1053,  1054,  1056,  1060,  1061,  1064,
    1065,  1069,  1073,  1075,  1081,  1085,  1087,  1091,  1093,  1098,
    1104,  1110,  1117,  1121,  1129,  1134,  1146,  1148,  1152,  1155,
    1158,  1161,  1162,  1166,  1168,  1170,  1173,  1176,  1179,  1182,
    1184,  1185,  1187,  1190,  1197,  1202,  1209,  1214,  1221,  1230,
    1232,  1234,  1236,  1239,  1241,  1244,  1246,  1248,  1250,  1254,
    1258,  1262,  1266,  1269,  1272,  1274,  1278,  1280,  1282,  1284,
    1286,  1290,  1292,  1294,  1295,  1297,  1299,  1301,  1310,  1322,
    1332,  1334,  1336,  1340,  1341,  1343,  1347,  1349,  1350,  1352,
    1353,  1355,  1356,  1358,  1362,  1364,  1366,  1368,  1372,  1373,
    1376,  1379,  1380,  1383,  1384,  1386,  1387,  1389,  1391,  1393,
    1397,  1401,  1403,  1405,  1409,  1413,  1417,  1421,  1426,  1430,
    1433,  1435,  1437,  1439,  1441,  1443,  1447,  1449,  1451,  1455,
    1459,  1461,  1464,  1469,  1474,  1477,  1481,  1487,  1493,  1495,
    1497,  1507,  1517,  1519,  1522,  1527,  1532,  1537,  1540,  1543,
    1547,  1549,  1553,  1560,  1563,  1564,  1568,  1572,  1577,  1582,
    1587,  1592,  1596,  1599,  1601,  1603,  1604,  1606,  1608,  1609,
    1611,  1617,  1619,  1620,  1622,  1623,  1627,  1629,  1633,  1638,
    1642,  1644,  1646,  1647,  1650,  1653,  1654,  1657,  1660,  1662,
    1664,  1666,  1667,  1670,  1675,  1681,  1686,  1689,  1693,  1695,
    1697,  1699,  1701,  1704,  1707,  1709,  1711,  1713,  1715,  1717,
    1719,  1723,  1724,  1726,  1730,  1732,  1734,  1737,  1740,  1741,
    1743,  1747,  1749,  1750,  1752,  1755,  1759,  1762,  1767,  1770,
    1774,  1777,  1778,  1780,  1783,  1784,  1789,  1795,  1798,  1799,
    1801,  1805,  1808,  1812,  1815,  1819,  1822,  1826,  1828,  1833,
    1837,  1842,  1848,  1853,  1859,  1864,  1870,  1873,  1878,  1880,
    1882,  1883,  1885,  1890,  1896,  1901,  1902,  1905,  1908,  1911,
    1913,  1915,  1916,  1921,  1924,  1926,  1929,  1932,  1937,  1944,
    1949,  1950,  1953,  1960,  1963,  1965,  1969,  1974,  1975,  1978,
    1979,  1982,  1983,  1985,  1989,  1993,  1996,  1997,  2000,  2004,
    2010,  2017,  2020,  2024,  2028,  2033,  2034,  2036,  2038,  2040,
    2042,  2044,  2047,  2052,  2054,  2056,  2058,  2060,  2063,  2067,
    2071,  2072,  2074,  2076,  2078,  2080,  2082,  2085,  2088,  2091,
    2094,  2097,  2099,  2103,  2104,  2106,  2108,  2110,  2112,  2118,
    2121,  2123,  2125,  2127,  2129,  2134,  2136,  2139,  2142,  2144,
    2148,  2152,  2155,  2157,  2158,  2164,  2167,  2173,  2176,  2178,
    2182,  2186,  2187,  2189,  2191,  2193,  2195,  2197,  2199,  2203,
    2207,  2211,  2215,  2219,  2223,  2227,  2228,  2230,  2235,  2237,
    2241,  2245,  2251,  2254,  2257,  2261,  2265,  2269,  2273,  2277,
    2281,  2285,  2289,  2293,  2297,  2301,  2305,  2309,  2312,  2315,
    2319,  2323,  2326,  2329,  2333,  2339,  2344,  2351,  2355,  2361,
    2366,  2373,  2378,  2385,  2391,  2399,  2403,  2406,  2411,  2415,
    2418,  2422,  2426,  2431,  2435,  2440,  2444,  2449,  2455,  2462,
    2469,  2477,  2484,  2492,  2499,  2507,  2511,  2516,  2521,  2528,
    2530,  2532,  2536,  2539,  2542,  2546,  2550,  2554,  2558,  2562,
    2566,  2570,  2574,  2578,  2582,  2586,  2590,  2594,  2597,  2600,
    2606,  2613,  2620,  2628,  2630,  2632,  2635,  2638,  2643,  2645,
    2647,  2649,  2652,  2655,  2659,  2665,  2672,  2681,  2688,  2695,
    2700,  2705,  2707,  2709,  2711,  2717,  2719,  2721,  2726,  2728,
    2733,  2735,  2740,  2742,  2747,  2749,  2751,  2753,  2755,  2757,
    2759,  2766,  2771,  2776,  2781,  2786,  2793,  2799,  2805,  2811,
    2816,  2823,  2828,  2833,  2838,  2844,  2845,  2851,  2852,  2855,
    2856,  2858,  2862,  2866,  2869,  2872,  2873,  2880,  2882,  2883,
    2887,  2888,  2891,  2894,  2895,  2897,  2902,  2905,  2908,  2911,
    2914,  2917,  2922,  2926,  2932,  2934,  2936,  2938,  2940,  2942,
    2944,  2946,  2948,  2950,  2952,  2954,  2956,  2958,  2960,  2962,
    2964,  2966,  2968,  2973,  2975,  2980,  2982,  2987,  2989,  2992,
    2994,  2997,  2999,  3003,  3005,  3009,  3011,  3015,  3017,  3021,
    3025,  3027,  3031,  3035,  3036,  3038,  3040,  3042,  3044,  3046,
    3048,  3050,  3052,  3057,  3061,  3064,  3068,  3069,  3073,  3077,
    3080,  3083,  3085,  3086,  3089,  3092,  3096,  3099,  3101,  3103,
    3107,  3113,  3115,  3118,  3123,  3126,  3127,  3129,  3130,  3132,
    3135,  3138,  3141,  3145,  3151,  3153,  3154,  3156,  3159,  3160,
    3163,  3165,  3166,  3168,  3169,  3171,  3175,  3179,  3182,  3184,
    3186,  3188,  3192,  3194,  3197,  3199,  3203,  3205,  3207,  3209,
    3212,  3214,  3216,  3218,  3220,  3222,  3225,  3232,  3235,  3239,
    3245,  3252,  3254,  3256,  3258,  3260,  3262,  3264,  3266,  3268,
    3270,  3272,  3274,  3276,  3279,  3282,  3286,  3290,  3291,  3293,
    3295,  3297,  3299,  3301,  3303,  3309,  3313,  3314,  3316,  3318,
    3320,  3322,  3327,  3335,  3338,  3339,  3341,  3343,  3345,  3347,
    3361,  3378,  3380,  3383,  3384,  3386,  3387,  3389,  3390,  3393,
    3394,  3396,  3397,  3404,  3413,  3420,  3429,  3436,  3445,  3447,
    3450,  3455,  3459,  3465,  3467,  3468,  3470,  3472,  3473,  3475,
    3477,  3479,  3481,  3483,  3485,  3487,  3489,  3491,  3493,  3495,
    3497,  3501,  3503,  3505,  3507,  3509,  3511,  3513,  3516,  3518,
    3520,  3523,  3527,  3531,  3533,  3537,  3541,  3544,  3548,  3552,
    3556,  3560,  3562,  3564,  3566,  3568,  3572,  3578,  3580,  3582,
    3584,  3586,  3590,  3593,  3595,  3600,  3606,  3612,  3617,  3624,
    3626,  3628,  3630,  3632,  3634,  3636,  3637,  3639,  3643,  3645,
    3646,  3654,  3656,  3659,  3663,  3666,  3667,  3670,  3671,  3674,
    3679,  3682,  3684,  3686,  3688,  3691,  3695,  3698,  3702,  3707,
    3710,  3712,  3716,  3726,  3738,  3751,  3766,  3770,  3775,  3780,
    3781,  3789,  3800,  3803,  3807,  3808,  3813,  3815,  3817,  3819,
    3821,  3823,  3825,  3827,  3829,  3831,  3833,  3835,  3837,  3839,
    3841,  3843,  3845,  3847,  3849,  3851,  3853,  3855,  3857,  3859,
    3861,  3863,  3865,  3867,  3869,  3871,  3873,  3875,  3877,  3879,
    3881,  3883,  3885,  3887,  3889,  3891,  3893,  3895,  3897,  3899,
    3901,  3903,  3905,  3907,  3909,  3911,  3913,  3915,  3917,  3919,
    3921,  3923,  3925,  3927,  3929,  3931,  3933,  3935,  3937,  3939,
    3941,  3943,  3945,  3947,  3949,  3951,  3953,  3955,  3957,  3959,
    3961,  3963,  3965,  3967,  3969,  3971,  3973,  3975,  3977,  3979,
    3981,  3983,  3985,  3987,  3989,  3991,  3993,  3995,  3997,  3999,
    4001,  4003,  4005,  4007,  4009,  4011,  4013,  4015,  4017,  4019,
    4021,  4023,  4025,  4027,  4029,  4031,  4033,  4035,  4037,  4039,
    4041,  4043,  4045,  4047,  4049,  4051,  4053,  4055,  4057,  4059,
    4061,  4063,  4065,  4067,  4069,  4071,  4073,  4075,  4077,  4079,
    4081,  4083,  4085,  4087,  4089,  4091,  4093,  4095,  4097,  4099,
    4101,  4103,  4105,  4107,  4109,  4111,  4113,  4115,  4117,  4119,
    4121,  4123,  4125,  4127,  4129,  4131,  4133,  4135,  4137,  4139,
    4141,  4143,  4145,  4147,  4149,  4151,  4153,  4155,  4157,  4159,
    4161,  4163,  4165,  4167,  4169,  4171,  4173,  4175,  4177,  4179,
    4181,  4183,  4185,  4187,  4189,  4191,  4193,  4195,  4197,  4199,
    4201,  4203,  4205,  4207,  4209,  4211,  4213,  4215,  4217,  4219,
    4221,  4223,  4225,  4227,  4229,  4231,  4233,  4235,  4237,  4239,
    4241,  4243,  4245,  4247,  4249,  4251,  4253,  4255,  4257,  4259,
    4261,  4263,  4265,  4267,  4269,  4271,  4273,  4275,  4277,  4279,
    4281,  4283,  4285,  4287,  4289,  4291,  4293,  4295,  4297,  4299,
    4301,  4303,  4305,  4307,  4309,  4311,  4313,  4315,  4317,  4319,
    4321,  4323,  4325,  4327,  4329,  4331,  4333,  4335,  4337,  4339,
    4341,  4343,  4345,  4347,  4349,  4351,  4353,  4355,  4357,  4359,
    4361,  4363,  4365,  4367,  4369,  4371,  4373,  4375,  4377,  4379,
    4381,  4383,  4385,  4387,  4389,  4391,  4393,  4395,  4397,  4399,
    4401,  4403,  4405,  4407,  4409,  4411,  4413,  4415,  4417,  4419,
    4421,  4423,  4425,  4427,  4429,  4431,  4433,  4435,  4437,  4439,
    4441,  4443,  4445,  4447,  4449,  4451,  4453,  4455,  4457,  4459,
    4461,  4463,  4465,  4467,  4469,  4471,  4473,  4475,  4477,  4479,
    4481,  4483,  4485,  4487,  4489,  4491,  4493,  4495,  4497,  4499,
    4501,  4503,  4505,  4507,  4509,  4511,  4513,  4515,  4517,  4519,
    4521,  4523,  4525,  4527,  4529,  4531,  4533,  4535,  4537,  4539,
    4541,  4543,  4545,  4547,  4549,  4551,  4553,  4555,  4557,  4559,
    4561,  4563,  4565,  4567,  4569,  4571,  4573,  4575,  4577,  4579,
    4581,  4583,  4585,  4587,  4589,  4591,  4593,  4595,  4597,  4599,
    4601,  4603,  4605,  4607,  4609,  4611,  4613,  4615,  4617,  4619,
    4621,  4623,  4625,  4627,  4629,  4631,  4633,  4635,  4637,  4639,
    4641,  4643,  4645,  4647,  4649,  4651,  4653,  4655,  4657,  4659,
    4661,  4663,  4665,  4667,  4669,  4671,  4673,  4675,  4677
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     475,     0,    -1,   476,    -1,   476,   470,   477,    -1,   477,
      -1,   766,    -1,   515,    -1,   478,    -1,   796,    -1,   767,
      -1,   577,    -1,   804,    -1,   756,    -1,   511,    -1,   524,
      -1,   489,    -1,   792,    -1,   570,    -1,   513,    -1,   768,
      -1,   759,    -1,   492,    -1,   785,    -1,   510,    -1,   753,
      -1,   490,    -1,   594,    -1,   522,    -1,   576,    -1,   787,
      -1,   797,    -1,   779,    -1,   800,    -1,   802,    -1,    -1,
      28,   377,   647,   486,    -1,    28,   377,   179,   145,   647,
     486,    -1,    28,   188,   738,   486,    -1,    28,   188,   179,
     145,   738,   486,    -1,    28,   344,   738,   486,    -1,    28,
     344,   179,   145,   738,   486,    -1,    28,   423,   738,   486,
      -1,    28,   423,   179,   145,   738,   486,    -1,   481,    -1,
     479,   481,    -1,   350,   111,   682,    -1,   130,   111,    -1,
     324,    -1,   324,   517,   518,    -1,   350,   519,    -1,   350,
     166,   569,    -1,   485,    -1,   482,   471,   485,    -1,    22,
     549,    -1,    22,   179,   251,   145,   549,    -1,    22,    73,
     549,    -1,    22,    73,   179,   251,   145,   549,    -1,    28,
     491,   746,   480,    -1,    28,   491,   746,   130,   251,   256,
      -1,    28,   491,   746,   350,   251,   256,    -1,    28,   491,
     746,   350,   366,   521,    -1,    28,   491,   746,   350,   537,
      -1,    28,   491,   746,   323,   537,    -1,    28,   491,   746,
     350,   369,   746,    -1,    28,   491,   746,    22,   166,   569,
      35,   178,   527,    -1,    28,   491,   746,   479,    -1,    28,
     491,   746,   130,   178,    -1,    28,   491,   746,   130,   178,
     179,   145,    -1,   130,   491,   179,   145,   746,   574,    -1,
     130,   491,   746,   574,    -1,    28,   491,   746,   488,   398,
     659,   658,   484,    -1,    28,   491,   746,   487,    -1,    22,
     539,    -1,    28,    83,   740,   525,    -1,   414,    83,   740,
      -1,   130,    83,   179,   145,   740,   574,    -1,   130,    83,
     740,   574,    -1,   350,   231,    -1,   350,   407,    -1,   350,
     537,    -1,   323,   537,    -1,   487,    -1,   411,   682,    -1,
      -1,   532,    -1,   350,   532,    -1,    22,   532,    -1,   130,
     547,    -1,   483,    -1,   486,   471,   483,    -1,   270,   467,
     482,   468,    -1,   350,   104,    -1,    -1,   107,   740,    -1,
     107,   295,   740,    -1,   107,    26,    -1,   107,   295,    26,
      -1,    28,   337,   740,   319,   388,   740,    -1,    28,   377,
     647,   319,   388,   740,    -1,    28,   377,   179,   145,   647,
     319,   388,   740,    -1,    28,   344,   738,   319,   388,   740,
      -1,    28,   344,   179,   145,   738,   319,   388,   740,    -1,
      28,   423,   738,   319,   388,   740,    -1,    28,   423,   179,
     145,   738,   319,   388,   740,    -1,    28,   188,   738,   319,
     388,   740,    -1,    28,   188,   179,   145,   738,   319,   388,
     740,    -1,    28,   377,   647,   319,   491,   740,   388,   740,
      -1,    28,   377,   179,   145,   647,   319,   491,   740,   388,
     740,    -1,    28,   377,   647,   319,    83,   740,   388,   740,
      -1,    28,   377,   179,   145,   647,   319,    83,   740,   388,
     740,    -1,    73,    -1,    -1,   496,   198,   204,   494,   493,
     499,   501,    -1,   594,    -1,   279,   502,   416,   594,    -1,
     467,   506,   468,   594,    -1,   467,   506,   468,   279,   502,
     416,   594,    -1,   111,   417,    -1,   738,    -1,   738,    35,
     746,    -1,   467,   508,   468,   655,    -1,   266,    83,   740,
      -1,    -1,   599,    -1,    -1,   746,   732,    -1,   509,   456,
     682,    -1,   467,   503,   468,   456,   682,    -1,   266,    81,
     495,   126,   409,   350,   507,   655,    -1,   266,    81,   495,
     126,   252,    -1,    -1,   746,   504,   505,   612,   613,    -1,
     687,   504,   505,   612,   613,    -1,   467,   682,   468,   504,
     505,   612,   613,    -1,   326,   735,    -1,    -1,   410,    -1,
     376,    -1,   509,    -1,   503,   471,   509,    -1,    71,   748,
      -1,    -1,   748,    -1,    -1,   497,    -1,   506,   471,   497,
      -1,   498,    -1,   507,   471,   498,    -1,   500,    -1,   508,
     471,   500,    -1,   746,   732,    -1,   292,   746,    -1,   292,
     746,   456,   784,    -1,   292,   746,   467,   710,   468,    -1,
      90,   568,   344,   738,   512,    -1,    90,   568,   344,   179,
     251,   145,   738,   512,    -1,   516,    -1,    -1,   144,   740,
     514,    -1,    90,   568,   377,   806,    35,   144,   740,   514,
     805,    -1,    90,   568,   377,   179,   251,   145,   806,    35,
     144,   740,   514,   805,    -1,   467,   709,   468,    -1,    -1,
      28,   344,   738,   516,    -1,    28,   344,   179,   145,   738,
     516,    -1,   519,    -1,   516,   519,    -1,   430,    -1,   453,
      -1,    -1,     4,    -1,   458,     4,    -1,   459,     4,    -1,
     521,    -1,    35,   661,    -1,    54,   518,    -1,   103,    -1,
     249,   103,    -1,   187,   520,   518,    -1,   235,   518,    -1,
     238,   518,    -1,   249,   235,    -1,   249,   238,    -1,   280,
      53,   748,    -1,   344,   242,   748,    -1,   364,   517,   518,
      -1,   324,    -1,   324,   517,   518,    -1,    53,    -1,    -1,
     744,    -1,   458,   744,    -1,   459,   744,    -1,    18,   523,
      -1,    46,   523,    -1,   364,   523,    -1,    77,   523,    -1,
     136,   523,    -1,   331,   523,    -1,   433,    -1,   390,    -1,
      -1,    90,   568,   377,   738,   467,   556,   468,   544,   536,
      -1,    90,   568,   377,   179,   251,   145,   738,   467,   556,
     468,   544,   536,    -1,    -1,   525,   548,    -1,   563,    -1,
     810,    -1,   706,    -1,   518,    -1,   745,    -1,   250,    -1,
     467,   516,   468,    -1,    -1,   745,    -1,   249,    21,    -1,
     325,    -1,    56,    -1,   350,   256,    -1,   350,   111,    -1,
      83,   740,   531,    -1,   531,    -1,   543,    -1,    71,   748,
      -1,   251,   256,    -1,   256,    -1,   404,   555,    -1,   298,
     210,   555,    -1,    65,   467,   682,   468,   538,    -1,   111,
     683,    -1,   166,   569,    35,   178,   527,    -1,   313,   738,
     558,   566,   534,    -1,   547,   528,    -1,   266,   409,   529,
      -1,   533,    -1,   560,    -1,   533,   560,    -1,   560,   533,
      -1,    -1,   270,   467,   550,   468,    -1,    -1,   266,    77,
     130,    -1,   266,    77,   116,   334,    -1,   266,    77,   297,
     334,    -1,    -1,   467,   541,   468,    -1,   249,   190,    -1,
      -1,    83,   740,   564,    -1,   564,    -1,    76,    -1,    84,
      -1,   112,    -1,   178,    -1,   189,    -1,   366,    -1,   369,
      -1,    26,    -1,   561,    -1,   541,   471,   561,    -1,   411,
     188,   552,    -1,   113,    -1,   251,   113,    -1,   192,   114,
      -1,   192,   181,    -1,   430,   537,    -1,   430,   264,    -1,
     432,   264,    -1,    -1,   467,   551,   468,    -1,   546,   186,
     540,    -1,   546,   142,   540,    -1,    -1,   752,    -1,   251,
     113,    -1,   113,    -1,   192,   181,    -1,   192,   114,    -1,
     251,   413,    -1,   249,   190,    -1,   746,   659,   535,   559,
      -1,   532,    -1,   550,   471,   532,    -1,   554,    -1,   551,
     471,   554,    -1,   746,    -1,   549,    -1,   567,    -1,   539,
      -1,   752,   456,   526,    -1,   752,    -1,   430,   545,    -1,
      -1,   565,    -1,    -1,   746,    -1,   467,   562,   468,    -1,
      -1,   559,   530,    -1,    -1,   266,   116,   529,    -1,   752,
     456,   526,    -1,   752,    -1,   752,   469,   752,   456,   526,
      -1,   752,   469,   752,    -1,   557,    -1,   562,   471,   557,
      -1,   659,    -1,   747,   749,   462,   398,    -1,   351,   747,
     749,   462,   398,    -1,    65,   467,   682,   468,   525,    -1,
     404,   467,   562,   468,   555,   525,    -1,   404,   542,   525,
      -1,   298,   210,   467,   562,   468,   555,   525,    -1,   298,
     210,   542,   525,    -1,   159,   210,   467,   562,   468,   313,
     738,   558,   566,   534,   525,    -1,   553,    -1,   565,   471,
     553,    -1,   233,   163,    -1,   233,   284,    -1,   233,   356,
      -1,    -1,   221,   738,   546,    -1,   383,    -1,   381,    -1,
     225,   383,    -1,   225,   381,    -1,   167,   383,    -1,   167,
     381,    -1,   407,    -1,    -1,    29,    -1,    53,   111,    -1,
     130,   571,   179,   145,   573,   574,    -1,   130,   571,   573,
     574,    -1,   130,   572,   179,   145,   739,   574,    -1,   130,
     572,   739,   574,    -1,   130,   575,   740,   266,   748,   574,
      -1,   130,   575,   179,   145,   740,   266,   748,   574,    -1,
     377,    -1,   344,    -1,   423,    -1,   234,   423,    -1,   188,
      -1,   159,   377,    -1,    72,    -1,    87,    -1,   366,    -1,
     384,   340,   283,    -1,   384,   340,   122,    -1,   384,   340,
     382,    -1,   384,   340,    80,    -1,    20,   236,    -1,   139,
     393,    -1,   147,    -1,   159,   104,   434,    -1,   304,    -1,
     337,    -1,   347,    -1,   748,    -1,   573,   471,   748,    -1,
      56,    -1,   325,    -1,    -1,   290,    -1,   335,    -1,   393,
      -1,   496,   409,   793,   350,   507,   637,   794,   501,    -1,
      88,   589,   738,   558,   587,   578,   583,   592,   579,   517,
     584,    -1,    88,   467,   755,   468,   388,   583,   592,   517,
     584,    -1,   162,    -1,   388,    -1,   581,   118,   745,    -1,
      -1,   591,    -1,   580,   471,   591,    -1,   411,    -1,    -1,
      35,    -1,    -1,   303,    -1,    -1,   588,    -1,   467,   593,
     468,    -1,   776,    -1,   518,    -1,   460,    -1,   467,   580,
     468,    -1,    -1,   752,   585,    -1,   430,   264,    -1,    -1,
     588,   590,    -1,    -1,    49,    -1,    -1,    49,    -1,   264,
      -1,   161,    -1,   117,   582,   745,    -1,   256,   582,   745,
      -1,    92,    -1,   175,    -1,   305,   582,   745,    -1,   138,
     582,   745,    -1,   158,   305,   562,    -1,   158,   305,   460,
      -1,   158,   251,   256,   562,    -1,   158,   256,   562,    -1,
     134,   745,    -1,   776,    -1,   745,    -1,   367,    -1,   368,
      -1,   586,    -1,   593,   471,   586,    -1,   596,    -1,   595,
      -1,   467,   596,   468,    -1,   467,   595,   468,    -1,   598,
      -1,   597,   609,    -1,   597,   608,   629,   615,    -1,   597,
     608,   614,   630,    -1,   599,   597,    -1,   599,   597,   609,
      -1,   599,   597,   608,   629,   615,    -1,   599,   597,   608,
     614,   630,    -1,   598,    -1,   595,    -1,   343,   607,   734,
     602,   637,   655,   624,   628,   691,    -1,   343,   606,   735,
     602,   637,   655,   624,   628,   691,    -1,   636,    -1,   377,
     647,    -1,   597,   403,   605,   597,    -1,   597,   202,   605,
     597,    -1,   597,   140,   605,   597,    -1,   430,   600,    -1,
     453,   600,    -1,   430,   311,   600,    -1,   601,    -1,   600,
     471,   601,    -1,   740,   750,    35,   467,   755,   468,    -1,
     204,   603,    -1,    -1,   383,   604,   738,    -1,   381,   604,
     738,    -1,   225,   383,   604,   738,    -1,   225,   381,   604,
     738,    -1,   167,   383,   604,   738,    -1,   167,   381,   604,
     738,    -1,   407,   604,   738,    -1,   377,   738,    -1,   738,
      -1,   377,    -1,    -1,    26,    -1,   125,    -1,    -1,   125,
      -1,   125,   266,   467,   709,   468,    -1,    26,    -1,    -1,
     609,    -1,    -1,   272,    53,   610,    -1,   611,    -1,   610,
     471,   611,    -1,   682,   411,   706,   613,    -1,   682,   612,
     613,    -1,    36,    -1,   120,    -1,    -1,   452,   154,    -1,
     452,   214,    -1,    -1,   616,   617,    -1,   617,   616,    -1,
     616,    -1,   617,    -1,   614,    -1,    -1,   222,   618,    -1,
     222,   618,   471,   619,    -1,   152,   623,   620,   622,   267,
      -1,   152,   623,   622,   267,    -1,   263,   619,    -1,   263,
     620,   622,    -1,   682,    -1,    26,    -1,   682,    -1,   684,
      -1,   458,   621,    -1,   459,   621,    -1,   744,    -1,     4,
      -1,   333,    -1,   334,    -1,   154,    -1,   248,    -1,   171,
      53,   625,    -1,    -1,   626,    -1,   625,   471,   626,    -1,
     682,    -1,   627,    -1,   467,   468,    -1,   174,   682,    -1,
      -1,   631,    -1,   157,   307,   267,    -1,   629,    -1,    -1,
     632,    -1,   631,   632,    -1,   633,   634,   635,    -1,   157,
     409,    -1,   157,   249,   210,   409,    -1,   157,   353,    -1,
     157,   210,   353,    -1,   261,   737,    -1,    -1,   255,    -1,
     357,   230,    -1,    -1,   417,   467,   709,   468,    -1,   636,
     471,   467,   709,   468,    -1,   162,   638,    -1,    -1,   639,
      -1,   638,   471,   639,    -1,   647,   642,    -1,   647,   642,
     648,    -1,   650,   643,    -1,   215,   650,   643,    -1,   595,
     642,    -1,   215,   595,   642,    -1,   640,    -1,   467,   640,
     468,   641,    -1,   467,   640,   468,    -1,   639,    91,   209,
     639,    -1,   639,   644,   209,   639,   646,    -1,   639,   209,
     639,   646,    -1,   639,   245,   644,   209,   639,    -1,   639,
     245,   209,   639,    -1,    35,   746,   467,   739,   468,    -1,
      35,   746,    -1,   746,   467,   739,   468,    -1,   746,    -1,
     641,    -1,    -1,   641,    -1,    35,   467,   656,   468,    -1,
      35,   746,   467,   656,   468,    -1,   746,   467,   656,   468,
      -1,    -1,   163,   645,    -1,   219,   645,    -1,   329,   645,
      -1,   194,    -1,   275,    -1,    -1,   411,   467,   739,   468,
      -1,   266,   682,    -1,   738,    -1,   738,   460,    -1,   267,
     738,    -1,   267,   467,   738,   468,    -1,   379,   742,   467,
     709,   468,   649,    -1,   320,   467,   682,   468,    -1,    -1,
     687,   654,    -1,   334,   162,   467,   652,   468,   654,    -1,
     687,   653,    -1,   651,    -1,   652,   471,   651,    -1,    35,
     467,   656,   468,    -1,    -1,   453,   273,    -1,    -1,   427,
     682,    -1,    -1,   657,    -1,   656,   471,   657,    -1,   746,
     659,   658,    -1,    71,   748,    -1,    -1,   661,   660,    -1,
     351,   661,   660,    -1,   661,    34,   465,   744,   466,    -1,
     351,   661,    34,   465,   744,   466,    -1,   661,    34,    -1,
     351,   661,    34,    -1,   660,   465,   466,    -1,   660,   465,
     744,   466,    -1,    -1,   663,    -1,   665,    -1,   667,    -1,
     671,    -1,   677,    -1,   678,   680,    -1,   678,   467,   744,
     468,    -1,   665,    -1,   668,    -1,   672,    -1,   677,    -1,
     747,   664,    -1,   747,   749,   664,    -1,   467,   709,   468,
      -1,    -1,   200,    -1,   201,    -1,   358,    -1,    48,    -1,
     308,    -1,   155,   666,    -1,   129,   294,    -1,   109,   664,
      -1,   108,   664,    -1,   259,   664,    -1,    51,    -1,   467,
     744,   468,    -1,    -1,   669,    -1,   670,    -1,   669,    -1,
     670,    -1,    50,   676,   467,   709,   468,    -1,    50,   676,
      -1,   673,    -1,   674,    -1,   673,    -1,   674,    -1,   675,
     467,   744,   468,    -1,   675,    -1,    63,   676,    -1,    62,
     676,    -1,   418,    -1,   244,    63,   676,    -1,   244,    62,
     676,    -1,   246,   676,    -1,   420,    -1,    -1,   387,   467,
     744,   468,   679,    -1,   387,   679,    -1,   386,   467,   744,
     468,   679,    -1,   386,   679,    -1,   203,    -1,   453,   386,
     450,    -1,   432,   386,   450,    -1,    -1,   448,    -1,   240,
      -1,   106,    -1,   177,    -1,   237,    -1,   681,    -1,   448,
     388,   240,    -1,   106,   388,   177,    -1,   106,   388,   237,
      -1,   106,   388,   681,    -1,   177,   388,   237,    -1,   177,
     388,   681,    -1,   237,   388,   681,    -1,    -1,   341,    -1,
     341,   467,   744,   468,    -1,   684,    -1,   682,    11,   659,
      -1,   682,    71,   748,    -1,   682,    40,   386,   450,   682,
      -1,   458,   682,    -1,   459,   682,    -1,   682,   458,   682,
      -1,   682,   459,   682,    -1,   682,   460,   682,    -1,   682,
     461,   682,    -1,   682,   462,   682,    -1,   682,   463,   682,
      -1,   682,   454,   682,    -1,   682,   455,   682,    -1,   682,
     456,   682,    -1,   682,    15,   682,    -1,   682,    16,   682,
      -1,   682,    17,   682,    -1,   682,   705,   682,    -1,   705,
     682,    -1,   682,   705,    -1,   682,    32,   682,    -1,   682,
     271,   682,    -1,   251,   682,    -1,   451,   682,    -1,   682,
     221,   682,    -1,   682,   221,   682,   138,   682,    -1,   682,
     451,   221,   682,    -1,   682,   451,   221,   682,   138,   682,
      -1,   682,   180,   682,    -1,   682,   180,   682,   138,   682,
      -1,   682,   451,   180,   682,    -1,   682,   451,   180,   682,
     138,   682,    -1,   682,   355,   388,   682,    -1,   682,   355,
     388,   682,   138,   682,    -1,   682,   451,   355,   388,   682,
      -1,   682,   451,   355,   388,   682,   138,   682,    -1,   682,
     206,   256,    -1,   682,   207,    -1,   682,   206,   251,   256,
      -1,   682,   251,   256,    -1,   682,   254,    -1,   701,   277,
     701,    -1,   682,   206,   395,    -1,   682,   206,   251,   395,
      -1,   682,   206,   150,    -1,   682,   206,   251,   150,    -1,
     682,   206,   405,    -1,   682,   206,   251,   405,    -1,   682,
     206,   125,   162,   682,    -1,   682,   206,   251,   125,   162,
     682,    -1,   682,   206,   261,   467,   712,   468,    -1,   682,
     206,   251,   261,   467,   712,   468,    -1,   682,    47,   733,
     683,    32,   682,    -1,   682,   451,    47,   733,   683,    32,
     682,    -1,   682,    47,   374,   683,    32,   682,    -1,   682,
     451,    47,   374,   683,    32,   682,    -1,   682,   185,   722,
      -1,   682,   451,   185,   722,    -1,   682,   707,   702,   595,
      -1,   682,   707,   702,   467,   682,   468,    -1,   111,    -1,
     684,    -1,   683,    11,   659,    -1,   458,   683,    -1,   459,
     683,    -1,   683,   458,   683,    -1,   683,   459,   683,    -1,
     683,   460,   683,    -1,   683,   461,   683,    -1,   683,   462,
     683,    -1,   683,   463,   683,    -1,   683,   454,   683,    -1,
     683,   455,   683,    -1,   683,   456,   683,    -1,   683,    15,
     683,    -1,   683,    16,   683,    -1,   683,    17,   683,    -1,
     683,   705,   683,    -1,   705,   683,    -1,   683,   705,    -1,
     683,   206,   125,   162,   683,    -1,   683,   206,   251,   125,
     162,   683,    -1,   683,   206,   261,   467,   712,   468,    -1,
     683,   206,   251,   261,   467,   712,   468,    -1,   728,    -1,
     743,    -1,   472,   732,    -1,    10,   732,    -1,   467,   682,
     468,   732,    -1,   723,    -1,   686,    -1,   595,    -1,   595,
     731,    -1,   145,   595,    -1,   742,   467,   468,    -1,   742,
     467,   710,   608,   468,    -1,   742,   467,   419,   711,   608,
     468,    -1,   742,   467,   710,   471,   419,   711,   608,   468,
      -1,   742,   467,    26,   710,   608,   468,    -1,   742,   467,
     125,   710,   608,   468,    -1,   742,   467,   460,   468,    -1,
     685,   689,   690,   694,    -1,   688,    -1,   685,    -1,   688,
      -1,    72,   157,   467,   682,   468,    -1,    96,    -1,    99,
      -1,    99,   467,   744,   468,    -1,   100,    -1,   100,   467,
     744,   468,    -1,   226,    -1,   226,   467,   744,   468,    -1,
     227,    -1,   227,   467,   744,   468,    -1,    97,    -1,   101,
      -1,   349,    -1,   410,    -1,    95,    -1,    98,    -1,    59,
     467,   682,    35,   659,   468,    -1,   149,   467,   713,   468,
      -1,   278,   467,   715,   468,    -1,   291,   467,   717,   468,
      -1,   373,   467,   718,   468,    -1,   392,   467,   682,    35,
     659,   468,    -1,   394,   467,    52,   721,   468,    -1,   394,
     467,   216,   721,   468,    -1,   394,   467,   389,   721,   468,
      -1,   394,   467,   721,   468,    -1,   257,   467,   682,   471,
     682,   468,    -1,    70,   467,   709,   468,    -1,   170,   467,
     709,   468,    -1,   218,   467,   709,   468,    -1,   431,   171,
     467,   609,   468,    -1,    -1,   153,   467,   427,   682,   468,
      -1,    -1,   429,   692,    -1,    -1,   693,    -1,   692,   471,
     693,    -1,   746,    35,   695,    -1,   276,   695,    -1,   276,
     746,    -1,    -1,   467,   696,   697,   608,   698,   468,    -1,
     746,    -1,    -1,   285,    53,   709,    -1,    -1,   306,   699,
      -1,   334,   699,    -1,    -1,   700,    -1,    47,   700,    32,
     700,    -1,   400,   293,    -1,   400,   156,    -1,    94,   333,
      -1,   682,   293,    -1,   682,   156,    -1,   333,   467,   709,
     468,    -1,   333,   467,   468,    -1,   467,   709,   471,   682,
     468,    -1,    33,    -1,   360,    -1,    26,    -1,     8,    -1,
     704,    -1,   458,    -1,   459,    -1,   460,    -1,   461,    -1,
     462,    -1,   463,    -1,   454,    -1,   455,    -1,   456,    -1,
      15,    -1,    16,    -1,    17,    -1,     8,    -1,   268,   467,
     708,   468,    -1,   703,    -1,   268,   467,   708,   468,    -1,
     703,    -1,   268,   467,   708,   468,    -1,   221,    -1,   451,
     221,    -1,   180,    -1,   451,   180,    -1,   703,    -1,   746,
     469,   708,    -1,   682,    -1,   709,   471,   682,    -1,   711,
      -1,   710,   471,   711,    -1,   682,    -1,   751,    13,   682,
      -1,   751,    14,   682,    -1,   659,    -1,   712,   471,   659,
      -1,   714,   162,   682,    -1,    -1,     3,    -1,   448,    -1,
     240,    -1,   106,    -1,   177,    -1,   237,    -1,   341,    -1,
     745,    -1,   682,   716,   719,   720,    -1,   682,   716,   719,
      -1,   288,   682,    -1,   683,   185,   683,    -1,    -1,   682,
     719,   720,    -1,   682,   720,   719,    -1,   682,   719,    -1,
     682,   720,    -1,   709,    -1,    -1,   162,   682,    -1,   157,
     682,    -1,   682,   162,   709,    -1,   162,   709,    -1,   709,
      -1,   595,    -1,   467,   709,   468,    -1,    58,   727,   724,
     726,   136,    -1,   725,    -1,   724,   725,    -1,   426,   682,
     385,   682,    -1,   132,   682,    -1,    -1,   682,    -1,    -1,
     746,    -1,   746,   731,    -1,   469,   741,    -1,   469,   460,
      -1,   465,   682,   466,    -1,   465,   730,   473,   730,   466,
      -1,   682,    -1,    -1,   729,    -1,   731,   729,    -1,    -1,
     732,   729,    -1,    39,    -1,    -1,   735,    -1,    -1,   736,
      -1,   735,   471,   736,    -1,   682,    35,   752,    -1,   682,
       3,    -1,   682,    -1,   460,    -1,   738,    -1,   737,   471,
     738,    -1,   746,    -1,   746,   731,    -1,   740,    -1,   739,
     471,   740,    -1,   746,    -1,   752,    -1,   747,    -1,   746,
     731,    -1,   744,    -1,     4,    -1,   745,    -1,     6,    -1,
       7,    -1,   742,   745,    -1,   742,   467,   710,   608,   468,
     745,    -1,   662,   745,    -1,   678,   745,   680,    -1,   678,
     467,   744,   468,   745,    -1,   678,   467,   472,   468,   472,
     680,    -1,   395,    -1,   150,    -1,   256,    -1,     9,    -1,
       5,    -1,     3,    -1,   807,    -1,   808,    -1,     3,    -1,
     807,    -1,   809,    -1,   746,    -1,   746,   749,    -1,   469,
     741,    -1,   749,   469,   741,    -1,   467,   739,   468,    -1,
      -1,   747,    -1,     3,    -1,   807,    -1,   808,    -1,   809,
      -1,   810,    -1,   295,   740,   754,    35,   755,    -1,   467,
     712,   468,    -1,    -1,   594,    -1,   492,    -1,   576,    -1,
     792,    -1,    90,   337,   746,   757,    -1,    90,   337,   179,
     251,   145,   746,   757,    -1,   757,   758,    -1,    -1,   524,
      -1,   759,    -1,   511,    -1,   802,    -1,    90,   765,   188,
     762,   763,   266,   738,   761,   467,   508,   468,   764,   655,
      -1,    90,   765,   188,   762,   179,   251,   145,   552,   266,
     738,   761,   467,   508,   468,   764,   655,    -1,   746,    -1,
     411,   760,    -1,    -1,    79,    -1,    -1,   552,    -1,    -1,
     430,   537,    -1,    -1,   404,    -1,    -1,    28,   377,   647,
     350,   337,   740,    -1,    28,   377,   179,   145,   647,   350,
     337,   740,    -1,    28,   344,   738,   350,   337,   740,    -1,
      28,   344,   179,   145,   738,   350,   337,   740,    -1,    28,
     423,   738,   350,   337,   740,    -1,    28,   423,   179,   145,
     738,   350,   337,   740,    -1,    66,    -1,   146,   771,    -1,
     146,   775,   769,   771,    -1,   146,   421,   771,    -1,   146,
     467,   774,   468,   771,    -1,   421,    -1,    -1,   776,    -1,
     518,    -1,    -1,   594,    -1,   492,    -1,   576,    -1,   792,
      -1,   804,    -1,     3,    -1,   807,    -1,   808,    -1,   809,
      -1,   772,    -1,   745,    -1,   777,    -1,   774,   471,   777,
      -1,    31,    -1,    30,    -1,   395,    -1,   150,    -1,   266,
      -1,   773,    -1,   778,   770,    -1,   772,    -1,   775,    -1,
     350,   780,    -1,   350,   225,   780,    -1,   350,   348,   780,
      -1,   781,    -1,   801,   162,    94,    -1,   386,   450,   783,
      -1,   337,   745,    -1,   801,   388,   784,    -1,   801,   456,
     784,    -1,   801,   388,   111,    -1,   801,   456,   111,    -1,
     776,    -1,   518,    -1,   745,    -1,     3,    -1,   678,   745,
     680,    -1,   678,   467,   744,   468,   745,    -1,   518,    -1,
     111,    -1,   225,    -1,   782,    -1,   784,   471,   782,    -1,
     224,   786,    -1,   745,    -1,   412,   789,   791,   769,    -1,
     412,   789,   791,   769,   738,    -1,   412,   789,   791,   769,
     796,    -1,   412,   467,   790,   468,    -1,   412,   467,   790,
     468,   738,   750,    -1,   775,    -1,   421,    -1,   161,    -1,
     163,    -1,     3,    -1,   163,    -1,    -1,   788,    -1,   790,
     471,   788,    -1,   161,    -1,    -1,   496,   116,   162,   793,
     795,   794,   501,    -1,   647,    -1,   647,   746,    -1,   647,
      35,   746,    -1,   427,   682,    -1,    -1,   411,   638,    -1,
      -1,   775,   769,    -1,   775,   769,   738,   750,    -1,   323,
     799,    -1,   801,    -1,    26,    -1,   798,    -1,   386,   450,
      -1,   390,   208,   220,    -1,   354,   801,    -1,   354,   386,
     450,    -1,   354,   390,   208,   220,    -1,   354,    26,    -1,
     746,    -1,   801,   469,   746,    -1,    90,   568,   423,   738,
     558,   764,    35,   594,   803,    -1,    90,   271,   321,   568,
     423,   738,   558,   764,    35,   594,   803,    -1,    90,   568,
     311,   423,   738,   467,   562,   468,   764,    35,   594,   803,
      -1,    90,   271,   321,   568,   311,   423,   738,   467,   562,
     468,   764,    35,   594,   803,    -1,   430,    65,   269,    -1,
     430,    57,    65,   269,    -1,   430,   225,    65,   269,    -1,
      -1,    90,   568,   377,   806,    35,   594,   805,    -1,    90,
     568,   377,   179,   251,   145,   806,    35,   594,   805,    -1,
     430,   104,    -1,   430,   249,   104,    -1,    -1,   738,   558,
     544,   536,    -1,    18,    -1,    19,    -1,    20,    -1,    21,
      -1,    22,    -1,    23,    -1,    24,    -1,    25,    -1,    27,
      -1,    28,    -1,    29,    -1,    37,    -1,    38,    -1,    40,
      -1,    41,    -1,    42,    -1,    44,    -1,    45,    -1,    46,
      -1,    53,    -1,    54,    -1,    55,    -1,    56,    -1,    57,
      -1,    60,    -1,    61,    -1,    64,    -1,    66,    -1,    67,
      -1,    68,    -1,    69,    -1,    74,    -1,    75,    -1,    76,
      -1,    77,    -1,    78,    -1,    80,    -1,    81,    -1,    82,
      -1,    84,    -1,    85,    -1,    86,    -1,    87,    -1,    88,
      -1,    89,    -1,    92,    -1,    93,    -1,    94,    -1,   102,
      -1,   103,    -1,   104,    -1,   105,    -1,   106,    -1,   107,
      -1,   110,    -1,   112,    -1,   114,    -1,   115,    -1,   116,
      -1,   117,    -1,   118,    -1,   119,    -1,   121,    -1,   122,
      -1,   123,    -1,   124,    -1,   127,    -1,   128,    -1,   129,
      -1,   130,    -1,   131,    -1,   133,    -1,   134,    -1,   135,
      -1,   137,    -1,   138,    -1,   139,    -1,   141,    -1,   142,
      -1,   143,    -1,   144,    -1,   146,    -1,   147,    -1,   148,
      -1,   151,    -1,   153,    -1,   154,    -1,   156,    -1,   158,
      -1,   160,    -1,   164,    -1,   165,    -1,   166,    -1,   167,
      -1,   169,    -1,   173,    -1,   175,    -1,   176,    -1,   177,
      -1,   178,    -1,   179,    -1,   181,    -1,   182,    -1,   183,
      -1,   184,    -1,   186,    -1,   187,    -1,   188,    -1,   189,
      -1,   190,    -1,   191,    -1,   193,    -1,   196,    -1,   197,
      -1,   198,    -1,   199,    -1,   205,    -1,   208,    -1,   210,
      -1,   211,    -1,   212,    -1,   213,    -1,   214,    -1,   217,
      -1,   220,    -1,   223,    -1,   224,    -1,   225,    -1,   228,
      -1,   229,    -1,   230,    -1,   231,    -1,   232,    -1,   233,
      -1,   234,    -1,   235,    -1,   236,    -1,   237,    -1,   238,
      -1,   239,    -1,   240,    -1,   241,    -1,   242,    -1,   243,
      -1,   247,    -1,   248,    -1,   249,    -1,   252,    -1,   253,
      -1,   255,    -1,   258,    -1,   260,    -1,   261,    -1,   262,
      -1,   264,    -1,   265,    -1,   268,    -1,   269,    -1,   270,
      -1,   273,    -1,   276,    -1,   279,    -1,   280,    -1,   281,
      -1,   282,    -1,   283,    -1,   284,    -1,   285,    -1,   286,
      -1,   287,    -1,   289,    -1,   290,    -1,   292,    -1,   293,
      -1,   295,    -1,   296,    -1,   297,    -1,   299,    -1,   300,
      -1,   301,    -1,   302,    -1,   303,    -1,   304,    -1,   305,
      -1,   306,    -1,   307,    -1,   309,    -1,   310,    -1,   311,
      -1,   312,    -1,   314,    -1,   315,    -1,   316,    -1,   317,
      -1,   318,    -1,   319,    -1,   320,    -1,   321,    -1,   322,
      -1,   323,    -1,   324,    -1,   325,    -1,   327,    -1,   328,
      -1,   330,    -1,   331,    -1,   332,    -1,   334,    -1,   335,
      -1,   336,    -1,   337,    -1,   338,    -1,   339,    -1,   340,
      -1,   341,    -1,   342,    -1,   344,    -1,   345,    -1,   346,
      -1,   347,    -1,   348,    -1,   350,    -1,   352,    -1,   353,
      -1,   354,    -1,   356,    -1,   357,    -1,   359,    -1,   361,
      -1,   362,    -1,   363,    -1,   364,    -1,   365,    -1,   366,
      -1,   367,    -1,   368,    -1,   369,    -1,   370,    -1,   371,
      -1,   372,    -1,   375,    -1,   376,    -1,   378,    -1,   380,
      -1,   381,    -1,   382,    -1,   383,    -1,   384,    -1,   390,
      -1,   391,    -1,   393,    -1,   396,    -1,   397,    -1,   398,
      -1,   399,    -1,   400,    -1,   401,    -1,   402,    -1,   405,
      -1,   406,    -1,   407,    -1,   408,    -1,   409,    -1,   412,
      -1,   413,    -1,   414,    -1,   415,    -1,   416,    -1,   420,
      -1,   422,    -1,   423,    -1,   424,    -1,   425,    -1,   428,
      -1,   431,    -1,   432,    -1,   433,    -1,   434,    -1,   435,
      -1,   436,    -1,   448,    -1,   449,    -1,   450,    -1,    47,
      -1,    48,    -1,    50,    -1,    51,    -1,    62,    -1,    63,
      -1,    70,    -1,   108,    -1,   109,    -1,   145,    -1,   149,
      -1,   155,    -1,   170,    -1,   172,    -1,   195,    -1,   200,
      -1,   201,    -1,   203,    -1,   218,    -1,   244,    -1,   246,
      -1,   250,    -1,   257,    -1,   259,    -1,   274,    -1,   278,
      -1,   291,    -1,   294,    -1,   308,    -1,   333,    -1,   351,
      -1,   358,    -1,   373,    -1,   386,    -1,   387,    -1,   392,
      -1,   394,    -1,   417,    -1,   418,    -1,   437,    -1,   438,
      -1,   439,    -1,   440,    -1,   441,    -1,   442,    -1,   443,
      -1,   444,    -1,   445,    -1,   446,    -1,   447,    -1,    43,
      -1,    49,    -1,    72,    -1,    79,    -1,    91,    -1,    98,
      -1,   161,    -1,   163,    -1,   180,    -1,   194,    -1,   206,
      -1,   207,    -1,   209,    -1,   219,    -1,   221,    -1,   245,
      -1,   254,    -1,   275,    -1,   277,    -1,   329,    -1,   355,
      -1,   379,    -1,   421,    -1,    26,    -1,    30,    -1,    31,
      -1,    32,    -1,    33,    -1,    34,    -1,    35,    -1,    36,
      -1,    39,    -1,    52,    -1,    58,    -1,    59,    -1,    65,
      -1,    71,    -1,    73,    -1,    83,    -1,    90,    -1,    95,
      -1,    96,    -1,    97,    -1,    99,    -1,   100,    -1,   101,
      -1,   111,    -1,   113,    -1,   120,    -1,   125,    -1,   126,
      -1,   132,    -1,   136,    -1,   140,    -1,   150,    -1,   152,
      -1,   157,    -1,   159,    -1,   162,    -1,   168,    -1,   171,
      -1,   174,    -1,   185,    -1,   192,    -1,   202,    -1,   204,
      -1,   215,    -1,   216,    -1,   222,    -1,   226,    -1,   227,
      -1,   251,    -1,   256,    -1,   263,    -1,   266,    -1,   267,
      -1,   271,    -1,   272,    -1,   288,    -1,   298,    -1,   313,
      -1,   326,    -1,   343,    -1,   349,    -1,   360,    -1,   374,
      -1,   377,    -1,   385,    -1,   388,    -1,   389,    -1,   395,
      -1,   403,    -1,   404,    -1,   410,    -1,   411,    -1,   419,
      -1,   426,    -1,   427,    -1,   429,    -1,   430,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   448,   448,   464,   476,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   515,     9,    18,    27,    36,    45,
      54,    63,    72,    85,    87,    93,    94,    99,   103,   107,
     118,   126,   130,   139,   148,   157,   166,   175,   184,   192,
     200,   209,   218,   227,   236,   253,   262,   271,   280,   290,
     303,   318,   327,   335,   350,   358,   368,   378,   385,   392,
     400,   407,   418,   419,   424,   428,   433,   438,   446,   447,
     452,   456,   457,     7,    13,    19,    25,     6,    15,    25,
      35,    45,    55,    65,    75,    85,    95,   106,   117,   127,
     140,   141,     8,    21,    27,    34,    40,    47,    57,    61,
      70,    79,    88,    95,    96,   101,   113,   118,   143,   153,
     163,   169,   180,   191,   206,   207,   213,   214,   219,   220,
     226,   227,   231,   232,   237,   239,   245,   246,   250,   251,
     256,     7,    14,    22,     9,    19,    32,    33,     7,    14,
      31,    51,    52,     9,    17,    29,    30,    34,    35,    36,
      41,    42,    43,    48,    52,    56,    60,    64,    68,    72,
      76,    80,    84,    88,    92,    97,   101,   105,   112,   113,
     117,   118,   119,     2,     9,    15,    21,    28,    35,    45,
      46,    47,     7,    21,    41,    42,    69,    70,    71,    72,
      73,    74,    78,    79,    84,    89,    90,    91,    92,    93,
      98,   105,   106,   107,   124,   131,   138,   148,   158,   170,
     179,   188,   207,   214,   219,   221,   223,   225,   228,   233,
     234,   238,   239,   240,   241,   246,   250,   251,   256,   263,
     268,   269,   270,   271,   272,   273,   274,   275,   281,   282,
     286,   291,   298,   305,   312,   324,   325,   326,   327,   331,
     336,   337,   338,   343,   348,   349,   350,   351,   352,   353,
     358,   381,   385,   392,   393,   397,   401,   402,   403,   407,
     411,   419,   420,   425,   426,   430,   438,   439,   444,   445,
     449,   454,   458,   462,   467,   475,   476,   480,   481,   487,
     498,   511,   525,   539,   553,   567,   590,   594,   601,   605,
     613,   618,   625,   635,   636,   637,   638,   639,   646,   653,
     654,   659,   660,     9,    19,    29,    39,    49,    59,    73,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    90,    91,    92,    93,    94,    95,    96,   101,
     102,   107,   108,   109,   114,   115,   116,     7,     1,    30,
      53,    54,    59,    63,    68,    72,    80,    81,    85,    86,
      91,    92,    96,    97,   102,   103,   104,   105,   106,   111,
     119,   123,   128,   129,   134,   138,   143,   147,   151,   155,
     159,   163,   167,   171,   175,   179,   183,   187,   191,   195,
     203,   209,   210,   211,   216,   220,    47,    48,    52,    53,
      68,    69,    76,    84,    92,   100,   108,   116,   127,   128,
     155,   169,   184,   185,   204,   208,   212,   229,   236,   243,
     253,   254,   257,   269,   280,   288,   293,   298,   303,   308,
     316,   324,   329,   334,   341,   342,   346,   347,   348,   355,
     356,   360,   361,   365,   366,   370,   374,   375,   378,   387,
     398,   399,   400,   403,   404,   405,   409,   410,   411,   412,
     416,   417,   421,   423,   439,   441,   446,   449,   454,   455,
     463,   483,   484,   486,   491,   492,   496,   497,   500,   501,
     526,   527,   531,   532,   536,   537,   541,   554,   555,   559,
     560,   564,   565,   569,   570,   574,   585,   586,   587,   588,
     592,   593,   598,   599,   600,   609,   615,   633,   634,   638,
     639,   645,   650,   658,   665,   673,   708,   733,   737,   763,
     767,   779,   792,   806,   817,   832,   838,   843,   849,   856,
     857,   865,   869,   873,   879,   886,   891,   892,   893,   894,
     898,   899,   911,   912,   917,   924,   931,   938,   961,   974,
     975,   990,  1000,  1012,  1017,  1018,  1021,  1022,  1025,  1026,
    1031,  1032,  1037,  1041,  1047,  1068,  1076,  1088,  1093,  1100,
    1105,  1111,  1116,  1125,  1127,  1130,  1134,  1135,  1136,  1137,
    1138,  1139,  1144,  1164,  1165,  1166,  1167,  1178,  1184,  1192,
    1193,  1199,  1204,  1209,  1214,  1219,  1224,  1229,  1234,  1240,
    1246,  1252,  1259,  1281,  1290,  1294,  1302,  1306,  1314,  1326,
    1347,  1351,  1357,  1361,  1374,  1382,  1392,  1394,  1396,  1398,
    1400,  1402,  1407,  1408,  1415,  1424,  1432,  1441,  1452,  1460,
    1461,  1462,  1466,  1468,  1470,  1472,  1474,  1476,  1478,  1483,
    1488,  1494,  1502,  1507,  1514,  1521,  1525,  1529,  1565,  1566,
    1568,  1576,  1591,  1593,  1595,  1597,  1599,  1601,  1603,  1605,
    1607,  1609,  1611,  1613,  1615,  1617,  1620,  1622,  1624,  1627,
    1629,  1631,  1633,  1636,  1641,  1649,  1654,  1662,  1667,  1675,
    1680,  1689,  1697,  1705,  1713,  1731,  1739,  1747,  1755,  1763,
    1771,  1787,  1795,  1803,  1811,  1819,  1827,  1835,  1839,  1843,
    1847,  1851,  1859,  1867,  1875,  1883,  1903,  1925,  1936,  1943,
    1968,  1970,  1972,  1974,  1976,  1978,  1980,  1982,  1984,  1986,
    1988,  1990,  1992,  1994,  1996,  1998,  2000,  2002,  2004,  2006,
    2010,  2014,  2018,  2032,  2033,  2034,  2046,  2061,  2073,  2075,
    2077,  2088,  2112,  2125,  2129,  2135,  2142,  2149,  2159,  2166,
    2194,  2229,  2240,  2241,  2248,  2254,  2258,  2262,  2266,  2270,
    2274,  2278,  2282,  2286,  2290,  2294,  2298,  2302,  2306,  2310,
    2314,  2316,  2320,  2329,  2334,  2341,  2356,  2363,  2367,  2371,
    2375,  2379,  2386,  2394,  2409,  2410,  2414,  2415,  2423,  2424,
    2428,  2429,  2434,  2442,  2444,  2458,  2461,  2488,  2489,  2492,
    2493,  2504,  2522,  2529,  2538,  2555,  2600,  2608,  2616,  2624,
    2632,  2653,  2654,  2655,  2658,  2659,  2660,  2663,  2664,  2667,
    2668,  2669,  2670,  2671,  2672,  2673,  2674,  2675,  2676,  2677,
    2678,  2681,  2683,  2688,  2690,  2695,  2697,  2699,  2701,  2703,
    2705,  2719,  2721,  2725,  2729,  2736,  2740,  2746,  2750,  2759,
    2770,  2771,  2775,  2779,  2786,  2787,  2788,  2789,  2790,  2791,
    2792,  2793,  2803,  2807,  2814,  2821,  2822,  2838,  2842,  2847,
    2851,  2866,  2871,  2875,  2878,  2881,  2882,  2883,  2886,  2893,
    2903,  2917,  2918,  2922,  2933,  2934,  2937,  2938,  2941,  2945,
    2952,  2956,  2960,  2968,  2979,  2980,  2984,  2985,  2989,  2990,
    2993,  2994,  3004,  3005,  3009,  3010,  3013,  3029,  3037,  3045,
    3067,  3068,  3079,  3083,  3110,  3112,  3117,  3119,  3129,  3131,
    3142,  3146,  3150,  3154,  3158,  3167,  3174,  3206,  3210,  3216,
    3224,  3236,  3240,  3244,  3250,  3251,  3267,  3268,  3269,  3274,
    3275,  3276,  3279,  3280,  3283,  3285,  3290,  3291,  3294,  3302,
    3303,  3304,  3305,  3306,     7,    18,    19,    23,    24,    25,
      26,     7,    16,    34,    41,    46,    47,    48,    49,     8,
      33,    62,    66,    67,    72,    73,    78,    79,    83,    84,
      89,    90,     7,    16,    25,    34,    43,    52,     5,     9,
      16,    26,    33,    44,    45,    50,    51,    52,    57,    58,
      59,    60,    61,    65,    66,    67,    68,    73,    74,    79,
      83,    91,    92,    97,    98,    99,   105,   110,   118,   119,
      10,    16,    22,    32,    33,    41,    52,    64,    72,    80,
      87,    97,    99,   105,   109,   113,   128,   135,   136,   137,
     141,   142,     7,    16,     8,    22,    36,    48,    56,    70,
      71,    72,    73,    74,    87,    88,    93,    94,    98,    99,
       7,    21,    25,    32,    43,    44,    50,    51,     9,    19,
       2,     7,    14,    24,    25,    32,     3,     9,    15,    21,
      30,    31,     8,    21,    34,    52,    74,    75,    76,    77,
      11,    24,    41,    42,    43,    48,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LESS_EQUALS", "GREATER_EQUALS", "NOT_EQUALS",
  "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P", "ADMIN", "AFTER",
  "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS", "ANALYSE", "ANALYZE",
  "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION", "ASSIGNMENT",
  "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION", "BACKWARD",
  "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT", "BOOLEAN_P",
  "BOTH", "BY", "CACHE", "CALLED", "CASCADE", "CASCADED", "CASE", "CAST",
  "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER", "CHARACTERISTICS",
  "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER", "COALESCE",
  "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT", "COMMENTS",
  "COMMIT", "COMMITTED", "CONCURRENTLY", "CONFIGURATION", "CONFLICT",
  "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P", "CONTINUE_P",
  "CONVERSION_P", "COPY", "COST", "CREATE_P", "CROSS", "CSV", "CUBE",
  "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE",
  "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER",
  "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P", "DEALLOCATE", "DEC",
  "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE", "DEFERRED",
  "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS", "DESC_P",
  "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD", "DISTINCT", "DO",
  "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH", "ELSE", "ENABLE_P",
  "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE", "EVENT", "EXCEPT",
  "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE", "EXISTS", "EXPLAIN",
  "EXTENSION", "EXTERNAL", "EXTRACT", "FALSE_P", "FAMILY", "FETCH",
  "FILTER", "FIRST_P", "FLOAT_P", "FOLLOWING", "FOR", "FORCE", "FOREIGN",
  "FORWARD", "FREEZE", "FROM", "FULL", "FUNCTION", "FUNCTIONS",
  "GENERATED", "GLOBAL", "GRANT", "GRANTED", "GREATEST", "GROUP_P",
  "GROUPING", "HANDLER", "HAVING", "HEADER_P", "HOLD", "HOUR_P",
  "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE", "IMMUTABLE", "IMPLICIT_P",
  "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT", "INDEX", "INDEXES",
  "INHERIT", "INHERITS", "INITIALLY", "INLINE_P", "INNER_P", "INOUT",
  "INPUT_P", "INSENSITIVE", "INSERT", "INSTEAD", "INT_P", "INTEGER",
  "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS", "ISNULL", "ISOLATION",
  "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P", "LAST_P", "LATERAL_P",
  "LEADING", "LEAKPROOF", "LEAST", "LEFT", "LEVEL", "LIKE", "LIMIT",
  "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP", "LOCATION",
  "LOCK_P", "LOCKED", "LOGGED", "MAPPING", "MATCH", "MATERIALIZED",
  "MAXVALUE", "METHOD", "MINUTE_P", "MINVALUE", "MODE", "MONTH_P", "MOVE",
  "NAME_P", "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT", "NO",
  "NONE", "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P",
  "NULLIF", "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET",
  "OIDS", "OLD", "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR",
  "ORDER", "ORDINALITY", "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY",
  "OVERRIDING", "OWNED", "OWNER", "PARALLEL", "PARSER", "PARTIAL",
  "PARTITION", "PASSING", "PASSWORD", "PLACING", "PLANS", "POLICY",
  "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE", "PREPARED",
  "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL", "PROCEDURE",
  "PROGRAM", "PUBLICATION", "QUOTE", "RANGE", "READ_P", "REAL", "REASSIGN",
  "RECHECK", "RECURSIVE", "REF", "REFERENCES", "REFERENCING", "REFRESH",
  "REINDEX", "RELATIVE_P", "RELEASE", "RENAME", "REPEATABLE", "REPLACE",
  "REPLICA", "RESET", "RESTART", "RESTRICT", "RETURNING", "RETURNS",
  "REVOKE", "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE",
  "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL", "SEARCH", "SECOND_P",
  "SECURITY", "SELECT", "SEQUENCE", "SEQUENCES", "SERIALIZABLE", "SERVER",
  "SESSION", "SESSION_USER", "SET", "SETOF", "SETS", "SHARE", "SHOW",
  "SIMILAR", "SIMPLE", "SKIP", "SMALLINT", "SNAPSHOT", "SOME", "SQL_P",
  "STABLE", "STANDALONE_P", "START", "STATEMENT", "STATISTICS", "STDIN",
  "STDOUT", "STORAGE", "STRICT_P", "STRIP_P", "SUBSCRIPTION", "SUBSTRING",
  "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES", "TABLESAMPLE",
  "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P", "THEN", "TIME",
  "TIMESTAMP", "TO", "TRAILING", "TRANSACTION", "TRANSFORM", "TREAT",
  "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED", "TYPE_P", "TYPES_P",
  "UNBOUNDED", "UNCOMMITTED", "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN",
  "UNLISTEN", "UNLOGGED", "UNTIL", "UPDATE", "USER", "USING", "VACUUM",
  "VALID", "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR",
  "VARIADIC", "VARYING", "VERBOSE", "VERSION_P", "VIEW", "VIEWS",
  "VOLATILE", "WHEN", "WHERE", "WHITESPACE_P", "WINDOW", "WITH", "WITHIN",
  "WITHOUT", "WORK", "WRAPPER", "WRITE_P", "XML_P", "XMLATTRIBUTES",
  "XMLCONCAT", "XMLELEMENT", "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES",
  "XMLPARSE", "XMLPI", "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P",
  "YES_P", "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'?'", "':'", "$accept",
  "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "RenameStmt", "opt_column", "InsertStmt",
  "insert_rest", "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list", "index_params",
  "set_target", "PragmaStmt", "CreateSeqStmt", "OptSeqOptList",
  "ExecuteStmt", "execute_param_clause", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "TransactionStmt", "opt_transaction", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "func_type", "ConstraintElem",
  "TableElementList", "key_match", "TableLikeClause", "OptTemp",
  "generated_when", "DropStmt", "drop_type_any_name", "drop_type_name",
  "any_name_list", "opt_drop_behavior", "drop_type_name_on_any_name",
  "UpdateStmt", "CopyStmt", "copy_from", "copy_delimiter",
  "copy_generic_opt_arg_list", "opt_using", "opt_as", "opt_program",
  "copy_options", "copy_generic_opt_arg", "copy_generic_opt_elem",
  "opt_oids", "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "tablesample_clause", "opt_repeatable_clause",
  "func_table", "rowsfrom_item", "rowsfrom_list", "opt_col_def_list",
  "opt_ordinality", "where_clause", "TableFuncElementList",
  "TableFuncElement", "opt_collate_clause", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "opt_interval", "interval_second",
  "a_expr", "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "row", "sub_type", "all_Op", "MathOp", "qual_Op",
  "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "func_arg_list", "func_arg_expr", "type_list", "extract_list",
  "extract_arg", "overlay_list", "overlay_placing", "position_list",
  "substr_list", "substr_from", "substr_for", "trim_list", "in_expr",
  "case_expr", "when_clause_list", "when_clause", "case_default",
  "case_arg", "columnref", "indirection_el", "opt_slice_bound",
  "indirection", "opt_indirection", "opt_asymmetric", "opt_target_list",
  "target_list", "target_el", "qualified_name_list", "qualified_name",
  "name_list", "name", "attr_name", "func_name", "AexprConst", "Iconst",
  "Sconst", "ColId", "type_function_name", "any_name", "attrs",
  "opt_name_list", "param_name", "ColLabel", "PrepareStmt",
  "prep_type_clause", "PreparableStmt", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "AlterObjectSchemaStmt",
  "CheckPointStmt", "ExplainStmt", "opt_verbose", "explain_option_arg",
  "ExplainableStmt", "NonReservedWord", "NonReservedWord_or_Sconst",
  "explain_option_list", "analyze_keyword", "opt_boolean_or_string",
  "explain_option_elem", "explain_option_name", "VariableSetStmt",
  "set_rest", "generic_set", "var_value", "zone_value", "var_list",
  "LoadStmt", "file_name", "VacuumStmt", "vacuum_option_elem", "opt_full",
  "vacuum_option_list", "opt_freeze", "DeleteStmt",
  "relation_expr_opt_alias", "where_or_current_clause", "using_clause",
  "AnalyzeStmt", "VariableResetStmt", "generic_reset", "reset_rest",
  "VariableShowStmt", "var_name", "ViewStmt", "opt_check_option",
  "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,    60,    62,    61,   709,    43,    45,
      42,    47,    37,    94,   710,    91,    93,    40,    41,    46,
      59,    44,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   474,   475,   476,   476,   477,   477,   477,   477,   477,
     477,   477,   477,   477,   477,   477,   477,   477,   477,   477,
     477,   477,   477,   477,   477,   477,   477,   477,   477,   477,
     477,   477,   477,   477,   477,   478,   478,   478,   478,   478,
     478,   478,   478,   479,   479,   480,   480,   481,   481,   481,
     481,   482,   482,   483,   483,   483,   483,   483,   483,   483,
     483,   483,   483,   483,   483,   483,   483,   483,   483,   483,
     483,   483,   483,   483,   483,   483,   483,   483,   483,   483,
     483,   483,   484,   484,   485,   485,   485,   485,   486,   486,
     487,   488,   488,   489,   489,   489,   489,   490,   490,   490,
     490,   490,   490,   490,   490,   490,   490,   490,   490,   490,
     491,   491,   492,   493,   493,   493,   493,   493,   494,   494,
     495,   495,   495,   496,   496,   497,   498,   498,   499,   499,
     499,   500,   500,   500,   501,   501,   502,   502,   503,   503,
     504,   504,   505,   505,   506,   506,   507,   507,   508,   508,
     509,   510,   510,   510,   511,   511,   512,   512,   513,   513,
     513,   514,   514,   515,   515,   516,   516,   517,   517,   517,
     518,   518,   518,   518,   519,   519,   519,   519,   519,   519,
     519,   519,   519,   519,   519,   519,   519,   519,   520,   520,
     521,   521,   521,   522,   522,   522,   522,   522,   522,   523,
     523,   523,   524,   524,   525,   525,   526,   526,   526,   526,
     526,   526,   527,   527,   528,   529,   529,   529,   529,   529,
     530,   530,   530,   530,   531,   531,   531,   531,   531,   531,
     531,   531,   532,   533,   534,   534,   534,   534,   534,   535,
     535,   536,   536,   536,   536,   537,   538,   538,   539,   539,
     540,   540,   540,   540,   540,   540,   540,   540,   541,   541,
     542,   543,   543,   543,   543,   544,   544,   544,   544,   545,
     546,   546,   546,   547,   548,   548,   548,   548,   548,   548,
     549,   550,   550,   551,   551,   552,   553,   553,   553,   554,
     554,   555,   555,   556,   556,   557,   558,   558,   559,   559,
     560,   561,   561,   561,   561,   562,   562,   563,   563,   563,
     564,   564,   564,   564,   564,   564,   565,   565,   566,   566,
     566,   566,   567,   568,   568,   568,   568,   568,   568,   568,
     568,   569,   569,   570,   570,   570,   570,   570,   570,   571,
     571,   571,   571,   571,   571,   571,   571,   571,   571,   571,
     571,   571,   572,   572,   572,   572,   572,   572,   572,   573,
     573,   574,   574,   574,   575,   575,   575,   576,   577,   577,
     578,   578,   579,   579,   580,   580,   581,   581,   582,   582,
     583,   583,   584,   584,   585,   585,   585,   585,   585,   586,
     587,   587,   588,   588,   589,   589,   590,   590,   590,   590,
     590,   590,   590,   590,   590,   590,   590,   590,   590,   590,
     591,   592,   592,   592,   593,   593,   594,   594,   595,   595,
     596,   596,   596,   596,   596,   596,   596,   596,   597,   597,
     598,   598,   598,   598,   598,   598,   598,   599,   599,   599,
     600,   600,   601,   602,   602,   603,   603,   603,   603,   603,
     603,   603,   603,   603,   604,   604,   605,   605,   605,   606,
     606,   607,   607,   608,   608,   609,   610,   610,   611,   611,
     612,   612,   612,   613,   613,   613,   614,   614,   614,   614,
     615,   615,   616,   616,   616,   616,   617,   617,   618,   618,
     619,   620,   620,   620,   621,   621,   622,   622,   623,   623,
     624,   624,   625,   625,   626,   626,   627,   628,   628,   629,
     629,   630,   630,   631,   631,   632,   633,   633,   633,   633,
     634,   634,   635,   635,   635,   636,   636,   637,   637,   638,
     638,   639,   639,   639,   639,   639,   639,   639,   639,   640,
     640,   640,   640,   640,   640,   641,   641,   641,   641,   642,
     642,   643,   643,   643,   643,   643,   644,   644,   644,   644,
     645,   645,   646,   646,   647,   647,   647,   647,   648,   649,
     649,   650,   650,   651,   652,   652,   653,   653,   654,   654,
     655,   655,   656,   656,   657,   658,   658,   659,   659,   659,
     659,   659,   659,   660,   660,   660,   661,   661,   661,   661,
     661,   661,   661,   662,   662,   662,   662,   663,   663,   664,
     664,   665,   665,   665,   665,   665,   665,   665,   665,   665,
     665,   665,   666,   666,   667,   667,   668,   668,   669,   670,
     671,   671,   672,   672,   673,   674,   675,   675,   675,   675,
     675,   675,   676,   676,   677,   677,   677,   677,   678,   679,
     679,   679,   680,   680,   680,   680,   680,   680,   680,   680,
     680,   680,   680,   680,   680,   680,   681,   681,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     683,   683,   683,   683,   683,   683,   683,   683,   683,   683,
     683,   683,   683,   683,   683,   683,   683,   683,   683,   683,
     683,   683,   683,   684,   684,   684,   684,   684,   684,   684,
     684,   684,   684,   685,   685,   685,   685,   685,   685,   685,
     686,   686,   687,   687,   688,   688,   688,   688,   688,   688,
     688,   688,   688,   688,   688,   688,   688,   688,   688,   688,
     688,   688,   688,   688,   688,   688,   688,   688,   688,   688,
     688,   688,   688,   688,   689,   689,   690,   690,   691,   691,
     692,   692,   693,   694,   694,   694,   695,   696,   696,   697,
     697,   698,   698,   698,   699,   699,   700,   700,   700,   700,
     700,   701,   701,   701,   702,   702,   702,   703,   703,   704,
     704,   704,   704,   704,   704,   704,   704,   704,   704,   704,
     704,   705,   705,   706,   706,   707,   707,   707,   707,   707,
     707,   708,   708,   709,   709,   710,   710,   711,   711,   711,
     712,   712,   713,   713,   714,   714,   714,   714,   714,   714,
     714,   714,   715,   715,   716,   717,   717,   718,   718,   718,
     718,   718,   718,   719,   720,   721,   721,   721,   722,   722,
     723,   724,   724,   725,   726,   726,   727,   727,   728,   728,
     729,   729,   729,   729,   730,   730,   731,   731,   732,   732,
     733,   733,   734,   734,   735,   735,   736,   736,   736,   736,
     737,   737,   738,   738,   739,   739,   740,   741,   742,   742,
     743,   743,   743,   743,   743,   743,   743,   743,   743,   743,
     743,   743,   743,   743,   744,   745,   746,   746,   746,   747,
     747,   747,   748,   748,   749,   749,   750,   750,   751,   752,
     752,   752,   752,   752,   753,   754,   754,   755,   755,   755,
     755,   756,   756,   757,   757,   758,   758,   758,   758,   759,
     759,   760,   761,   761,   762,   762,   763,   763,   764,   764,
     765,   765,   766,   766,   766,   766,   766,   766,   767,   768,
     768,   768,   768,   769,   769,   770,   770,   770,   771,   771,
     771,   771,   771,   772,   772,   772,   772,   773,   773,   774,
     774,   775,   775,   776,   776,   776,   776,   777,   778,   778,
     779,   779,   779,   780,   780,   780,   780,   781,   781,   781,
     781,   782,   782,   783,   783,   783,   783,   783,   783,   783,
     784,   784,   785,   786,   787,   787,   787,   787,   787,   788,
     788,   788,   788,   788,   789,   789,   790,   790,   791,   791,
     792,   793,   793,   793,   794,   794,   795,   795,   796,   796,
     797,   798,   798,   799,   799,   799,   800,   800,   800,   800,
     801,   801,   802,   802,   802,   802,   803,   803,   803,   803,
     804,   804,   805,   805,   805,   806,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   809,
     809,   809,   809,   809,   809,   809,   809,   809,   809,   809,
     809,   809,   809,   809,   809,   809,   809,   809,   809,   809,
     809,   809,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     4,     6,     4,     6,     4,
       6,     4,     6,     1,     2,     3,     2,     1,     3,     2,
       3,     1,     3,     2,     5,     3,     6,     4,     6,     6,
       6,     5,     5,     6,     9,     4,     5,     7,     6,     4,
       8,     4,     2,     4,     3,     6,     4,     2,     2,     2,
       2,     1,     2,     0,     1,     2,     2,     2,     1,     3,
       4,     2,     0,     2,     3,     2,     3,     6,     6,     8,
       6,     8,     6,     8,     6,     8,     8,    10,     8,    10,
       1,     0,     7,     1,     4,     4,     7,     2,     1,     3,
       4,     3,     0,     1,     0,     2,     3,     5,     8,     5,
       0,     5,     5,     7,     2,     0,     1,     1,     1,     3,
       2,     0,     1,     0,     1,     3,     1,     3,     1,     3,
       2,     2,     4,     5,     5,     8,     1,     0,     3,     9,
      12,     3,     0,     4,     6,     1,     2,     1,     1,     0,
       1,     2,     2,     1,     2,     2,     1,     2,     3,     2,
       2,     2,     2,     3,     3,     3,     1,     3,     1,     0,
       1,     2,     2,     2,     2,     2,     2,     2,     2,     1,
       1,     0,     9,    12,     0,     2,     1,     1,     1,     1,
       1,     1,     3,     0,     1,     2,     1,     1,     2,     2,
       3,     1,     1,     2,     2,     1,     2,     3,     5,     2,
       5,     5,     2,     3,     1,     1,     2,     2,     0,     4,
       0,     3,     4,     4,     0,     3,     2,     0,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       3,     1,     2,     2,     2,     2,     2,     2,     0,     3,
       3,     3,     0,     1,     2,     1,     2,     2,     2,     2,
       4,     1,     3,     1,     3,     1,     1,     1,     1,     3,
       1,     2,     0,     1,     0,     1,     3,     0,     2,     0,
       3,     3,     1,     5,     3,     1,     3,     1,     4,     5,
       5,     6,     3,     7,     4,    11,     1,     3,     2,     2,
       2,     0,     3,     1,     1,     2,     2,     2,     2,     1,
       0,     1,     2,     6,     4,     6,     4,     6,     8,     1,
       1,     1,     2,     1,     2,     1,     1,     1,     3,     3,
       3,     3,     2,     2,     1,     3,     1,     1,     1,     1,
       3,     1,     1,     0,     1,     1,     1,     8,    11,     9,
       1,     1,     3,     0,     1,     3,     1,     0,     1,     0,
       1,     0,     1,     3,     1,     1,     1,     3,     0,     2,
       2,     0,     2,     0,     1,     0,     1,     1,     1,     3,
       3,     1,     1,     3,     3,     3,     3,     4,     3,     2,
       1,     1,     1,     1,     1,     3,     1,     1,     3,     3,
       1,     2,     4,     4,     2,     3,     5,     5,     1,     1,
       9,     9,     1,     2,     4,     4,     4,     2,     2,     3,
       1,     3,     6,     2,     0,     3,     3,     4,     4,     4,
       4,     3,     2,     1,     1,     0,     1,     1,     0,     1,
       5,     1,     0,     1,     0,     3,     1,     3,     4,     3,
       1,     1,     0,     2,     2,     0,     2,     2,     1,     1,
       1,     0,     2,     4,     5,     4,     2,     3,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       3,     0,     1,     3,     1,     1,     2,     2,     0,     1,
       3,     1,     0,     1,     2,     3,     2,     4,     2,     3,
       2,     0,     1,     2,     0,     4,     5,     2,     0,     1,
       3,     2,     3,     2,     3,     2,     3,     1,     4,     3,
       4,     5,     4,     5,     4,     5,     2,     4,     1,     1,
       0,     1,     4,     5,     4,     0,     2,     2,     2,     1,
       1,     0,     4,     2,     1,     2,     2,     4,     6,     4,
       0,     2,     6,     2,     1,     3,     4,     0,     2,     0,
       2,     0,     1,     3,     3,     2,     0,     2,     3,     5,
       6,     2,     3,     3,     4,     0,     1,     1,     1,     1,
       1,     2,     4,     1,     1,     1,     1,     2,     3,     3,
       0,     1,     1,     1,     1,     1,     2,     2,     2,     2,
       2,     1,     3,     0,     1,     1,     1,     1,     5,     2,
       1,     1,     1,     1,     4,     1,     2,     2,     1,     3,
       3,     2,     1,     0,     5,     2,     5,     2,     1,     3,
       3,     0,     1,     1,     1,     1,     1,     1,     3,     3,
       3,     3,     3,     3,     3,     0,     1,     4,     1,     3,
       3,     5,     2,     2,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     2,     2,     3,
       3,     2,     2,     3,     5,     4,     6,     3,     5,     4,
       6,     4,     6,     5,     7,     3,     2,     4,     3,     2,
       3,     3,     4,     3,     4,     3,     4,     5,     6,     6,
       7,     6,     7,     6,     7,     3,     4,     4,     6,     1,
       1,     3,     2,     2,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     2,     2,     5,
       6,     6,     7,     1,     1,     2,     2,     4,     1,     1,
       1,     2,     2,     3,     5,     6,     8,     6,     6,     4,
       4,     1,     1,     1,     5,     1,     1,     4,     1,     4,
       1,     4,     1,     4,     1,     1,     1,     1,     1,     1,
       6,     4,     4,     4,     4,     6,     5,     5,     5,     4,
       6,     4,     4,     4,     5,     0,     5,     0,     2,     0,
       1,     3,     3,     2,     2,     0,     6,     1,     0,     3,
       0,     2,     2,     0,     1,     4,     2,     2,     2,     2,
       2,     4,     3,     5,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     4,     1,     4,     1,     4,     1,     2,     1,
       2,     1,     3,     1,     3,     1,     3,     1,     3,     3,
       1,     3,     3,     0,     1,     1,     1,     1,     1,     1,
       1,     1,     4,     3,     2,     3,     0,     3,     3,     2,
       2,     1,     0,     2,     2,     3,     2,     1,     1,     3,
       5,     1,     2,     4,     2,     0,     1,     0,     1,     2,
       2,     2,     3,     5,     1,     0,     1,     2,     0,     2,
       1,     0,     1,     0,     1,     3,     3,     2,     1,     1,
       1,     3,     1,     2,     1,     3,     1,     1,     1,     2,
       1,     1,     1,     1,     1,     2,     6,     2,     3,     5,
       6,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     2,     3,     3,     0,     1,     1,
       1,     1,     1,     1,     5,     3,     0,     1,     1,     1,
       1,     4,     7,     2,     0,     1,     1,     1,     1,    13,
      16,     1,     2,     0,     1,     0,     1,     0,     2,     0,
       1,     0,     6,     8,     6,     8,     6,     8,     1,     2,
       4,     3,     5,     1,     0,     1,     1,     0,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     1,     1,     1,     1,     1,     2,     1,     1,
       2,     3,     3,     1,     3,     3,     2,     3,     3,     3,
       3,     1,     1,     1,     1,     3,     5,     1,     1,     1,
       1,     3,     2,     1,     4,     5,     5,     4,     6,     1,
       1,     1,     1,     1,     1,     0,     1,     3,     1,     0,
       7,     1,     2,     3,     2,     0,     2,     0,     2,     4,
       2,     1,     1,     1,     2,     3,     2,     3,     4,     2,
       1,     3,     9,    11,    12,    14,     3,     4,     4,     0,
       7,    10,     2,     3,     0,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     124,   201,     0,  1032,  1031,   201,  1008,   201,   395,   330,
       0,     0,   201,     0,   124,     0,     0,     0,     0,   201,
     462,     0,     0,   201,     0,  1075,     0,     0,     0,     0,
       0,     2,     4,     7,    15,    25,    21,     0,    23,    13,
      18,     6,    27,    14,    17,    28,    10,    26,   429,   416,
     464,   428,   123,   432,    24,    12,    20,     5,     9,    19,
    1014,    31,    22,    29,    16,     8,    30,    32,    33,    11,
     200,   199,   193,     0,     0,     0,     0,     0,   194,   196,
     394,   124,     0,     0,     0,     0,     0,   324,   323,  1000,
     329,     0,     0,   956,  1116,  1117,  1118,  1119,  1120,  1121,
    1122,  1123,    95,  1124,  1125,  1126,  1127,  1128,  1129,  1130,
    1131,  1132,  1133,  1134,  1399,  1400,  1401,  1402,  1135,  1136,
    1137,  1138,  1139,  1140,  1141,  1403,  1404,  1142,  1143,  1144,
    1145,  1146,  1405,  1147,  1148,  1149,  1150,  1151,  1152,  1153,
    1154,  1155,  1156,  1157,  1158,  1159,  1160,  1161,  1162,  1163,
    1164,  1165,  1166,  1167,  1168,  1169,  1406,  1407,  1170,  1171,
    1172,  1173,  1174,  1175,  1176,  1177,  1178,  1179,  1180,  1181,
    1182,  1183,  1184,  1185,  1186,  1187,  1188,  1189,  1190,  1191,
    1192,  1193,  1194,  1195,  1196,  1408,  1197,  1198,  1199,  1409,
    1200,  1201,  1202,  1410,  1203,  1204,  1205,  1206,  1207,  1208,
    1209,  1210,  1411,  1412,  1211,  1212,  1213,  1214,  1215,  1216,
    1217,  1218,  1219,  1220,  1221,  1222,  1223,  1224,  1225,  1226,
    1227,  1413,  1228,  1229,  1230,  1231,  1414,  1415,  1416,  1232,
    1233,  1234,  1235,  1236,  1237,  1238,  1239,  1417,  1240,  1241,
    1242,  1243,  1244,  1245,  1246,  1247,  1248,  1249,  1250,  1251,
    1252,  1253,  1254,  1255,  1256,  1257,  1258,  1259,  1418,  1419,
    1260,  1261,  1262,  1420,  1263,  1264,  1265,  1421,  1266,  1422,
    1267,  1268,  1269,  1270,  1271,  1272,  1273,  1274,  1275,  1423,
    1276,  1424,  1277,  1278,  1279,  1280,  1281,  1282,  1283,  1284,
    1285,  1286,  1287,  1425,  1288,  1289,  1426,  1290,  1291,  1292,
    1293,  1294,  1295,  1296,  1297,  1298,  1299,  1300,  1301,  1427,
    1302,  1303,  1304,  1305,  1306,  1307,  1308,  1309,  1310,  1311,
    1312,  1313,  1314,  1315,  1316,  1317,  1318,  1319,  1320,  1321,
    1322,  1428,  1323,  1324,  1325,  1326,  1327,  1328,  1329,  1330,
    1331,  1332,  1333,  1334,  1335,  1336,  1337,  1429,  1338,  1339,
    1340,  1341,  1342,  1430,  1343,  1344,  1345,  1346,  1347,  1348,
    1349,  1350,  1351,  1352,  1353,  1354,  1355,  1431,  1356,  1357,
    1358,  1359,  1360,  1361,  1362,  1363,  1432,  1433,  1364,  1365,
    1434,  1366,  1435,  1367,  1368,  1369,  1370,  1371,  1372,  1373,
    1374,  1375,  1376,  1377,  1378,  1379,  1380,  1381,  1382,  1383,
    1436,  1437,  1384,  1385,  1386,  1387,  1388,  1389,  1390,  1391,
    1392,  1393,  1394,  1395,  1438,  1439,  1440,  1441,  1442,  1443,
    1444,  1445,  1446,  1447,  1448,  1396,  1397,  1398,    93,   936,
     957,   958,     0,   345,   346,     0,   354,     0,   343,     0,
     364,   356,   365,   357,   340,   358,   347,   339,     0,   366,
     341,     0,     0,     0,   197,  1290,   162,   330,   124,     0,
    1019,  1020,  1018,  1009,  1014,  1021,  1022,   955,  1063,  1062,
     151,   976,  1092,  1432,  1364,  1100,  1093,  1090,  1091,   198,
     461,   459,     0,   923,  1243,  1326,  1336,  1432,  1040,  1043,
       0,  1099,  1432,  1364,  1096,   195,     0,   433,   564,   932,
    1074,     0,  1079,     0,  1304,   437,   440,   967,   438,   429,
       0,     0,     1,   124,     0,     0,     0,   458,   458,     0,
     458,     0,   421,   429,   424,   428,     0,  1013,  1088,  1216,
       0,     0,  1216,     0,  1216,     0,  1216,     0,   978,   979,
     977,     0,   980,   297,   328,   327,   326,   325,   330,  1216,
     984,     0,     0,     0,     0,   995,    96,    94,   352,   353,
       0,   344,   342,     0,  1216,   363,   962,   359,  1216,   363,
     934,  1216,     0,     0,   158,     0,  1011,  1023,  1449,  1450,
    1451,  1452,  1453,  1454,  1455,  1456,  1457,  1458,  1459,  1460,
    1461,  1462,  1463,  1464,  1465,  1466,  1467,  1468,  1469,  1470,
    1436,  1471,  1038,     0,  1039,  1029,  1017,  1024,  1025,  1026,
     124,     0,     0,     0,     0,  1094,     0,     0,     0,   956,
     941,   943,   944,   851,   954,   918,  1400,  1401,  1402,   907,
       0,  1403,  1404,  1405,  1451,   788,   775,   784,   789,   776,
     778,   785,  1406,  1407,   729,  1184,  1408,  1409,   952,  1410,
    1411,  1414,  1415,  1416,  1417,   780,   782,  1418,  1419,     0,
     953,  1421,  1422,  1272,  1424,  1425,  1427,  1428,   786,  1430,
    1431,  1432,  1433,  1434,  1435,   951,   787,  1437,     0,     0,
       0,   929,     0,   918,   760,     0,   603,   604,   626,   627,
     605,   632,   633,   635,   606,     0,   928,   668,   805,   759,
     771,     0,     0,   758,   753,   444,   924,     0,   754,   940,
     942,   908,   938,   957,   961,   444,   922,  1041,  1046,  1042,
       0,     0,     0,     0,  1097,     0,     0,   566,   565,   915,
       0,   916,   933,  1073,  1071,  1072,  1070,  1069,  1076,     0,
    1078,  1014,   863,     0,   439,     0,     0,     0,   419,   418,
       3,     0,     0,  1081,     0,   456,   457,     0,     0,     0,
       0,     0,     0,     0,     0,   512,   478,   479,   481,   509,
     513,   521,     0,   425,     0,   967,     0,     0,   111,   111,
       0,     0,     0,     0,     0,    88,    37,    81,     0,     0,
       0,     0,   176,   189,     0,     0,     0,     0,     0,   186,
       0,     0,   169,    39,   163,   165,     0,   111,     0,    35,
       0,     0,     0,    41,     0,     0,   391,     0,     0,   981,
       0,  1216,   157,  1216,   297,     0,   297,   994,   997,   355,
     351,   349,   348,   350,     0,   361,   362,     0,   334,     0,
     963,     0,     0,   336,     0,     0,     0,     0,   124,     0,
     170,  1034,  1035,  1033,     0,     0,  1016,   173,   190,  1028,
    1037,  1027,  1036,  1015,  1010,  1052,  1051,  1060,   152,   867,
       0,   865,   938,     0,   959,   614,   643,   621,   643,   643,
     610,   610,   623,   611,   612,   648,     0,   643,   610,   615,
       0,   613,   651,   651,   638,   870,   595,   596,   597,   598,
     624,   625,   599,   630,   631,   600,   665,     0,   610,   960,
     124,  1095,  1101,     0,   756,   642,   629,   906,     0,     0,
     637,   636,     0,     0,     0,     0,     0,   619,   618,   617,
     762,   873,     0,   616,     0,     0,     0,     0,   643,   643,
     641,   691,     0,   620,     0,     0,   886,     0,   892,     0,
       0,     0,   647,     0,   645,     0,     0,   692,   672,   673,
     760,   863,     0,   755,   761,   947,     0,     0,   665,   927,
     851,     0,   848,   849,   850,     0,     0,     0,   921,     0,
     859,     0,     0,   706,   857,     0,   709,     0,     0,     0,
       0,   845,   846,   847,   839,   840,   841,   842,   843,   844,
     855,   838,   688,     0,     0,   807,     0,   687,     0,     0,
     528,     0,   945,   909,   528,  1054,  1058,  1059,  1057,     0,
    1053,  1045,  1044,  1049,  1047,  1050,  1048,  1098,     0,   914,
       0,   969,  1472,  1473,  1474,  1475,  1476,  1477,  1478,  1479,
    1480,  1481,  1482,  1483,  1484,  1485,  1486,  1487,  1488,  1489,
    1490,  1491,  1492,  1493,  1494,  1495,  1496,  1497,  1498,  1499,
    1500,  1501,  1502,  1503,  1504,  1505,  1506,  1507,  1508,  1509,
    1510,  1511,  1512,  1513,  1514,  1515,  1516,  1517,  1518,  1519,
    1520,  1521,  1522,  1523,  1524,  1525,  1526,  1527,  1528,  1529,
    1530,  1531,  1532,  1533,  1534,  1535,  1536,  1537,  1538,  1539,
    1540,  1541,  1542,  1543,  1544,  1545,  1546,  1547,  1548,   911,
     910,   937,   970,   971,   972,   973,   917,  1067,     0,  1064,
     525,     0,   441,     0,     0,  1087,     0,   118,     0,  1082,
       0,   436,   435,   465,   466,   472,   434,   498,   499,     0,
       0,     0,     0,   518,   516,   489,   482,   488,     0,     0,
     486,     0,   490,   668,   511,   423,   476,   477,   480,   422,
       0,   514,     0,   524,   512,   481,     0,  1089,     0,     0,
       0,     0,     0,  1216,     0,     0,    72,    53,   249,     0,
     110,     0,     0,     0,     0,     0,     0,     0,    80,    77,
      78,    79,     0,     0,     0,     0,   174,   175,   188,     0,
     179,   180,   177,   181,   182,     0,     0,   167,   168,     0,
       0,     0,     0,   166,     0,     0,     0,     0,     0,     0,
       0,     0,   381,   305,     0,   295,     0,     0,     0,     0,
       0,   330,   987,   985,   983,   986,   988,     0,     0,   154,
     156,     0,   294,   268,     0,   999,  1216,   996,   285,     0,
     363,   360,   964,     0,   363,   935,     0,   363,   161,  1216,
     297,     0,  1012,  1030,   171,   191,   172,   192,     0,   153,
       0,     0,     0,   595,   591,   587,   654,   655,   656,   653,
     666,   652,     0,   601,   657,   975,     0,   607,   610,   974,
       0,   919,     0,     0,   905,   901,     0,     0,     0,     0,
       0,     0,   874,   877,   878,   879,   876,   880,   875,     0,
       0,   881,     0,     0,     0,     0,     0,   640,   639,     0,
     837,   848,   849,   850,   845,   846,   847,   839,   840,   841,
     842,   843,   844,   861,     0,     0,     0,     0,     0,     0,
       0,     0,   730,     0,     0,   832,     0,   863,   891,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   863,
     897,     0,   918,     0,     0,     0,     0,   948,   669,   683,
     684,   685,   689,   926,     0,   920,     0,     0,   670,   697,
       0,   898,   725,     0,   713,     0,   705,     0,   711,   715,
     693,   708,     0,   690,     0,   921,   860,     0,   858,     0,
     680,   681,   682,   674,   675,   676,   677,   678,   679,   686,
     836,   834,   835,     0,     0,     0,   815,     0,     0,   710,
    1209,  1243,     0,   455,   455,   455,   443,   453,   925,     0,
     581,     0,     0,     0,     0,   763,   464,   581,     0,   665,
     567,   912,   915,   967,  1077,  1065,  1066,   864,   966,   124,
       0,  1085,     0,     0,     0,   130,   113,     0,  1083,     0,
     146,   528,     0,   918,     0,   470,   471,     0,   475,  1428,
    1323,     0,     0,     0,     0,   491,   519,     0,   510,     0,
     941,   492,   940,   493,   496,   497,   487,   520,   930,   522,
       0,   515,   427,   426,   526,     0,    38,     0,  1216,    55,
       0,     0,     0,     0,     0,     0,   204,   240,   204,    92,
    1216,   363,  1216,   363,  1120,  1185,  1337,     0,    51,    84,
       0,   273,   104,     0,   258,   302,    74,    89,    97,     0,
       0,    40,   164,   178,   183,   100,   187,   184,  1004,   185,
     111,     0,    36,     0,    98,     0,  1002,     0,     0,    42,
     102,  1006,   380,     0,   296,     0,   390,   370,   371,   381,
       0,   297,   984,     0,     0,     0,     0,     0,   288,   286,
     316,     0,   293,   287,   295,     0,     0,   244,     0,  1114,
       0,     0,     0,     0,   333,   965,   335,     0,   337,     0,
       0,  1061,   866,   868,   869,   592,   588,     0,     0,     0,
       0,     0,     0,     0,     0,   871,   608,   460,     0,     0,
       0,   902,     0,     0,   801,     0,   777,   779,   609,   791,
       0,   622,   802,   803,   781,   783,     0,   852,     0,     0,
       0,   792,   732,   733,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   748,   747,   793,   831,     0,     0,   889,   890,   794,
     650,   649,   651,   651,     0,     0,   896,     0,     0,     0,
     799,   757,   864,   634,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   714,   707,     0,   712,   716,     0,     0,
       0,   701,     0,     0,   699,   726,   695,     0,     0,   727,
       0,     0,     0,   770,   455,   455,   455,   455,   452,   454,
       0,     0,     0,     0,  1323,     0,   550,   527,   529,   537,
     550,   555,   772,   579,   773,     0,   932,     0,   501,   464,
     464,   464,   769,     0,     0,   463,   501,     0,  1055,   914,
       0,  1068,     0,  1086,     0,   135,   117,   137,   136,     0,
     144,     0,   918,     0,   135,   119,     0,   138,     0,  1085,
       0,   150,   467,     0,   853,   475,     0,   469,   495,   494,
       0,   485,   517,   483,     0,   523,     0,     0,     0,   248,
       0,     0,     0,   204,     0,     0,   312,     0,   299,    73,
       0,     0,     0,    47,     0,    65,    57,    43,    71,     0,
       0,    76,     0,    69,    86,    87,    85,    90,     0,   232,
     214,   245,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   169,   411,   306,
       0,     0,   999,   982,     0,     0,   157,   297,     0,   272,
     268,     0,   266,   265,   267,     0,  1115,   162,     0,  1110,
     998,     0,     0,   993,   363,     0,     0,     0,   593,     0,
     659,   660,   661,   662,   663,   664,     0,   658,   602,   628,
       0,   904,   900,     0,   774,   872,     0,   862,   884,   883,
     731,   743,   744,   745,   885,     0,     0,     0,   740,   741,
     742,   734,   735,   736,   737,   738,   739,   746,   894,   893,
     887,   888,   646,   644,     0,   796,   797,   798,   895,   833,
     665,   949,   671,     0,     0,   698,   899,   717,     0,     0,
       0,   694,   852,     0,     0,     0,     0,     0,   703,     0,
       0,     0,   818,   813,   814,     0,     0,     0,     0,   446,
     445,   451,   550,   555,     0,     0,   429,     0,   537,     0,
     549,   535,   548,     0,     0,   561,   559,     0,   561,     0,
     561,     0,   531,     0,   551,   533,   548,     0,   571,     0,
     933,   580,     0,   508,     0,     0,     0,     0,   764,   508,
       0,   913,   442,  1084,     0,  1080,     0,     0,     0,   125,
     122,   112,     0,     0,   147,   135,   126,     0,   468,   473,
     474,   484,   931,   105,   204,     0,     0,    54,     0,   314,
     260,   292,   275,     0,     0,     0,   205,     0,   280,     0,
      46,    66,     0,    62,     0,    91,     0,     0,     0,     0,
       0,    49,    61,     0,    44,     0,   363,   363,    52,   259,
     211,  1272,     0,   839,   840,   209,   301,   206,   307,   208,
     210,   610,   207,   304,   101,  1005,     0,    99,     0,  1003,
     108,   106,   103,  1007,   393,   373,     0,     0,  1216,     0,
     999,   155,   294,     0,   322,   244,   317,     0,  1114,  1112,
       0,  1109,     0,     0,     0,   338,     0,     0,   589,   594,
     667,   903,   790,   800,   882,     0,     0,     0,     0,   795,
     950,   723,   721,   718,     0,   719,   702,     0,     0,   700,
     696,     0,   728,   804,     0,   820,   817,   450,   449,   448,
     447,   536,   534,   939,     0,   539,   546,     0,   530,     0,
     560,   556,     0,   557,     0,     0,   558,     0,     0,   532,
       0,   546,     0,   578,   464,     0,     0,   809,   767,   768,
     765,   464,   946,   809,  1056,   134,   114,     0,   115,   145,
       0,     0,     0,     0,   139,   367,     0,   310,    56,     0,
     292,     0,   204,   277,   276,   279,   274,   278,   281,     0,
       0,     0,     0,     0,   261,     0,     0,     0,   225,     0,
       0,   292,   298,   221,   222,   331,     0,     0,     0,    58,
      48,    45,    50,    59,     0,     0,    60,    63,   586,    75,
      68,   610,   610,     0,     0,     0,     0,   369,   382,   376,
     169,     0,     0,     0,     0,   294,     0,     0,     0,  1114,
       0,     0,   202,     0,   241,     0,   159,  1113,     0,  1102,
       0,   991,   992,     0,     0,   590,   749,     0,     0,     0,
     720,   724,   722,   704,   806,     0,   464,   574,     0,   577,
     538,     0,     0,   540,     0,     0,   542,   544,     0,     0,
       0,     0,   582,     0,     0,     0,   936,     0,     0,   500,
     502,   505,   504,   507,     0,   431,     0,   430,     0,     0,
       0,   148,     0,   141,   141,     0,   127,   854,     0,   204,
       0,   291,   311,   239,     0,     0,   223,     0,   229,     0,
     263,   264,   262,   224,   292,   297,   226,   332,     0,    67,
       0,    83,   610,     0,   303,   109,   107,   414,     0,   388,
     396,   401,   379,     0,   379,     0,   398,   402,   379,   397,
     379,   392,   393,     0,   999,  1109,     0,     0,   268,   162,
    1111,   257,   250,   251,   252,   253,   254,   255,   256,   271,
     270,   242,   243,     0,     0,     0,   993,     0,   750,     0,
     751,     0,   823,   579,     0,     0,   573,     0,   547,   563,
       0,   543,   541,     0,   552,     0,   586,     0,   554,   764,
     506,     0,   808,   810,     0,   766,     0,   121,     0,   581,
       0,     0,   143,   143,   129,     0,   297,   313,     0,   283,
     290,   282,     0,     0,   220,     0,   227,   321,   213,   585,
       0,    70,     0,   308,   383,     0,   386,     0,   385,   389,
     384,   378,     0,   409,     0,     0,     0,     0,     0,     0,
     368,   372,     0,  1103,     0,  1109,   244,  1114,     0,  1106,
       0,     0,   999,   752,   819,     0,     0,     0,   572,   575,
       0,   545,     0,     0,   583,   584,   553,   503,     0,     0,
     116,   141,   120,   149,   140,   472,   142,   472,     0,   321,
     269,     0,     0,   247,   213,     0,   238,     0,    64,    82,
     309,   415,     0,   374,   410,   399,   404,     0,   408,   406,
     405,   400,   403,     0,   294,  1104,   203,   160,  1107,  1108,
       0,   581,  1399,  1163,  1371,     0,   821,   824,   822,   816,
       0,   562,   570,   811,   812,   143,   475,   475,   581,   238,
     284,   289,     0,   228,   230,   318,   319,   320,     0,   234,
     231,   235,     0,   387,     0,   407,  1109,     0,   989,     0,
     828,   827,   826,   830,   829,   576,     0,   568,   472,   132,
     131,   128,   204,   246,     0,     0,     0,   236,     0,   237,
     212,   375,  1105,   999,     0,     0,   475,   315,   217,     0,
     216,     0,   300,   233,   581,   825,     0,   133,   215,   219,
     218,   990,   569
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    30,    31,    32,    33,  1795,  1796,  1797,  1517,   785,
    2421,  1518,   786,   787,  1799,    34,    35,  1182,   460,  1455,
    1126,  2162,    37,  1750,  1460,  1754,  2291,  1985,  1749,  1756,
    2402,  2475,  1751,  1461,  2292,  1462,    38,    39,  1239,    40,
     574,    41,  1240,  1209,   865,   805,  1199,   857,    42,    72,
      43,  1786,  2046,  2488,  1809,  2582,  2192,  2193,  1519,  2539,
    2540,  1788,  1846,  1191,  2533,  1568,  2359,  1523,  1506,  2194,
    1577,  2301,  2074,  1520,  2016,  1569,  2179,  2408,  1247,  1570,
    2409,  2172,  1571,  1223,  1243,  2018,  2541,  1524,  1224,  2047,
    1178,  1572,  2486,  1573,    91,  2197,    44,   451,   452,   565,
     838,   453,   461,    46,  1559,  2220,  2492,  2221,  2432,  1553,
    2217,  2429,  2327,  1227,  2218,    82,  2341,  2493,  1827,  2328,
     462,   684,    49,    50,    51,   511,   505,   506,  1010,  1426,
    1710,   757,   482,   483,   521,  1735,  1133,  1134,  1468,  1767,
    1158,  1159,   766,   767,  1146,  1150,  1151,  1481,  1474,  1139,
    1973,  2279,  2280,  2281,  2147,  1154,  1155,   769,   770,   771,
    1163,  1491,    53,  1430,  1717,  1718,  1719,  1950,  1951,  1965,
    1961,  2131,  2266,  1720,  2139,  2557,  1721,  2257,  2258,  2376,
    1968,  1728,  2271,  2272,  2321,   895,  1275,   896,   685,   897,
    1287,   686,   933,   899,   687,   688,   689,   902,   690,   691,
     692,   693,   916,   694,   695,   952,  1283,  1284,   742,  1341,
     697,   698,   699,  1723,   700,  1005,  1416,  2285,  2392,  2393,
    1703,  1933,  2115,  2256,  2457,  2516,  2517,   701,  1413,  1000,
    1001,   702,  2049,  1003,  1334,  1360,   870,   871,   907,  1309,
    1310,  1337,  1630,  1344,  1349,  1657,  1658,  1361,  1382,   703,
    1294,  1295,  1612,   918,   704,   731,  1030,   964,   914,  1377,
     715,   705,   706,  1487,   498,  2262,   570,  1110,   707,   708,
     709,   710,   711,   712,  2476,   840,   747,   873,  1521,    54,
     614,   541,    55,   819,  1234,    56,  2242,  2084,   828,  1249,
    1581,    92,    57,    58,    59,   528,   860,   463,   861,   862,
     603,    60,   866,   605,   606,    61,   488,   489,   867,  1021,
     868,    62,   469,    63,   738,   502,   739,   741,   465,   754,
    1745,  1451,    65,    66,   476,   477,    67,   490,    68,  2239,
     466,  1849,   825,   430,   431,   714,  1115
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2247
static const int yypact[] =
{
    2450,   -77,    20, -2247, -2247,   -77, -2247,   -77,    53,  1978,
   29629,  5175,   -77, 33661,   924,   311, 33661, 33661, 30077,   -77,
     230, 34109, 30525,   -77, 30973,    -4,  -124, 34557, 33661,  1109,
     337,   -93, -2247, -2247, -2247, -2247, -2247,   107, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,    94, -2247,
     359,   160,   423,   -59, -2247, -2247, -2247, -2247, -2247, -2247,
     -35, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, 35005, 33661, 35453, 31421, 35901, -2247, -2247,
   -2247,  1109, 33661,   600,   622,   180, 36349, -2247, -2247, -2247,
   -2247,   457,   344, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, 31869, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247,   424, -2247, -2247,   318, -2247,    50, -2247,   313,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,   447, -2247,
   -2247, 36797, 37245, 37693, -2247, -2247,   296,   566,   507, 17743,
   -2247, -2247, -2247, -2247,   -35, -2247, -2247, -2247, -2247, -2247,
    -145,   348, -2247,   355,   623, -2247, -2247, -2247,   368, -2247,
   -2247,   628,  7545,  7545, 38141,   311, 38141,   486, -2247, -2247,
      15, -2247,   509,   763,   368, -2247, 18645, -2247,   527,    11,
   -2247,   189,   817,  9895, 33661,   526, -2247,   553,   526,   570,
     607,   423, -2247,  2450,   917,   881, 30973,   269,   269,  1072,
     269,   754,   935, -2247,   884, -2247,   673, -2247, 33661,  1000,
      95,   832,  1022,  3649,  1056,   721,  1059,   967, -2247, -2247,
   -2247,   742, -2247,   771, -2247, -2247, -2247, -2247,   566,   991,
   -2247,   823, 38589, 39037, 33661,  1172, -2247, -2247, -2247, -2247,
     835, -2247, -2247,    68,  1112,    47,   812, -2247,  1153,    51,
   -2247,  1187,  1076,  9895, -2247,   961, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
    -124, -2247, -2247,   215, -2247, -2247, 23978, -2247, -2247, -2247,
     507, 23978,  9895, 43069,  1311, -2247,  1137, 33661,   911,    85,
   -2247, -2247, -2247, -2247, -2247, -2247,  1387,    74,  1398,  9895,
     943,    74,    74,   945,  1257, -2247, -2247, -2247,    92,   953,
     954, -2247,   121,   121, -2247,  1134,   974,   978, -2247,   125,
    1004,  1462,  1468,   126,  1007,  1008,  1010,   591,    74,  9895,
   -2247,  1016,   121,  1018,  1020,  1024,  1484,  1026, -2247,  1490,
    1029,   133,   152,  1030,  1032, -2247, -2247,   127,  9895,  9895,
    9895, -2247,  6605, -2247,    11,   311, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247,  1033, -2247,   131,  4312, -2247,  1077, -2247,
   -2247,  1235,  9895, -2247, -2247,   -49, -2247,   140, -2247, -2247,
   -2247,    11, -2247,   120, -2247,  1312,  1044, -2247, -2247, -2247,
     206,  1428, 23082, 23530, -2247,  1305, 33661, -2247, -2247,  9895,
   22186, -2247,    11, -2247, -2247, -2247, -2247, -2247, -2247,   338,
   -2247,   -35, 25022,   357,   526, 33661, 33661,  1494, -2247, -2247,
   -2247, 30973, 33661, 39485,  1180, -2247, -2247,   423,   423,  9895,
     423,   119,   496,  8015, 10365,  1376,  1274,    96,   141,  1383,
   -2247,  1280,   754,   935,  9895,   553, 33661, 28285,   595,   686,
    1075,  1155,  1078,   395,  1463, -2247,  1079, -2247,  1165, 33661,
   43503,   154, -2247,  1505,   154,   154,   558,  1511,  1181,   218,
    1328,   -60,   237,  1079,  1314, -2247, 30973,    79,   561,  1079,
   33661,  1184,   710,  1079,  1186, 33661,  1147,   -69,  1440,  1496,
   33661,  1339,  1314,  1341,  1124,  1558,   771, -2247, 39933, -2247,
   -2247, -2247, -2247, -2247, 33661, -2247, -2247, 33661, -2247, 25597,
    1128, 33661, 33661, -2247, 33661, 33661,   450, 40381,   507, 27389,
   -2247, -2247, -2247, -2247,   680,   706, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,  1127, 25022,
     498, -2247,   767,   785, -2247, -2247,  1182, -2247,  1182,  1182,
    1138,  1138,  1139, -2247, -2247, -2247,   591,  1182,  1138, -2247,
   43503, -2247,   533,   576, -2247, -2247,  1570, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247,   781,   571,  -163, -2247,
    1109, -2247, -2247,  9895,    11, -2247,  1142, 25022,  1185,  9895,
   -2247, -2247,  9895,  1143,  1605,  1605,  9895, -2247, -2247, -2247,
   -2247,   904,  1605, -2247,  9895,  9895,  1605,  1605,  1182,  1182,
   -2247, 25151,  9895, -2247, 20897,  9895, 12715,  8485,  9895,  1230,
    1231,  1605, -2247,  1605, -2247,  9895,  7075, 25151,  1607,  1607,
    1827,  4459,  1150,    11,    11, -2247,  1605,    58,   748, -2247,
     173, 43069,  9895,  9895,  9895,  9895, 25597,  1236,   114, 33661,
    9895,  1158,  1099, -2247,  9895,  1370, -2247,  1163,  9895,  1243,
     153,  9895,  9895,  9895,  9895,  9895,  9895,  9895,  9895,  9895,
   -2247, -2247, 14584,   198,  1461,  1480,   -96,   176, 32317,  7545,
    1474,  5665, -2247,   139,  1474, -2247, -2247, -2247, -2247,   142,
   -2247, -2247, -2247, -2247,  1127, -2247,  1127, -2247,  1171,  5201,
    1168, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, 33661,   189, 29181,
   -2247,  9895, -2247,   596,  1178,  1232,   540,  1611, 33661, -2247,
   19095,  1446, -2247,  1179, -2247, 24423,  1446, -2247, -2247, 13174,
    1298,  1442,  1388, -2247, -2247, -2247,  1192, 25022, 10835, 10835,
   -2247,   536, 25022,   580, -2247, -2247, -2247, -2247, -2247, -2247,
     518, -2247, 33661,   387,  1376,   141,   606, -2247,  1106,  1189,
   40829, 33661,  1447,  1415,  1457,  -119, -2247, -2247, -2247, 43069,
   -2247, 33661, 33661, 41277, 41725, 26045, 33661, 25597, -2247, -2247,
   -2247, -2247, 33661,   900, 33661, 21735, -2247, -2247, -2247,   154,
   -2247, -2247, -2247, -2247, -2247, 33661, 33661, -2247, -2247,   154,
   33661, 33661,   154, -2247,  1130, 33661, 33661, 33661, 33661,  1198,
   33661, 33661,  1367, -2247,   612, -2247,  1411,     5,  1253, 33661,
   33661,  1176, -2247, -2247, -2247, -2247, -2247,  1210,  1535, -2247,
    1314,  1537, 28733,   661,    25,  1251,  1434, -2247, -2247,  1420,
      47, -2247, -2247, 25597,    51, -2247,  1421,   116, -2247,  1441,
     771,  1656, -2247, -2247, -2247, -2247, -2247, -2247, 23978, -2247,
    9895,  9895,  9895,  1661,  1240,  1244,  1308,  1309,  1313, -2247,
    1233,  1320,  1605, -2247, -2247, -2247, 43069, -2247,   643, -2247,
     630, -2247,  9895,  9895,    18, -2247, 24495,   631,  9895,  1242,
    1247,   678, -2247, -2247, -2247, -2247, -2247, -2247, -2247,  1250,
    1557, -2247,  1252,   682,   697,  1255,  1264, -2247, -2247,  3980,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247, -2247,  1265,  1256, 24533,  1267, 12715, 12715,
    6605,  2357, -2247, 12715,  1269, -2247,   729, 24436,  1268,  1270,
    1290,  1291,  1275,  1276, 24552,  8955,  9895,  8955,  8955, 24893,
    1268,  1277, -2247,  9895,  1279,  1281,  1282, -2247, -2247,  2157,
    2157,  2157, 25151, -2247,  1304, -2247, 12715, 12715, -2247,  3248,
    6605, -2247, -2247,  1586, -2247,   632, -2247,  1288, -2247, -2247,
    3419, -2247, 20897, 25111,  9895,   122,  9895,  1158,  9895,  1368,
    2157,  2157,  2157,   196,   196,    75,    75,    75,   701,   176,
   -2247, -2247, -2247,  1293,  1294,  1295,  1481,  1026,  9895, -2247,
     792,   880, 33661,  2873,  3045,  3803, -2247, -2247, -2247, 15943,
    1331,  9895,  9895,  9895,  1297, -2247,   -70,  1331,  1605,   748,
   -2247, -2247,  9895,   553, -2247, -2247, -2247, 25022, -2247,  1109,
   15943,  1343,  1350,   -85, 18194,  1506, -2247, 33661, -2247, 33661,
   -2247,   -23,  1317, -2247,  9895, -2247, -2247,   441,  1319,  1507,
    1509,   733,   733,   536,  1512, -2247, -2247,  1369, -2247,  9895,
     827, -2247,   855, -2247, -2247, -2247, -2247,  1318, -2247, -2247,
    1556, -2247, -2247, -2247, -2247,  1403,  1079,  9895,  1542, -2247,
     117,  1329,  1652,   -87,  1616, 33661, -2247,  1529, -2247,   640,
    1662,   116,  1664,   116, 25597, 25597, 25597,   731, -2247, -2247,
     311, -2247, -2247,   757, -2247,    57, -2247, -2247, -2247,  1418,
     736,  1079,  1314, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
     112,   741,  1079,  1422, -2247,  1423, -2247,  1424,   877,  1079,
   -2247, -2247, -2247,   136, -2247, 33661, -2247, -2247, -2247,  1367,
   33661,   771, -2247,   960, 33661, 33661, 33661, 33661, -2247, -2247,
   -2247,  1346,  1355, -2247, 43069,   -89,  1563,  1565, 33661,  1399,
    1078,  1797,  1688, 33661, -2247, -2247, -2247, 33661, -2247,  1691,
    1109, -2247, -2247, 25022, 25022,  1372,  1244,  1605,   100,    44,
     383,  1497,  1605,  1601,  1377, -2247, -2247, -2247,   776, 25009,
    9895, -2247,  1708, 43069, -2247,  4983, -2247, -2247, -2247, -2247,
    9895, -2247, -2247, -2247, -2247, -2247,  9895, -2247, 20897,  9895,
    1684, -2247,  1836,  1836,  4459, 43069, 12715, 12715, 12715, 12715,
     497,  1018, 12715, 12715, 12715, 12715, 12715, 12715, 12715, 12715,
   12715, 13644,   240, -2247, -2247,  9895,  9895,  1693,  1684, -2247,
   -2247, -2247,  -143,  -143, 43069,  1384,  1268,  1386,  1389,  9895,
   -2247,    11, 21353, -2247,  1379,   311,  9895,  1657,  2708,  9895,
     784,  9895,  1697, -2247, -2247,  1393, -2247, -2247, 43069,  9895,
    1394,  3446, 12715, 12715,  3929, -2247,  4602,  9895,  6605, -2247,
    1583,  1437, 19545, -2247,  1489,  1489,  1489,  1489, -2247, -2247,
   33661, 33661, 33661, 16393,  1709, 15492, 32765,  1406,   670, -2247,
   32765, 33213, -2247,  1417, -2247,  1413,    11,  9895,  1707,   -42,
     -42,  1583, -2247,  9425,  1414, -2247,  1707,  1425, -2247, 25022,
    1419, -2247,  1426,  1406,  9895,  1555, -2247, -2247, -2247,  1470,
   -2247,   797, -2247,  1807,  1555, -2247,   802, -2247, 19095,  1343,
    9895,    11, -2247,  1432, -2247,  1319,   167, -2247, -2247, -2247,
    1623, -2247, -2247, -2247, 33661, -2247, 33661, 21371,  1756, -2247,
   33661, 33661, 33661, -2247, 33661,   807,   534,  1436, -2247,   534,
    1739,   535,  1078,   218,  1899,   -10, -2247, -2247, -2247,  1519,
   33661, -2247, 33661, -2247, -2247, -2247, -2247, -2247, 26045, -2247,
   -2247, -2247, 25597, 20448, 25597, 33661, 33661, 33661, 33661, 33661,
   33661, 33661, 33661, 33661, 33661, -2247, -2247,   237, -2247, -2247,
     136,  1451,  1251,  1496, 42173,   808,  1314,  1452,  1885, -2247,
     661, 28733, -2247, -2247, -2247,  1844, -2247,   296,   134, -2247,
   -2247,  1109, 33661,  1513,   116, 33661,  1605,  1456, -2247,  1460,
   -2247, -2247, -2247, -2247, -2247, -2247,  1464, -2247, -2247, -2247,
    9895, 25022, -2247,  1467, -2247, 25022, 21390, -2247, 25022,  1693,
   -2247,  2780,  2780,  2780,  4620,  1766,   169,  1475,  2780,  2780,
    2780,   233,   233,    84,    84,    84,  1836,   240, 25022, 25022,
   -2247, -2247, -2247, -2247,  1473, -2247, -2247, -2247,  1268, -2247,
     748, -2247,   663,  9895,  9895,  2721, -2247,  4242,  9895, 43069,
     828,  2721,   257,  9895,  3490,  4197,  9895,  9895,  5076, 21428,
    1478,  9895, 42621, -2247, -2247, 33661, 33661, 33661, 33661, -2247,
   -2247, -2247, 32765, 33213,    11,  1492, 15041,   670,  1483, 33661,
   -2247, -2247,  1495, 15943,  1720,  1655, -2247, 15943,  1655,   510,
    1655,  1748,  1569, 19995, -2247, -2247,  1499,  1695, -2247,  5665,
     390, 25022,  1908,  1795,  1502,  1503,  1504,  9895,   311,  1795,
     311, -2247, -2247, 25022,  7545, -2247,  1109,   979, 33661,    11,
     -48, -2247,  1518, 33661, -2247,  1555, 25022, 20897, -2247, -2247,
   -2247, -2247, -2247, -2247, -2247, 33661,   847, -2247,   848,   534,
   -2247,  1545, -2247,   161,  1787,    55, -2247, 25597,  1536,   274,
   -2247,  1799,  1725, -2247,   154, -2247,  9895,   274,  1726,   157,
   33661, -2247, -2247,  2614, -2247, 43069,   116,   116, -2247, -2247,
   -2247,  1432, 43503,   680,   706, -2247, -2247, -2247, -2247, -2247,
   -2247,  -163, -2247,  1527, -2247, -2247,  1597, -2247,  1598, -2247,
   -2247, -2247, -2247, -2247,  1520,    22, 33661,  1955,  1740,  1525,
    1251, -2247, 28733,   531,   137,  1565, -2247,   124,  1399, -2247,
    1891,  1571,  1733, 33661,  1533, -2247,  1969,  1541, -2247, -2247,
   -2247, 25022, -2247, -2247, -2247, 12715,  1849,  1546, 43069, -2247,
   -2247,  2721,  2721,  4242,   853, -2247,  2721,  9895,  9895,  2721,
    2721,  9895, -2247, -2247, 21447,  1727, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247,    11, 26493, 32765,  1547, 33661,   670, 15943,
   -2247, -2247,  1315, -2247, 15943,  1806, -2247, 15943, 27837, -2247,
   33661,  1549, 33661, -2247,   -70, 11305,  9895,  1588, -2247, -2247,
   -2247,  1583, -2247,  1588, -2247,  1044, -2247,   -85, -2247, -2247,
    1935, 16843,  1893,  9895, -2247, -2247,  1553,   534, -2247,  1710,
    1545,  1559, -2247, -2247, -2247, -2247, -2247, -2247, -2247,   859,
    1560, 33661, 33661, 12715, -2247,   274,   188,   128, -2247,  1814,
   33661,  1545, -2247, -2247, -2247, -2247,  1917,  1995,  1887, -2247,
   -2247, 25022, -2247, -2247,  1605,  1605, -2247, -2247,  1963, -2247,
   -2247,  -163,   654, 20448, 33661, 33661, 25597, -2247,  2665, -2247,
     237,  1919,   890,  1109,  1890, 28733,  2003,  1572, 33661,  1399,
    1358,  1358, -2247,  1705, -2247,  1712, -2247, -2247,   192, -2247,
   33661, -2247, -2247, 16843,  1109, -2247,  4768, 12715, 43069,   891,
   -2247,  2721,  2721,  2721, -2247,  1989,  1583, -2247,   899,  2009,
   -2247, 33661,   901, -2247,  9895,  1578, -2247, -2247, 15943,  1315,
    1580,   903, -2247, 43069, 33661,   914, 43069,  1584,  6135,  1582,
   -2247, -2247, 25022, 25022, 33661, -2247,  1587, -2247,  1635, 33661,
    9895, -2247,   918,  1983,   175,   -13, 25022, -2247, 33661, -2247,
   25597, -2247,   534, -2247, 25597,  9895, -2247,  1618,  4620,  2021,
   -2247, -2247, -2247, -2247,  1545,   771, -2247, -2247,  1879, -2247,
   33661,  1647,   657,  1663, -2247, -2247, -2247, -2247,   919, 17293,
   -2247, -2247,  2024,   311,  2024,   621, -2247, -2247,  2024, -2247,
    2024, -2247,  1520,   311,  1251,  1571, 33661,  1109,   661,   296,
   -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247, -2247,
   -2247, -2247, -2247,  1998,  1791,  2001,  1513,   931,  4768,   936,
   -2247,  9895,    -5,  1417, 26493,  1602, -2247,   940, -2247, 25022,
   33661, -2247, -2247,  9895, -2247, 33661,  1963,   948, -2247, -2247,
   -2247, 11305,  1599, -2247,  2033, -2247,  1109, -2247, 21465,  1331,
   16843, 33661, 33661, 33661, -2247,  1721,   771,   534,   965, -2247,
    1620, -2247, 21500,  1816, -2247,  1897, -2247,  1845,  1612, -2247,
    9895, -2247,  1682, -2247, -2247, 25597, -2247, 26941, -2247, -2247,
   -2247, -2247,   311, -2247,   311,  1825, 33661, 22634,   311,   311,
   -2247, -2247,  2050, -2247,  1621,  1571,  1565,  1399,  1818, -2247,
    1820,  1624,  1251, -2247,  1268, 11775, 11775,  1625, -2247, -2247,
   33661, -2247,   986,   993, -2247, -2247, -2247, -2247, 33661,  1627,
   -2247,  1983, -2247, -2247, -2247,   224, -2247,   224, 19095,  1845,
   -2247, 25597, 20448,  1843,  1612,    35,  1830,  1314, -2247, 25022,
   -2247, -2247,   994, -2247, -2247, -2247, -2247, 33661,  1626, -2247,
    1626, -2247, -2247,  1109, 28733, -2247, -2247, -2247, -2247, -2247,
   16843,  1331, 14114,  1765,    77, 24476, -2247, -2247, -2247, -2247,
     995, -2247,  1780, -2247, -2247, 33661,  1319,  1319,  -130,  1830,
   -2247, -2247,  1912, -2247, -2247, -2247, -2247, -2247,    64,  1839,
   -2247,  1840,  1340, -2247, 26941,  1626,  1571,  1001, -2247,  2075,
   -2247, -2247, -2247, -2247, -2247, -2247,  1641, -2247,   224, -2247,
   -2247, -2247, -2247, -2247,    86,    86,  1993, -2247,  1701, -2247,
   -2247, -2247, -2247,  1251, 12245,  9895,  1319,   534, -2247,  2093,
   -2247,    93, -2247, -2247,  1331, -2247, 21732, -2247, -2247, -2247,
   -2247, -2247, -2247
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2247, -2247, -2247,  1629, -2247, -2247, -2247,   334, -2247,   939,
   -2247,   325,  -354,   627, -2247, -2247, -2247,  -727,    30, -2247,
   -2247, -2247, -2247,   156,   382, -2247,  -254, -1590,    -8, -2247,
   -2105, -2150, -2247,  -331, -2029, -1390, -2247,  -781,   315, -2247,
   -1777, -2247,  -532,  -782,  -598,  -800, -2247,   123, -2247,  1157,
    -768, -1447, -2043,  -326, -2247,  -406, -2247,  -154, -1457,  -378,
    -360, -2247, -1948,  -722, -2247,  1401,   -67, -2247,   668, -2247,
   -1759, -2247, -2247,   660, -2247,  -746, -2247, -2247, -1532,   335,
    -301, -1783, -1976,   626,  -527, -2247,  -355,   373, -1421, -2247,
     687, -2247,  -291, -2247,  -399, -1854, -2247, -2247, -2247,  1352,
    -534, -2247,    32, -2247, -2247, -2247, -2247, -2247, -1315,   633,
    -153, -2247,  -235, -2247, -2247, -2247, -2247,  -349,   366, -2247,
      10,   174,   -27,    16,    37,    33,    45,  1454,  1485, -2247,
    -412,   805, -2247, -2247,  -490,   -47, -2247,   737, -1602, -1709,
    -335,  1037,  1438,  1443, -2247,   727,  1068, -1037, -1022, -2247,
     472, -2247,  -181, -2247,   232,  -293,  1048, -2247,  1444, -2247,
   -2247, -2247, -2247,  -922,   768, -1627,   502, -1611, -1529,   276,
     262,  -627,   -45,    24, -2247, -2247,   512,  -152, -2247, -2247,
    -146, -1398, -1986,  -151,  -155,  -947,   962,  -753, -2247, -2247,
    -616,  -400, -2247, -2247, -2247,  -240,   809, -2247, -2247,  1287,
    1449, -2247,   501,  1619,  -408,  -631,  -928,  -649,  3062, -1069,
    -588, -1034, -2247, -1881,   614, -2247, -2247,    83, -2247,  -231,
   -2247,  -229, -2247, -2247, -2247,  -218, -2246,  1239, -2247,  -931,
   -2247,  3215,   779, -2247, -1328,  -488,  -967, -1221, -1623, -2247,
   -2247, -2247, -2247, -2247, -2247, -1009, -1456,  -531,   851, -2247,
   -2247,   956, -2247, -2247, -2247,  -679,   810,  -494,  -641,   858,
   -2247,  -474,  1246, -2247,   186,  -431,    91,  -711,  -606, -2247,
    2264,   -15,     1,   723,  -445,  -872,  -713, -2247,  -718, -2247,
   -2247,  -847, -2247,   694, -2247,  -765, -2247,  -109, -2247, -2247,
   -1761, -2247, -2247, -2247, -2247,  -313, -2247,  -365,  -343, -2247,
   -2247,    36,  -599,  1410, -2247, -2247,   879, -2247,   992, -2247,
     675, -2247, -2247, -2247,  1146, -2247, -2247, -2247,    43,  1510,
     508, -2247,  1151, -2247, -2247, -2247, -2247,   700,  -764, -2167,
      72, -1958,  -802,  1711,  -377,  -324, -1747
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1455
static const yytype_int16 yytable[] =
{
     468,   804,   510,   522,  1213,   732,   567,   863,   856,   716,
      47,   429,  1111,  1333,   429,   743,   816,   470,   429,   475,
    1212,   569,   475,   475,  1368,   499,   927,   928,   429,   429,
      36,  1177,    45,    52,   772,   843,  1288,  1196,  1232,  1736,
    1367,   954,   963,    64,  1436,  1261,   943,    52,   497,  1592,
     464,  1233,  1184,  1116,  1235,  1236,  1998,  1804,   575,  1806,
    1188,  1789,  1167,  1289,  1690,  1920,  2052,   624,   524,  1757,
    2078,  2067,    69,   508,   499,   429,   499,   499,   499,  -643,
    1217,  2075,   608,   499,  1785,   846,   971,   550,  1947,   525,
    -959,   540,  1437,   576,  -417,  1635,  2227, -1454,  -959,  -959,
     535,   428,    80,   835,   456, -1454, -1454,   835,   471,   624,
    1964,   538,  1483,   539,    52,   977,   602,   777,   507,   507,
    2236,  1111,  1018,   778,   542,  -960,  -610,  2232,  1252,  1486,
    -623,  -648,  -638,  -960,  -960,   609,   467,  1273,  -651,  1429,
    -377,   467,  2578,  1835,  -939,   467,   979,   467,   830,   817,
    1610,   610,  1180,  1375,   560,  1008,  2275,  -651,   850,   500,
    -420,  1375,  1215,   624,  1991,   531,   624,  1557,  2176,  1578,
    2324,  1189,   835,  2202,    48,  1842,  1153,   721,  2443,   803,
    2564,   809,  1169,   813,  -417,  1180,   765,   971,    48,  2403,
     831,  1962,   733,  1197,   962,  1817,  1200,  1201,  2535,  -837,
    1395,  1900,   519,   509,  2589,   906,  -837,   971,    73,  1015,
     850,   467,  1731,   898,  2367,   624,   977,  1013,  2160,     3,
       4,  1860,  -169,   514,  1410,   779,   523,  -169,   768,   608,
     519,  1411,  1507,  2551,   608,  1291,   977,  1417,  2079,  2404,
    2233,  2312,  1228,  2259,  1635,   864,  2401,   979,   761,  2363,
    -420,  1635,  2010,  2477,  2234,    48,   480,  2364,  1373,   530,
    1465,   533,   954,   537,   927,   928,  2549,   979,   543,  1632,
    1633,  2350,   943,  1137,  1652,  2173,  1172,  1211,  2505,  2230,
    2293,  1861,   609,  -856,  1291,  1116,  1166,   609,  2387,   949,
    -856,  1747,  1504,   761,  2096,   755,  2104,  1727,   429,  1245,
    1877,  2455,  2310,  2195,   926,   515,   839,  1677,  1678,  2226,
     950,   611,  1019,    70,  1793,  1123,   467,  1016,   763,  2536,
    2082,  1999,   612,  2231,  1504,  1748,  2128,  2196,  2585,  2456,
    2132,  2309,  1964,  1396,  1116,  2579,  2009,   512,  1397,  1605,
    2033,  1758,  2174,   503,  1466,   608,   608,  1190,  1505,  2590,
     734,   832,   735,  1113,  1229,   481,    71,    74,  1342,  2006,
    -417,  2008,  2293,   763,    75,   780,  2525,  1138,    20,  2311,
    2552,  1418,   836,   900,  1398,  2558,   836,   513,  1187,  2572,
    1782,  2000,   906,  2080,  2313,  1280,   527,  2299,   557,   567,
     898,  2537,  1251,  1558,   756,  1722,  2405,    76,   609,   609,
    1257,  1733,    24,   722,   764,  2165,  1114,  1187,  2316,   885,
    1254,  2580,   526,  2121,   781,  1174,  1722,  2365,   782,  2161,
    -417,  2235,  1009,  2094,  1499,  1290,  -420,   561,  1119,  1270,
    2097,  1017,   510,  2219,  1297,  1483,  2581,  1164,  1301,  2531,
    1213,   836,    26,    77,  1293,   783,  1313,  1314,  1758,  1320,
     833,  1770,   566,   429,   429,    27,  1321,  1322,  1323,  1346,
    1348,  1333,  1113,   501,  1729,  1730,  2052,  1216,  2177,  1525,
     718,   723,   608,  2565,  2520,  2249,   729,   773,    28,  1165,
     730,  2547,   906,  1262,   617,   475,  -420,   475,  1376,  2507,
     898,    52,    29,  2259,   915,   604,  1692,   499,  2506,   517,
    1818,   548,  2263,  1825,  1826,   429,   602,  2267,  1399,   784,
    2269,  1738,  1592,  1813,  2260,  1114,   516,   499,   837,  2293,
      81,  1175,   842,    47,  -417,   609,  1814,   524,  2227,   499,
    1365,  2416,   555,  -837,  1378,  1111,  1764,   737,   999,  1759,
     753,  -643,  1585,    36,   572,    45,    52,  1650,   525,   744,
     900,  1475,  -959,   499,   499,   499,    64,  2167,  1412, -1454,
    2178,   518,  -417,   906,  -417,   949,  1858,  1881,  1882,  1883,
    1884,   898,  2447,  1888,  1889,  1890,  1891,  1892,  1893,  1894,
    1895,  1896,  1897,  2442,   949,    69,   950,  -960,   926,  2446,
    -420,   859,   932,  -648,  -638,   507,   859,   457,   967,  1113,
     951,  1533,  1742,  2164,   729,   950,  -939,  1011,   730,  1438,
     736,  1536,   854,   855,  1539,  2204,  2205,  -856,   912,   953,
    1863,  1879,  1885,  1924,  1925,  2369,  1189,  1507,  -420,  2293,
    -420,   519,    48,   509,   994,   995,   996,   997,   998,   999,
     729,  2381,  1489,    52,   730,  2222,  2020,  2012,  1207,  1901,
     900,  1452,  1114,   938,   939,   510,   996,   997,   998,   999,
     558,  1202,  1790,  1532,   854,   855,  1873,  1207,  1180,  2166,
     965,  1208,  1606,  1955,   971,  2228,  -169,  -169,  1181,  1722,
     968,  1722,   727,   848,  1264,   523,   849,    48,  1880,   624,
    1208,  2511,  1012,  1647,  1648,  1649,  1650,  1333,  1645,  1646,
    1647,  1648,  1649,  1650,  1956,  1020,  1140,   859,   859,  1763,
    1266,   559,   971,  2021,   775,   624,  1584,  1904,   478,  2134,
    1586,  1671,   494,  1588,  1280,  2302,  2013,   499,  1140,  1958,
    1741,   900,  1213,    83,   979,  2052,   562,  1768,   822,   824,
     826,   977,   624,   777,  1490,  1141,   429,   429,  1886,   778,
    1342,  1342,   499,   499,  1129,  1342,  2151,  1682,  1887,  1180,
    1534,  1954,   520,   573,  1838,  1537,    20,  1141,   551,  1183,
    1791,   906,   979,  1131,  1132,   753,  1136,   499,  1179,   898,
    -968,  -968,  1683,  2014,    48,  2015,  2022,   563,  1342,  1342,
     499,    84,  1189,  1203,   525,   525,  1204,   525,  1271,  1272,
      24,   552,  1190,  1142,  1608,   615,  1117,   499,  1113,  1118,
    1113,   499,  2584,  1819,  1496,   613,  1225,  2559,  2560,  1453,
     930,   499,  1761,  1725,  1665,  1120,  1667,  1668,  1121,  1248,
    1214,   616,  1563,  1955,   553,   566,   507,   617,   566,  1960,
      26,  1531,   429,   429,  1725,   429,   566,  2411,   499,  1143,
      20,   779,  2407,  1843,  1276,   729,   960,  -939,  1850,   730,
    1542,  1114,  1187,  1114,  1956,  1549,  2048,  2587,  1666,  1484,
    1485,  1143,  2435,  2526,    20,  2527,  1113,  2436,   906,  1957,
     554,    52,  1764,    20,    24,   604,   898,  1276,  1684,  1958,
      29,   608,  1680,  1685,   618,  1324,  1325,  1326,  1218,  1327,
    1328,  1329,  1330,  1331,  1332,  1144,   761,  1302,    24,   467,
     780,   762,  1028,  -491,  -491,  1959,  1311,    24,  1258,  1722,
     540,  1121,   777,  1722,    26,  1277,  2437,  1144,   778,  1114,
     962,   523,   523,  1255,   523,  1256,   720,    27,  1127,   900,
     538,  1189,   539,    52,   609,  1335,  1734,    87,    26,    88,
    1862,  1864,  1865,   542,     3,     4,  2576,    26,  1277,   724,
      28,    27,  1168,  1792,  1793,   949,  1269,  1189,  1190,  1270,
      27,   725,  1189,    90,    29,  1195,   763,  1801,   740,  1803,
     566,   544,  2100,   545,    28,  1278,   950,   728,  1279,   777,
    1794,   780,  1291,    28,  2031,   778,  1219,   745,    29,  1960,
     951,  2472,  2144,   546,  1439,   547,  1237,  1454,   949,   499,
    1303,  2024,  1711,  1712,   457,  2498,  2500,   764,  1278,  2434,
     746,  1279,    48,  2438,   517,  2439,  2246,  1686,  1187,   950,
     779,  1902,  1903,  1260,  1832,  2007,  -464,  1687,   748,  1285,
     807,  -464,  1286,   953,   782,  2064,   900,  1221,  1342,  1342,
    1342,  1342,  1232,  2086,  1342,  1342,  1342,  1342,  1342,  1342,
    1342,  1342,  1342,  1342,  1448,  1233,  1333,   842,  1235,  1236,
    2023,   808,  2032,  1816,  1494,   749,  2545,  1121,  1820,   751,
    1554,  1304,  1291,  1555,    48,   752,   518,  -463,  2208,  1280,
    1722,  1575,  -463,  1576,  1525,  1722,  2053,   779,  1607,  1614,
    1722,  1121,  1121,  1722,  1342,  1342,  -464,  1725,  1189,  1725,
     926,  1989,  1253,  2548,  2308,  2577,  2323,  1190,   499,  2422,
     499,   926,  1280,  1253,   926,   759,  1253,  1722,   777,  1458,
    2561,  1463,   920,   921,   778,   784,  1456,  1113,  1113,  1113,
     774,  1305,  1854,  1190,  1306,   776,  1618,  -464,  1190,  1121,
    1622,   788,   777,  1121,   737,  1381,   519,  -463,   778,   940,
    -495,  -495,    78,   499,    79,  1623,   906,   789,  1121,   454,
     780,  1179,   429,  1704,   898,  1705,   479,  1187,  2368,  2212,
     495,  1908,   429,  1509,   429,  1513,  2591,   429,  -494,  -494,
    1114,  1114,  1114,   429,  1427,   429,  1281,  1654,  -463,  1807,
    1121,   806,  1808,  1187,   810,   906,   566,   429,  1187,  1722,
     814,   566,   429,   898,  1824,  2045,   429,   429,   429,   429,
     777,   429,   429,   782,  1383,  1811,   778,   906,  1812,  1281,
     499,  1562,  1970,  2031,  1722,   898,   779,   780,   815,  1974,
    1975,  1976,   818,  1574,  1869,  1307,   820,  1121,  1282,  1384,
     783,   827,  1916,   859,  1579,  1121,   906,   834,  2157,  2168,
     779,  1706,  1500,  1707,   898,  1987,  2048,    20,  1988,   829,
    1992,   551,  1508,  1993,  1511,  2011,  2070,  1522,  1555,  1555,
     906,   839,  1764,  1526,  1190,  1528,   811,   520,   898,  1273,
     782,  1116,  1935,  1936,  1937,  1938,  2105,  1535,   841,  1286,
      48,    24,  1538,  1443,   552,  1445,  1543,  1544,  1545,  1546,
    1291,  1550,  1551,   510,   784,  2169,  2170,   812,  1555,  1555,
    2085,  2250,    20,   758,  1286,   760,  2386,  2303,   779,  2386,
    2304,  2133,   844,  2136,   900,   872,   908,  1834,   847,  2322,
    1722,    26,   845,    83,  1187,   458,   910,  1725,  1488,   790,
    1385,  1725,  1308,   510,    27,  1386,    24,   911,  2344,  2370,
    1387,  1555,  1286,   717, -1001,   719,  1722,  2373,   791,  2378,
    2374,  2384,   842,   900,  2385,   790,   780,    28,   913,   920,
     921,   784,  2388,   554,  2351,  2385,  2399,  2424,   940,  2400,
    2425,   459,  -614,  1335,   791,   900,    26,  1024,  1026,  2452,
     780,    84,  2400,  -621,  2453,   906,  1954,  1286,  2461,    27,
     919,   842,   922,   898,   923,  1561,  2466,   792,    48,  2385,
     924,   925,   901,   499,   900,  1495,  2200,   510,   929,   782,
    1726,  1113,    28,  2480,  2352,  1113,  2481,  1113,  2342,  1317,
    1318,    29,  2353,   792,  1116,   931,    29,    85,   900,  1540,
    2123,  1726,    20,   782,  2521,  1752,   783,   842,  1755,   540,
    1463,  2522,  2543,  2555,  1121,  2544,  2385,  -611,   780,  2573,
    2354,   934,  2400,  -612,   935,   936,  1722,   937,  1955,   538,
    1541,   539,    52,   942,  1114,   944,    24,   945,  1114,  -615,
    1114,   946,   542,   947,  1388,  -613,   948,   955,  2329,   956,
     966,   793,  2209,  2210,  1389,  1810,  1225,  1342,  1004,  1956,
    2155,   906,  1006,   908,   960,  1009,  1008,  1547,  1725,   898,
     784,   782,  1022,  1725,  1957,  1027,    26,   793,  1725,  1124,
    1130,  1725,  2270,   762,  1958,  2048,  2355,   764,  1828,    27,
    1160,  1162,  1185,  1186,   784,  1187,  1192,  2356,  1548,   794,
    1193,  1764,   795,  1194,   960,  1725,  1225,    87,  1198,    88,
    1959,   499,    28,   796,  1205,  1225,   499,   499,   499,  1206,
    1210,  1381,  1220,   900,  1222,   794,    29,  1226,   795,   429,
      89,  2264,  2410,    90,   499,  1230,  1231,  1699,   566,   796,
    1238,  1242,  1241,  1244,   797,  1342,  1606,  1253,  1268,   901,
    1579,  2180,   915,  1716,  1274,   926,   932,  2181,  1708,  1292,
    1298,  1293,   784,   908,   624,  2045,  1350,  1351,   971,  2182,
     797,  1363,  1374,    48,  1716,  1380,  1391,   906,   509,  1335,
    1392,  1394,  1414,  1415,   906,   898,  1429,  1725,   799,  1440,
    1113,  1442,   898,  1450,  1960,  1449,  1457,  2183,   518,  2184,
    1464,  1476,  1477,  1930,  2277,  1478,  1497,  1501,   800,  1342,
    1911,  2286,  1725,  1479,   799,   623,  1502,  1503,  1635,  1847,
    1552,   510,  1636,  1637,  1638,  1556,  1560,  1564,   802,   900,
    1565,  1580,  1566,  2180,   800,  1582,  1583,  1587,   510,  1913,
     906,  1590,  1589,  1114,   908,  1595,  1599,  1600,   898,   901,
    1602,  1601,  2185,  1934,   802,  1597,  1606,  2329,  1603,  1598,
    1616,   499,   499,   499,  1944,  1617,  1726,  1952,  1619,  1620,
    1621,  1952,  1966,  1624,  2357,  1628,  2265,  2358,  2186,  2183,
    2430,  2428,  1625,  1627,   872,  1631,  2306,  1653,  1659,  1121,
    1660,  1661,  1213,  1662,  1663,  1670,  1831,  1673,  1681,  1674,
    1675,  1836,  1837,  1839,  1676,  1688,  1697,  1702,  1727,  1463,
    1698,  1700,  1701,  2410,    48,  1732,  2372,  1746,  1725,  1853,
    1744,  1766,  1753,  1760,  -496,   499,  -497,   429,  1772,  1771,
     901,  1225,  1179,  1225,  2185,  1248,  1775,  2187,  2417,  1774,
     962,  1776,  2188,  1778,  1725,   900,  1780,  1781,  2050,  1787,
    2123,   429,   900,  2037,  1784,   906,  1815,  1800,  2570,  1802,
    1821,  1822,  1823,   898,  1840,  1828,   429,   429,   429,   429,
     429,   429,   429,   429,   429,   429,  1841,  1844,  2494,  1848,
    2377,  1845,  1851,  1852,  2189,   499,  1855,  1856,  1280,  1113,
     906,  1867,  1179,  2377,  1872,  1868,  1656,  1635,   898,  2190,
    1655,  1910,  1905,  1248,  1906,   519,   499,  1907,   900,  1918,
    1919,  2081,  1922,  1640,  1931,   906,  1709,  2003,   906,  2413,
    1967,  1945,   960,   898,  2188,  2419,   898,  1953,  1972,  2479,
    1969,  1984,  1978,  2454,  2045,  1981,  1986,  1942,  1990,  1946,
    2001,  2036,  1114,  1980,  1982,  2463,  1939,  1940,  1941,  1997,
     903,  2005,   908,  2017,  1725,  2019,  2054,  2055,  2056,  2057,
    2058,  2059,  2060,  2061,  2062,  2063,  2189,  2035,  2066,  2072,
    2073,  2077,  2088,  1113,  2083,  1641,  2089,  1113,  2095,  2129,
    2130,  2190,  2090,  2116,   790,  2092,   499,   499,   499,   499,
    2191,  2099,  2098,  1952,  1966,  2494,  2113,  1952,  2138,  2462,
    2126,  2125,   608,   791,  1726,  2542,  2474,  2137,  1726,  2124,
    2002,  2145,  2127,  2152,  2141,  2154,  2142,  -429,  2143,  2146,
    2148,  2149,  2150,   900,  2163,  2171,  1114,  2175,  2198,  -429,
    1114,  2199,  2203,  2213,  -429,  2214,  2215,  2216,   901,  1752,
    2223,  2224,  2225,   872,  1463,  2237,  2156,  2158,  1335,  2240,
    2243,  2238,   792,  2025,  2244,   609,  1179,  2245,   900,   908,
    2026,  2247,  2255,  2248,  2261,  2268,  2274,  2284,  2289,  2295,
    2069,  2297,  2191,  2298,  2314,    48,  2300,  2305,  2317,  -429,
    2318,  2207,  2319,   900,  2320,  2346,   900,  2343,  2347,  2361,
    2348,  1260,  2371,  1724,  2375,  2380,  2362,  2383,  1113,  -429,
     608,  2396,  2389,  2391,  2401,  2395,  2415,  2418,  2420,  2431,
    2449,  2423,   904,  2448,  1724,  2027,  2450,  1225,  2469,  2460,
    2468,  2478,  2313,  1574,   906,  2484,  2482,   903,  2485,  2487,
    2490,  2497,   898,  2229,  2241,  2503,   793,  2508,  2504,  2509,
    -429,  2510,  2532,  2519,  1932,   901,  2538,  1555,  2550,  -429,
    2556,  1114,  2563,   609,  1113,  2566,  2568,  2574,  2575,  2564,
    2565,  1642,  1643,  1644,  2588,  1645,  1646,  1647,  1648,  1649,
    1650,  2117,  2118,  2119,  2120,  1944,  1952,  1716,   429,  2034,
    1726,  1716,  1527,  2038,   794,  1726,  1798,   795,  1726,  1944,
    1994,  2273,   750,  2276,  2159,    83,  2473,  2528,   796,  2288,
    2028,  2071,  2206,  2414,   872,   872,   872,  1114,  2534,  2583,
      48,    48,  2294,  2569,  2360,   970, -1001,   608,   971,  2562,
     607,  1783, -1455, -1455, -1455,  1805,  2076,   903,  1176,   797,
    2530,  1829,   566,   429,  2567,  2039,  1250,  1779,  2529,  2440,
    2491,   499,  1830,   713,   713,  2571,  2065,   977,  2050,  1122,
    1014,  1762,  1493,    84,   978,  1157,  1773,  1473,  1979,  1156,
    2467,  2153,  1492,  1161,   713,   429,   429,  1948,  1743,  2122,
     609,  2135,  2459,   799,  2382,  1943,  1179,  2458,   979,   429,
    -429,  2465,   905,  2345,  2464,  1596,  2287,  2523,  2518,   904,
    2524,   499,   900,   800,  2294,  1419,  1765,    48,  1695,    85,
    1611,   510,  1740,  1693,  2229,  1428,  1833,  2451,   903,  1263,
    1591,  1125,   429,   802,  1444,  2029,     0,  1995,  2030,  1726,
    1446,     0,     0,  2307,     0,  2276,     0,     0,     0,     0,
       0,     0,     0,     0,   713,  2394,     0,     0,     0,     0,
     429,     0,   729,     0,     0,   748,   730,   908,     0,   499,
       0,     0,     0,  1716,     0,  2325,  2326,     0,  1716,     0,
       0,  1716,     0,     0,   859,    86,     0,   607,  2433,  2349,
       0,   566,   607,   713,   909,     0,     0,  1724,  2441,  1724,
       0,     0,     0,     0,     0,     0,   908,   980,     0,   904,
     713,     0,   981,     0,     0,     0,     0,   499,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2445,   908,    87,
       0,    88,     0,     0,     0,   623,  1187,     0,  1635,     0,
     713,     0,  1636,  1637,  1638,  1944,  2315,     0,   984,     0,
    2397,   429,    89,   901,     0,    90,  2273,   908,     0,   713,
     713,   713,     0,   713,     0,     0,     0,    48,     0,     0,
       0,  2294,   566,   566,   566,     0,  2470,     0,     0,   905,
       0,   908,   859,   713,     0,     0,     0,  2495,    48,  2496,
     904,     0,   901,  2501,  2502,   987,  2366,     0,     0,     0,
       0,     0,     0,   607,   607,     0,     0,  1225,  1225,     0,
     713,  1112,  1716,     0,   901,     0,     0,     0,     0,     0,
     -34,     0,   960,     0,     0,     0,   872,     0,     0,     0,
       0,  2273,     0,     0,     0,     0,   903,  2050,     1,  2394,
     713,     0,     0,   901,   713,   713,     0,     0,     2,  1463,
       3,     4,     0,     0,  2406,   713,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     5,   901,  1225,     0,
       0,   909,     0,     0,     0,  1179,     0,     0,     0,   905,
       0,  2294,   989,  2546,     0,     0,     6,     0,     0,     0,
       0,    48,     0,     0,     0,     0,   566,     7,     0,   859,
       0,     0,  2444,     0,     0,     0,  2051,     0,     8,     0,
       9,     0,  1639,     0,     0,     0,     0,     0,     0,     0,
    1112,     0,     0,     0,     0,     0,     0,    10,     0,     0,
     607,     0,     0,  1640,     0,     0,     0,  1724,     0,     0,
      48,  1724,     0,   903,     0,     0,     0,     0,     0,     0,
      11,     0,     0,     0,     0,     0,    12,     0,     0,     0,
     905,     0,     0,     0,    13,     0,    14,     0,     0,     0,
       0,   909,     0,     0,     0,     0,     0,     0,   990,     0,
       0, -1455, -1455, -1455,     0,   994,   995,   996,   997,   998,
     999,     0,   901,     0,   713,  1641,     0,     0,   904,     0,
     713,     0,     0,   713,     0,     0,     0,   713,     0,     0,
       0,     0,   908,     0,     0,   713,   713,     0,     0,   790,
       0,     0,     0,   713,     0,     0,   713,   713,   713,   713,
       0,     0,     0,     0,     0,     0,   713,   713,   791,     0,
       0,     0,     0,     0,    15,     0,     0,    48,     0,     0,
       0,     0,   909,   713,   713,   713,   713,  1112,     0,     0,
       0,   713,   872,     0,     0,   713,     0,     0,     0,   713,
     872,     0,   713,   713,   713,   713,   713,   713,   713,   713,
     713,     0,     0,   713,  2330,     0,   623,   792,     0,  1635,
     713,     0,   713,  1636,  1637,  1638,     0,     0,   901,   970,
       0,     0,   971,     0,     0,   904,     0,     0,  1724,     0,
    1914,     0,    16,  1724,     0,    17,     0,     0,  1724,     0,
       0,  1724,     0,     0,     0,     0,     0,  2331,   908,     0,
       0,   977,     0,     0,     0,  2211,     0,     0, -1455,     0,
       0,     0,     0,    18,     0,  1724,     0,     0,     0,     0,
    2027,    19,  2332,     0,     0,     0,     0,     0,   623,     0,
       0,  1635,   979,    20,     0, -1455, -1455, -1455,   905,  2333,
      21,   793,     0,  2334,    22,     0,     0,     0,     0,     0,
       0,  1642,  1643,  1644,    23,  1645,  1646,  1647,  1648,  1649,
    1650,   908,     0,  2335,     0,     0,  2336,    24,     0,     0,
       0,     0,   713,     0,     0,     0,     0,     0,     0,     0,
    2337,     0,     0,     0,   901,     0,     0,     0,     0,   794,
     713,   901,   795,     0,     0,     0,     0,  1724,     0,   713,
     713,   903,    25,   796,     0,     0,     0,    26,     0,     0,
     858,     0,     0, -1360,     0,   858,     0,     0,     0,     0,
      27,     0,  1724,     0,     0,     0,     0,     0,     0,     0,
     909,     0,     0,     0,   797,     0,  1112,     0,  1112,     0,
     903, -1455,     0,    28,     0,   905, -1455,   901,     0,     0,
       0,     0,     0,     0,  1640,     0,     0,    29,     0,     0,
     -34,  2338,   903,     0,     0,     0,     0,     0,     0,  2339,
       0,     0,     0,     0,     0,     0,  2051,     0,   799,     0,
       0,     0, -1455,     0,     0,     0,     0,     0,     0,     0,
       0,   903,     0,     0,     0,     0,     0,     0,   800,     0,
       0,     0,     0, -1360,  1112,     0,     0,     0,     0,     0,
    2340,   908,     0,     0,     0,   903,  1641,     0,   802,   607,
       0,   713,   713,   713,   858,     0,   858,   858,  1724,   987,
       0,     0,     0,     0,     0,     0,   908,   909,     0,   908,
       0,     0,     0,   713,   713,     0,     0,     0,     0,   713,
       0,     0,     0, -1360,  1724,     0,     0,     0,     0,     0,
       0,     0,   901,   904,     0, -1360,     0,     0,     0,     0,
   -1360,     0,     0,     0,     0, -1360,     0,     0,     0,     0,
       0,     0,     0,     0, -1360, -1362,     0, -1360,  1641,   713,
     713,   713,     0,     0,   713,   858,     0,   901,   858,   858,
       0,     0,   904,     0,     0,     0,   713,   713,   713,   713,
       0,     0,     0,     0,   713, -1360, -1455,     0,     0,     0,
       0,     0,   901,     0,   904,   901,     0,   713,   713,     0,
       0,   713,     0,     0,     0, -1360,     0,     0,     0,     0,
     903,     0,     0,     0,     0,   713,     0,   713,     0,   713,
       0,     0,     0,   904,     0,     0,     0,     0,  1265,  1267,
       0,     0,     0,     0,  1724,     0,     0,     0,     0,   713,
       0,     0,     0,     0,     0, -1362, -1360,   904,     0, -1360,
     713,     0,   713,   713,   713, -1360,     0,     0,     0,     0,
       0,     0,     0,   713,     0,     0,     0,     0,     0,     0,
       0,   713,  1642,  1643,  1644,     0,  1645,  1646,  1647,  1648,
    1649,  1650, -1455,     0,     0,   713,     0,     0,     0,   994,
     995,   996,   997,   998,   999, -1362,     0,     0,  1299,  1300,
     713,     0,     0,   905,     0,     0,  1312, -1362,     0, -1360,
    1315,  1316, -1362,     0,     0,  2051,   903, -1362,   713,     0,
       0,     0,     0,     0,     0,  1352, -1362,  1353,     0, -1362,
       0,     0,     0,     0,     0,  1112,  1112,  1112,     0,     0,
    1364,  1366,   905,     0, -1455, -1455, -1455,     0,  1645,  1646,
    1647,  1648,  1649,  1650,     0,     0,     0, -1362,     0,     0,
    1709,     0,     0,     0,   905,     0,   970,     0,     0,   971,
       0,     0,   904,     0,     0,     0,     0, -1362,     0,     0,
       0,     0,     0,     0,     0,     0, -1360,     0,     0,     0,
       0,     0,     0,   905,     0,   909,     0,     0,   977,     0,
       0,   901,     0,     0,     0, -1455,     0,     0,     0,     0,
   -1360,     0, -1360, -1360,     0,     0,     0,   905, -1362,     0,
       0, -1362,     0,     0,     0,     0,     0, -1362,     0,   979,
       0,   713,   903,     0,   909,     0,     0,     0,     0,   903,
       0,   713,     0,     0,     0,     0,     0,   713, -1360,     0,
     713, -1360, -1360, -1360,     0,     0,   909,   713,   713,   713,
     713,     0,     0,   713,   713,   713,   713,   713,   713,   713,
     713,   713,   713,     0,     0,     0,   713,   713,   904,     0,
       0, -1362,     0,     0,     0,   909,     0,     0,     0,     0,
     713,     0,     0,     0,     0,   903,  1679,   713,     0,     0,
     713,     0,   713,     0,     0,     0,     0,     0,     0,   909,
     713,     0,     0,   713,   713,     0,     0,     0,   713,   713,
       0,     0,  1482,  1482,     0,     0,     0,     0,     0,     0,
       0,     0,  1709,     0,   713,     0,   713,   970, -1455,     0,
     971,     0,   905, -1455,     0,     0,     0,     0,   713,     0,
       0,     0,     0,     0,   713,     0,     0,     0, -1362,     0,
       0,     0,     0,     0,   970,   713,     0,   971,     0,   977,
       0,     0,     0,   858,     0,     0, -1455,     0,     0, -1455,
       0,   713, -1362,   858, -1362, -1362,   858,     0,     0,     0,
       0,     0,     0,     0,   904,     0,   977,     0,     0,     0,
     979,   904,     0, -1455,     0,     0,     0,     0,   623,     0,
     903,  1635,     0,     0,     0,  1636,  1637,  1638,     0,     0,
   -1362,     0,     0, -1362, -1362, -1362,   987,   979,     0,  1112,
       0,     0,  2107,  1112,   909,  1112,     0,     0,     0,     0,
       0,     0,   858,     0,     0,   903,     0,     0,   905,     0,
       0,     0,     0,     0,   696,   696,  1604,   904,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1689,     0,     0,
     903,     0,     0,   903,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   713,     0,     0,  1923,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1455,
       0,     0,     0, -1455, -1455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   713,   713, -1455,     0,     0,   713,
     909, -1455,     0,     0,   713,     0,     0,   713,   713,     0,
   -1455,     0,   713,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   905,     0,     0,     0,     0,     0,
       0,   905,   904,     0,   713,     0,     0, -1455,   713,     0,
       0,   777,     0,     0,   869,     0,     0,   778,     0,     0,
     713,     0,     0,     0,   790,     0,     0,   987,   713,     0,
       0,   917,     0,     0,     0,   713,  1640,   904,     0, -1455,
       0,     0,  1737,   791,     0,     0,   994,   995,   996,   997,
     998,   999,     0,     0,   987,     0,     0,   905,     0,     0,
       0,   941,   904,     0,     0,   904,     0,     0,  1112,     0,
       0,     0,     0,     0,     0,  1769,  1769,   713,     0,     0,
     957,   958,   959,     0,   961,     0,   909,     0,     0,     0,
       0,     0,   792,   909,     0,     0,     0,     0,  1641,     0,
       0,     0,     0,     0,  1007,     0,     0,     0,     0,   903,
       0,     0,     0,     0, -1455,     0,     0,     0,     0,   779,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1029,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1455,     0, -1376,     0,     0,   713,     0,     0,   909,
       0,     0,     0,     0,     0,     0,     0,     0,   713,   713,
       0,  1135,   713,     0,     0,  1147,  1152,     0,     0,     0,
       0,     0,   905,     0,     0,   713,   793,     0,     0,     0,
     713,     0,     0,     0,     0,   713,     0,     0,   713,   713,
       0,     0,     0,     0,     0,     0,   713,   713,     0,     0,
       0,  1857,  1859,     0,     0,     0,  1866,   905,     0,     0,
   -1455,     0,   713,     0,   713,     0,     0,   994,   995,   996,
     997,   998,   999,     0,   794,     0,     0,   795,     0,     0,
       0,     0,   905, -1376,   713,   905,     0, -1455,   796,     0,
       0,     0,     0,     0,   994,   995,   996,   997,   998,   999,
       0,  1002,     0,     0,     0,     0,     0,     0,     0,   780,
       0,     0,     0,     0,   909,     0,     0,  1112,     0,   797,
       0,   904,     0,     0,     0,     0,     0,   970,     0,     0,
     971,     0,     0, -1376,  1642,  1643,  1644,     0,  1645,  1646,
    1647,  1648,  1649,  1650,   713, -1376,     0,  1002,   713,   909,
   -1376,     0,     0,     0,     0, -1376,     0,     0,   798,   977,
       0,     0,   782,   799, -1376,   713, -1455, -1376,     0,   713,
       0,  1296,     0,     0,   909,     0,     0,   909,   970,   713,
       0,   971,     0,   800,     0,   972,   973,   974,     0,   801,
     979,   713,     0,     0,  1319, -1376,     0,  1336,     0,     0,
    1347,  1112,   975,   802,     0,  1112,   713,  1354,  1359,     0,
     977,     0,     0,     0,     0, -1376,     0,   978,     0,     0,
       0,     0,     0,     0,  1369,  1370,  1371,  1372,     0,     0,
     607,     0,  1379,     0,     0,     0,  1390,     0,     0,     0,
    1393,   979,     0,  1400,  1401,  1402,  1403,  1404,  1405,  1406,
    1407,  1408,     0,   784,  1409,     0, -1376,  1926,     0, -1376,
       0,   696,     0,   869,     0, -1376,     0,   858,     0,     0,
       0,     0,   713,     0,  1002,   713,     0,     0,     0,     0,
       0,     0,     0,     0,   713,     0,     0,     0,     0,     0,
       0,   905,   713,     0,     0,     0,     0,     0,     0, -1455,
       0,   713,     0,     0, -1455,     0,     0,     0,     0,     0,
    2087,     0,     0,     0,     0,     0,     0,     0,     0, -1376,
       0,   713,  1002,     0,     0,     0,  1112,     0,   607,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -1455,     0,     0,     0,     0,     0,  1002,     0,     0,     0,
     980,  1343,     0,     0,     0,   981,   713,   713,     0,     0,
       0,     0,  1002,  1002,  1002,     0,  1002,     0,     0,     0,
    1709,     0,     0,  1447,     0,     0,   982,   983,     0,     0,
       0,     0,  1112,   909,     0,     0,     0,   987,     0,     0,
       0,   984,     0,     0,     0,   623, -1376,     0,  1635,     0,
     958,   959,  1636,  1637,  1638,     0,     0,     0,     0,     0,
       0,   713,  1002,   713,     0,     0,     0,     0,     0,  2108,
   -1376,   985, -1376, -1376,   986,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1002,     0,     0,     0,   987,     0,
     970,   988,     0,   971,     0,   607,     0,   972,   973,   974,
       0,     0,     0,     0,     0,     0,     0,     0, -1376,     0,
       0, -1376, -1376, -1376,     0,     0,     0,     0,     0,     0,
       0,     0,   977,     0, -1455,   713,   713,     0,   858,   978,
       0,     0,     0,   858,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1265,  1267,     0,
       0,     0,     0,   979,     0,   969,     0,     0,     0,     0,
     970,     0,     0,   971,     0,     0,     0,   972,   973,   974,
       0,     0,   869,  1593,  1594,   989,     0,     0,     0,     0,
       0,     0,     0,     0,   975,     0,     0,   976,     0,     0,
    1002,     0,   977,     0,     0,  1609,     0,     0,     0,   978,
    1615,     0,  1002,     0,     0,     0,     0,  1002,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -1455,     0,     0,   979,     0,     0,     0,   994,   995,   996,
     997,   998,   999,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1634,  1640,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1359,     0,  1359,
    1359,     0,   980,     0,     0,  1672,     0,   981,     0,     0,
       0,   990,     0,     0,   991,   992,   993,     0,   994,   995,
     996,   997,   998,   999,     0,     0,     0,     0, -1455, -1455,
       0,  1626,     0,     0,     0,     0,  1691,     0,  1694,     0,
    1696,     0,     0,   984,     0,  1641,     0,   970,  1265,  1267,
     971,     0,     0,     0,   972,   973,   974,   858,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   975,   980,   869,   869,   869, -1455,   981,     0,   977,
       0,     0,     0,     0,  1739,     0,   978,     0,     0,     0,
     987,  1002,     0,     0,     0,     0,     0,     0,   982,   983,
       0,     0,     0,     0,     0,     0,  1135,     0,     0,     0,
     979,     0,     0,   984,  1002,     0,     0,     0,     0,     0,
       0,  1152,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1002,     0,  1343,  1343,     0,  1651,     0,  1343,  1777,
       0,     0,  1002,   985,     0,     0,   986,     0,     0,  1002,
       0,     0,     0,     0,  1002,     0,     0,     0,     0,     0,
     987,     0,     0,   988,  1002,  1002,  1002,  1002,     0,     0,
       0,  1343,  1343,   858,  1002,     0,     0,   989,     0,     0,
       0,     0,     0,     0,     0,  1002,     0,     0,  1002,     0,
     970,     0,     0,   971,     0,  1002,  1002,  1002,  1002,  1002,
    1002,  1002,  1002,  1002,  1002,     0,     0,     0,   623,     0,
       0,  1635,     0,     0,     0,  1636,  1637,  1638,     0,   980,
       0,     0,   977,     0,   981,     0,     0,     0,     0, -1455,
       0,  1642,  1643,  1644,     0,  1645,  1646,  1647,  1648,  1649,
    1650,     0,  1002,     0,     0,   982,   983,   989,     0,     0,
       0,     0,  1871,   979,     0,     0,     0,     0,     0,     0,
     984,     0,  1875,     0,     0,     0,     0,     0,  1876,     0,
       0,  1878,     0,   990,     0,     0,   991,   992,   993,     0,
     994,   995,   996,   997,   998,   999,     0,     0,     0,     0,
     985,     0,     0,   986,     0,     0,     0,  1898,  1899,     0,
       0,     0,     0,     0,     0,     0,     0,   987,     0,     0,
     988,     0,     0,     0,     0,     0,     0,     0,  1912,     0,
    1927,  1915,     0,  1917,     0,     0,   858,     0,     0,     0,
       0,  1921,     0,     0,     0,     0,     0,     0,     0,  1928,
    1929,     0,     0,   990,     0,     0,   991,   992,   993,     0,
     994,   995,   996,   997,   998,   999,   623,     0,     0,  1635,
       0,     0, -1455,  1636,  1637,  1638,     0, -1455,     0,  1971,
       0,     0,     0,     0,     0,   869,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1983,     0,  1002,  1002,
       0,     0,     0,     0,   989,     0,     0,     0,     0,     0,
       0,     0,  1996, -1455,  1002,     0,  1640,     0,     0,     0,
    1002,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1651,  1651,  1002,
       0,  1343,  1343,  1343,  1343,     0,     0,  1343,  1343,  1343,
    1343,  1343,  1343,  1343,  1343,  1343,  1343,  1651,     0,     0,
     987,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1002,  1641,     0,
       0,     0,  1651,  1651,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1002,  1343,  1343,  1002,
     990,  1002,     0,   991,   992,   993,     0,   994,   995,   996,
     997,   998,   999,     0,     0,     0,     0,  1362,     0,     0,
       0,     0,  2091,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1002,     0,     0, -1455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1455,  2101,  2102,     0,     0,     0,
    2103,     0,     0,     0,     0,  2106,     0,     0,  2109,  2110,
       0,   970,  1002,  2114,   971,     0,     0,     0,   972,   973,
     974,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   975,     0,     0,     0,     0,
       0,     0,     0,   977,     0,     0,     0,     0,     0,     0,
     978,   869,     0,     0,     0,     0,  1641,     0,     0,   869,
       0,     0,     0,     0,     0,     0,   696,     0,     0,     0,
       0,     0,     0, -1455,   979,     0,     0,     0,     0,     0,
     994,   995,   996,   997,   998,   999,     0,     0,     0,     0,
       0,     0,     0,     0,  1642,  1643,  1644,     0,  1645,  1646,
    1647,  1648,  1649,  1650,   970,     0,  1002,   971,  2201,     0,
    1002,  1002,     0,  1002,     0,     0,  1651,  1651,  1651,  1651,
       0,     0,     0,  1651,  1651,  1651,  1651,  1651,  1651,  1651,
    1651,  1651,  1651,  1002,  1002,     0,   977,     0,     0,     0,
       0,     0,     0, -1455,     0,     0,     0,  1002,     0,     0,
    1002,     0,  1002,     0,     0,     0,  1002,     0,     0,  1651,
    1651,     0,     0,  1002,  1002,     0,     0,   979,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   980,     0,     0,     0,     0,   981,  2251,
    2252,     0,     0,  2253,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1002,     0,     0,   982,
     983,     0,     0,     0,     0,   432,     0,     0,  1002,     0,
       0,     0,     0,     0,   984,     0,     0,  2282,  2283,   970,
       0,  1002,   971,     0,  2111,     0,   972,   973,   974,     0,
       0,     0,  1642,  1643,  1644,  2296,  1645,  1646,  1647,  1648,
    1649,  1650,     0,   975,   985,     0,     0,   986,     0,     0,
       0,   977,     0,     0,     0,     0,     0,   433,   978,     0,
       0,   987,     0,     0,   988,     0, -1455,     0,     0,     0,
       0, -1455,   434,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   979,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -1455,     0,     0,
       0,     0,     0,     0,     0,     0,  1002,     0,     0,     0,
    1343,     0,     0,     0,   435,     0,  1002,  1002,  1002,     0,
       0,  1002,   436,     0,  1002,  1002,  2379,     0,     0,  1002,
       0,     0,     0,     0,   437,     0,     0,     0,   989,     0,
     961,     0,     0,     0,   987,     0,     0,     0,     0,     0,
       0,     0,  2398,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   438,     0,     0,     0,  2412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   980,     0,     0,     0,     0,   981,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1343,     0,
       0,     0,     0,     0,     0,     0,     0,   982,   983,   439,
       0,     0,     0,     0,     0,     0,  1002,     0,     0,     0,
       0,     0,   984,     0,     0,     0,     0,     0,     0,     0,
       0, -1455,     0,     0,   990,     0,     0,   991,   992,   993,
       0,   994,   995,   996,   997,   998,   999,     0,     0,     0,
       0,  1874,   985,  2282,     0,   986,     0,     0,     0,     0,
       0,  1651,  1343,     0,     0,   440,  1002,  1002,  1002,   987,
       0,     0,   988,     0,     0,     0,     0,     0,     0,   441,
       0,     0,  2489,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1002,  1002,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     442,  1002,   443,     0,     0,     0,     0,  2515,  2515,   444,
       0,     0,   445,  1651,     0,     0,     0, -1455,     0,     0,
       0,     0,     0,     0,   994,   995,   996,   997,   998,   999,
       0,   446,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   447,     0,     0,     0,   989,     0,     0,   448,
       0,     0,     0,     0,     0,     0,     0,     0,   449,     0,
       0,     0,     0,     0,  2515,     0,     0,     0,     0,     0,
       0,     0,     0,  1651,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1002,     0,     0,     0,   450,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1002,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1002,     0,     0,
       0,     0,     0,     0,     0,     0,  2515,  2586,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   990,     0,     0,   991,   992,   993,     0,   994,
     995,   996,   997,   998,   999,     0,     0,  1441,   619,   620,
     467,   621,   622,   623,   624,   625,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,  1431,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,  1002,   108,   109,   110,   578,   111,
     112,   113,   114,   626,   579,   627,   628,     0,   118,   119,
     120,   121,   122,   629,   630,   123,   124,   631,   632,   127,
    1002,   128,   129,   130,   131,   633,     0,   634,     0,   133,
     134,   135,   136,   137,   581,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   582,   147,   148,   149,
     635,   636,   637,   638,   639,   640,   641,   150,   151,   152,
     153,   154,   155,   642,   643,   158,   644,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
    1432,     0,   170,   171,   645,   173,   174,     0,   175,   176,
     177,  1002,   178,   179,   180,     0,   181,   182,   183,   184,
     646,   186,   187,   188,   647,   648,   190,     0,   191,   192,
     649,   194,     0,   195,     0,   196,   584,     0,   585,   197,
     198,   199,   200,     0,   201,   650,     0,   203,   204,     0,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,   587,
     221,   222,   223,   224,   225,   651,   652,     0,   653,     0,
     229,   588,   589,   230,   590,   231,   232,   233,   234,   235,
       0,     0,   236,   654,   591,   238,   592,     0,   239,   240,
     241,   655,   656,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   657,
     593,   658,   260,   261,   262,   263,   659,   264,   265,   594,
     266,   660,   661,   268,   662,   270,   271,   272,     0,   273,
     274,     0,     0,   663,   276,   277,     0,     0,   278,   279,
     595,   280,   596,   664,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   665,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   666,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   597,   328,   329,   330,   667,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   668,   346,   347,   348,   349,   350,
     598,   351,   352,   669,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   670,     0,
     368,   369,     0,   370,   599,   371,   372,   373,   374,   375,
       0,   671,   672,     0,     0,   378,   379,   673,   381,   674,
     675,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,   676,     0,   395,   396,   397,
     398,   399,   400,   677,  1433,   402,   601,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   678,     0,     0,     0,
       0,     0,     0,   679,   680,  1434,     0,     0,     0,     0,
       0,     0,   682,  1435,     0,     0,     0,   683,   619,   620,
     467,   621,   622,   623,   624,   625,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,   578,   111,
     112,   113,   114,   626,   579,   627,   628,     0,   118,   119,
     120,   121,   122,   629,   630,   123,   124,   631,   632,   127,
       0,   128,   129,   130,   131,   633,     0,   634,     0,   133,
     134,   135,   136,   137,   581,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   582,   147,   148,   149,
     635,   636,   637,   638,   639,   640,   641,   150,   151,   152,
     153,   154,   155,   642,   643,   158,   644,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   645,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     646,   186,   187,   188,   647,   648,   190,     0,   191,   192,
     649,   194,     0,   195,     0,   196,   584,     0,   585,   197,
     198,   199,   200,     0,   201,   650,     0,   203,   204,     0,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,   587,
     221,   222,   223,   224,   225,   651,   652,     0,   653,     0,
     229,   588,   589,   230,   590,   231,   232,   233,   234,   235,
       0,     0,   236,   654,   591,   238,   592,     0,   239,   240,
     241,   655,   656,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   657,
     593,   658,   260,   261,   262,   263,   659,   264,   265,   594,
     266,   660,   661,   268,   662,   270,   271,   272,     0,   273,
     274,     0,     0,   663,   276,   277,     0,     0,   278,   279,
     595,   280,   596,   664,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   665,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   666,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   597,   328,   329,   330,   667,   332,
     333,   334,   335,   336,   337,   338,   339,   340,    20,   341,
     342,   343,   344,   345,   668,   346,   347,   348,   349,   350,
     598,   351,   352,   669,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   670,     0,
     368,   369,    24,   370,   599,   371,   372,   373,   374,   375,
       0,   671,   672,     0,     0,   378,   379,   673,   381,   674,
     675,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,   676,     0,   395,   396,   397,
     398,   399,   600,   677,     0,   402,   601,   403,   404,   405,
     406,     0,     0,   407,     0,    27,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   678,     0,    28,     0,
       0,     0,     0,   679,   680,     0,     0,     0,     0,     0,
       0,     0,   682,  2390,     0,     0,     0,   683,   619,   620,
     467,   621,   622,   623,   624,   625,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,   578,   111,
     112,   113,   114,   626,   579,   627,   628,     0,   118,   119,
     120,   121,   122,   629,   630,   123,   124,   631,   632,   127,
       0,   128,   129,   130,   131,   633,     0,   634,     0,   133,
     134,   135,   136,   137,   581,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   582,   147,   148,   149,
     635,   636,   637,   638,   639,   640,   641,   150,   151,   152,
     153,   154,   155,   642,   643,   158,   644,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   645,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     646,   186,   187,   188,   647,   648,   190,     0,   191,   192,
     649,   194,     0,   195,     0,   196,   584,     0,   585,   197,
     198,   199,   200,     0,   201,   650,     0,   203,   204,     0,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,   587,
     221,   222,   223,   224,   225,   651,   652,     0,   653,     0,
     229,   588,   589,   230,   590,   231,   232,   233,   234,   235,
       0,     0,   236,   654,   591,   238,   592,     0,   239,   240,
     241,   655,   656,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   657,
     593,   658,   260,   261,   262,   263,   659,   264,   265,   594,
     266,   660,   661,   268,   662,   270,   271,   272,     0,   273,
     274,     0,     0,   663,   276,   277,     0,     0,   278,   279,
     595,   280,   596,   664,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   665,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   666,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   597,   328,   329,   330,   667,   332,
     333,   334,   335,   336,   337,   338,   339,   340,    20,   341,
     342,   343,   344,   345,   668,   346,   347,   348,   349,   350,
     598,   351,   352,   669,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   670,     0,
     368,   369,    24,   370,   599,   371,   372,   373,   374,   375,
       0,   671,   672,     0,     0,   378,   379,   673,   381,   674,
     675,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,   676,     0,   395,   396,   397,
     398,   399,   600,   677,     0,   402,   601,   403,   404,   405,
     406,     0,     0,   407,     0,    27,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   678,     0,    28,     0,
       0,     0,     0,   679,   680,     0,     0,     0,     0,     0,
       0,     0,   682,     0,     0,     0,     0,   683,   619,   620,
     467,   621,   622,   623,   624,   625,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,   578,   111,
     112,   113,   114,   626,   579,   627,   628,  1355,   118,   119,
     120,   121,   122,   629,   630,   123,   124,   631,   632,   127,
       0,   128,   129,   130,   131,   633,     0,   634,     0,   133,
     134,   135,   136,   137,   581,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   582,   147,   148,   149,
     635,   636,   637,   638,   639,   640,   641,   150,   151,   152,
     153,   154,   155,   642,   643,   158,   644,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   645,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     646,   186,   187,   188,   647,   648,   190,     0,   191,   192,
     649,   194,     0,   195,     0,   196,   584,  1356,   585,   197,
     198,   199,   200,     0,   201,   650,     0,   203,   204,     0,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,   587,
     221,   222,   223,   224,   225,   651,   652,     0,   653,     0,
     229,   588,   589,   230,   590,   231,   232,   233,   234,   235,
       0,  1357,   236,   654,   591,   238,   592,     0,   239,   240,
     241,   655,   656,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   657,
     593,   658,   260,   261,   262,   263,   659,   264,   265,   594,
     266,   660,   661,   268,   662,   270,   271,   272,     0,   273,
     274,     0,     0,   663,   276,   277,     0,     0,   278,   279,
     595,   280,   596,   664,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   665,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   666,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   597,   328,   329,   330,   667,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   668,   346,   347,   348,   349,   350,
     598,   351,   352,   669,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   670,     0,
     368,   369,     0,   370,   599,   371,   372,   373,   374,   375,
       0,   671,   672,     0,  1358,   378,   379,   673,   381,   674,
     675,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,   676,     0,   395,   396,   397,
     398,   399,   400,   677,     0,   402,   601,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   678,     0,     0,     0,
       0,     0,     0,   679,   680,     0,     0,     0,     0,     0,
       0,     0,   682,     0,     0,     0,     0,   683,   619,   620,
     467,   621,   622,   623,   624,   625,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,   578,   111,
     112,   113,   114,   626,   579,   627,   628,     0,   118,   119,
     120,   121,   122,   629,   630,   123,   124,   631,   632,   127,
       0,   128,   129,   130,   131,   633,     0,   634,     0,   133,
     134,   135,   136,   137,   581,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   582,   147,   148,   149,
     635,   636,   637,   638,   639,   640,   641,   150,   151,   152,
     153,   154,   155,   642,   643,   158,   644,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   645,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     646,   186,   187,   188,   647,   648,   190,     0,   191,   192,
     649,   194,     0,   195,     0,   196,   584,     0,   585,   197,
     198,   199,   200,     0,   201,   650,     0,   203,   204,     0,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,   587,
     221,   222,   223,   224,   225,   651,   652,     0,   653,     0,
     229,   588,   589,   230,   590,   231,   232,   233,   234,   235,
       0,     0,   236,   654,   591,   238,   592,     0,   239,   240,
     241,   655,   656,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   657,
     593,   658,   260,   261,   262,   263,   659,   264,   265,   594,
     266,   660,   661,   268,   662,   270,   271,   272,     0,   273,
     274,     0,     0,   663,   276,   277,     0,     0,   278,   279,
     595,   280,   596,   664,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   665,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   666,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   597,   328,   329,   330,   667,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   668,   346,   347,   348,   349,   350,
     598,   351,   352,   669,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   670,     0,
     368,   369,     0,   370,   599,   371,   372,   373,   374,   375,
       0,   671,   672,     0,     0,   378,   379,   673,   381,   674,
     675,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,   676,     0,   395,   396,   397,
     398,   399,   400,   677,     0,   402,   601,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   678,     0,     0,     0,
       0,     0,     0,   679,   680,   681,     0,     0,     0,     0,
       0,     0,   682,     0,     0,     0,     0,   683,   619,   620,
     467,   621,   622,   623,   624,   625,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,  1145,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,   578,   111,
     112,   113,   114,   626,   579,   627,   628,     0,   118,   119,
     120,   121,   122,   629,   630,   123,   124,   631,   632,   127,
       0,   128,   129,   130,   131,   633,     0,   634,     0,   133,
     134,   135,   136,   137,   581,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   582,   147,   148,   149,
     635,   636,   637,   638,   639,   640,   641,   150,   151,   152,
     153,   154,   155,   642,   643,   158,   644,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   645,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     646,   186,   187,   188,   647,   648,   190,     0,   191,   192,
     649,   194,     0,   195,     0,   196,   584,     0,   585,   197,
     198,   199,   200,     0,   201,   650,     0,   203,   204,     0,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,   587,
     221,   222,   223,   224,   225,   651,   652,     0,   653,     0,
     229,   588,   589,   230,   590,   231,   232,   233,   234,   235,
       0,     0,   236,   654,   591,   238,   592,     0,   239,   240,
     241,   655,   656,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   657,
     593,   658,   260,   261,   262,   263,   659,   264,   265,   594,
     266,   660,   661,   268,   662,   270,   271,   272,     0,   273,
     274,     0,     0,   663,   276,   277,     0,     0,   278,   279,
     595,   280,   596,   664,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   665,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   666,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   597,   328,   329,   330,   667,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   668,   346,   347,   348,   349,   350,
     598,   351,   352,   669,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   670,     0,
     368,   369,     0,   370,   599,   371,   372,   373,   374,   375,
       0,   671,   672,     0,     0,   378,   379,   673,   381,   674,
     675,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,   676,     0,   395,   396,   397,
     398,   399,   400,   677,     0,   402,   601,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   678,     0,     0,     0,
       0,     0,     0,   679,   680,     0,     0,     0,     0,     0,
       0,     0,   682,     0,     0,     0,     0,   683,   619,   620,
     467,   621,   622,   623,   624,   625,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,   578,   111,
     112,   113,   114,   626,   579,   627,   628,     0,   118,   119,
     120,   121,   122,   629,   630,   123,   124,   631,   632,   127,
       0,   128,   129,   130,   131,   633,     0,   634,     0,   133,
     134,   135,   136,   137,   581,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   582,   147,   148,   149,
     635,   636,   637,   638,   639,   640,   641,   150,   151,   152,
     153,   154,   155,   642,   643,   158,   644,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   645,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     646,   186,   187,   188,   647,   648,   190,     0,   191,   192,
     649,   194,     0,   195,     0,   196,   584,     0,   585,   197,
     198,   199,   200,     0,   201,   650,     0,   203,   204,     0,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,   587,
     221,   222,   223,   224,   225,   651,   652,     0,   653,     0,
     229,   588,   589,   230,   590,   231,   232,   233,   234,   235,
       0,     0,   236,   654,   591,   238,   592,     0,   239,   240,
     241,   655,   656,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   657,
     593,   658,   260,   261,   262,   263,   659,   264,   265,   594,
     266,   660,   661,   268,   662,   270,   271,   272,     0,   273,
     274,     0,     0,   663,   276,   277,     0,     0,   278,   279,
     595,   280,   596,   664,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   665,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   666,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   597,   328,   329,   330,   667,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   668,   346,   347,   348,   349,   350,
     598,   351,   352,   669,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   670,     0,
     368,   369,     0,   370,   599,   371,   372,   373,   374,   375,
       0,   671,   672,     0,     0,   378,   379,   673,   381,   674,
     675,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,   676,     0,   395,   396,   397,
     398,   399,   400,   677,     0,   402,   601,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   678,     0,     0,     0,
       0,     0,     0,   679,   680,     0,     0,     0,     0,     0,
       0,     0,   682,  1345,     0,     0,     0,   683,   619,   620,
     467,   621,   622,   623,   624,   625,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,   578,   111,
     112,   113,   114,   626,   579,   627,   628,     0,   118,   119,
     120,   121,   122,   629,   630,   123,   124,   631,   632,   127,
       0,   128,   129,   130,   131,   633,     0,   634,     0,   133,
     134,   135,   136,   137,   581,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   582,   147,   148,   149,
     635,   636,   637,   638,   639,   640,   641,   150,   151,   152,
     153,   154,   155,   642,   643,   158,   644,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   645,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     646,   186,   187,   188,   647,   648,   190,     0,   191,   192,
     649,   194,     0,   195,     0,   196,   584,  1356,   585,   197,
     198,   199,   200,     0,   201,   650,     0,   203,   204,     0,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,   587,
     221,   222,   223,   224,   225,   651,   652,     0,   653,     0,
     229,   588,   589,   230,   590,   231,   232,   233,   234,   235,
       0,     0,   236,   654,   591,   238,   592,     0,   239,   240,
     241,   655,   656,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   657,
     593,   658,   260,   261,   262,   263,   659,   264,   265,   594,
     266,   660,   661,   268,   662,   270,   271,   272,     0,   273,
     274,     0,     0,   663,   276,   277,     0,     0,   278,   279,
     595,   280,   596,   664,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   665,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   666,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   597,   328,   329,   330,   667,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   668,   346,   347,   348,   349,   350,
     598,   351,   352,   669,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   670,     0,
     368,   369,     0,   370,   599,   371,   372,   373,   374,   375,
       0,   671,   672,     0,     0,   378,   379,   673,   381,   674,
     675,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,   676,     0,   395,   396,   397,
     398,   399,   400,   677,     0,   402,   601,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   678,     0,     0,     0,
       0,     0,     0,   679,   680,     0,     0,     0,     0,     0,
       0,     0,   682,     0,     0,     0,     0,   683,   619,   620,
     467,   621,   622,   623,   624,   625,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,   578,   111,
     112,   113,   114,   626,   579,   627,   628,     0,   118,   119,
     120,   121,   122,   629,   630,   123,   124,   631,   632,   127,
       0,   128,   129,   130,   131,   633,     0,   634,     0,   133,
     134,   135,   136,   137,   581,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   582,   147,   148,   149,
     635,   636,   637,   638,   639,   640,   641,   150,   151,   152,
     153,   154,   155,   642,   643,   158,   644,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   645,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     646,   186,   187,   188,   647,   648,   190,     0,   191,   192,
     649,   194,     0,   195,     0,   196,   584,     0,   585,   197,
     198,   199,   200,     0,   201,   650,     0,   203,   204,     0,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,   587,
     221,   222,   223,   224,   225,   651,   652,     0,   653,     0,
     229,   588,   589,   230,   590,   231,   232,   233,   234,   235,
       0,     0,   236,   654,   591,   238,   592,     0,   239,   240,
     241,   655,   656,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   657,
     593,   658,   260,   261,   262,   263,   659,   264,   265,   594,
     266,   660,   661,   268,   662,   270,   271,   272,     0,   273,
     274,     0,     0,   663,   276,   277,     0,     0,   278,   279,
     595,   280,   596,   664,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   665,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   666,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   597,   328,   329,   330,   667,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   668,   346,   347,   348,   349,   350,
     598,   351,   352,   669,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   670,     0,
     368,   369,     0,   370,   599,   371,   372,   373,   374,   375,
       0,   671,   672,     0,     0,   378,   379,   673,   381,   674,
     675,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,   676,     0,   395,   396,   397,
     398,   399,   400,   677,  1977,   402,   601,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   678,     0,     0,     0,
       0,     0,     0,   679,   680,     0,     0,     0,     0,     0,
       0,     0,   682,     0,     0,     0,     0,   683,   619,   620,
     467,   621,   622,   623,   624,   625,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,   578,   111,
     112,   113,   114,   626,   579,   627,   628,     0,   118,   119,
     120,   121,   122,   629,   630,   123,   124,   631,   632,   127,
       0,   128,   129,   130,   131,   633,     0,   634,     0,   133,
     134,   135,   136,   137,   581,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   582,   147,   148,   149,
     635,   636,   637,   638,   639,   640,   641,   150,   151,   152,
     153,   154,   155,   642,   643,   158,   644,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   645,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     646,   186,   187,   188,   647,   648,   190,     0,   191,   192,
     649,   194,     0,   195,     0,   196,   584,     0,   585,   197,
     198,   199,   200,     0,   201,   650,     0,   203,   204,     0,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,   587,
     221,   222,   223,   224,   225,   651,   652,     0,   653,     0,
     229,   588,   589,   230,   590,   231,   232,   233,   234,   235,
       0,     0,   236,   654,   591,   238,   592,     0,   239,   240,
     241,   655,   656,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   657,
     593,   658,   260,   261,   262,   263,   659,   264,   265,   594,
     266,   660,   661,   268,   662,   270,   271,   272,     0,   273,
     274,     0,     0,   663,   276,   277,     0,     0,   278,   279,
     595,   280,   596,   664,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   665,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   666,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   597,   328,   329,   330,   667,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   668,   346,   347,   348,   349,   350,
     598,   351,   352,   669,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   670,     0,
     368,   369,     0,   370,   599,   371,   372,   373,   374,   375,
       0,   671,   672,     0,     0,   378,   379,   673,   381,   674,
     675,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,   676,     0,   395,   396,   397,
     398,   399,   400,   677,     0,   402,   601,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   678,     0,     0,     0,
       0,     0,     0,   679,   680,     0,     0,     0,     0,     0,
       0,     0,   682,     0,     0,     0,     0,   683,   619,   620,
     467,   621,   622,   623,   624,   625,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,   578,   111,
     112,   113,   114,   626,   579,   627,   628,     0,   118,   119,
     120,   121,   122,   629,   630,   123,   124,   631,   632,   127,
       0,   128,   129,   130,   131,   633,     0,   634,     0,   133,
     134,   135,   136,   137,   581,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   582,   147,   148,   149,
     635,   636,   637,   638,   639,   640,   641,   150,   151,   152,
     153,   154,   155,   642,   643,   158,   644,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   645,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     646,   186,   187,   188,   647,   648,   190,     0,   191,   192,
     649,   194,     0,   195,     0,   196,   584,     0,   585,   197,
     198,   199,   200,     0,   201,   650,     0,   203,   204,     0,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,   587,
     221,   222,   223,   224,   225,   651,   652,     0,   653,     0,
     229,   588,   589,   230,   590,   231,   232,   233,   234,   235,
       0,     0,   236,   654,   591,   238,   592,     0,   239,   240,
     241,   655,   656,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   657,
     593,   658,   260,   261,   262,   263,   659,   264,   265,   594,
     266,   660,   661,   268,   662,   270,   271,   272,     0,   273,
     274,     0,     0,   663,   276,   277,     0,     0,   278,   279,
     595,   280,   596,   664,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   665,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   666,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   597,   328,   329,   330,   667,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   668,   346,   347,   348,   349,   350,
     598,   351,   352,   669,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   670,     0,
     368,   369,     0,   370,   599,   371,   372,   373,   374,   375,
       0,   671,   672,     0,     0,   378,   379,   673,   381,   674,
     675,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,   676,     0,   395,   396,   397,
     398,   399,   400,   677,     0,   402,   601,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   678,     0,     0,     0,
       0,     0,     0,  1148,  1149,     0,     0,     0,     0,     0,
       0,     0,   682,     0,     0,     0,     0,   683,   619,  1480,
     467,   621,   622,   623,   624,   625,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,   578,   111,
     112,   113,   114,   626,   579,   627,   628,     0,   118,   119,
     120,   121,   122,   629,   630,   123,   124,   631,   632,   127,
       0,   128,   129,   130,   131,   633,     0,   634,     0,   133,
     134,   135,   136,   137,   581,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   582,   147,   148,   149,
     635,   636,   637,   638,   639,   640,   641,   150,   151,   152,
     153,   154,   155,   642,   643,   158,   644,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   645,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     646,   186,   187,   188,   647,   648,   190,     0,   191,   192,
     649,   194,     0,   195,     0,   196,   584,     0,   585,   197,
     198,   199,   200,     0,   201,   650,     0,   203,   204,     0,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,   587,
     221,   222,   223,   224,   225,   651,   652,     0,   653,     0,
     229,   588,   589,   230,   590,   231,   232,   233,   234,   235,
       0,     0,   236,   654,   591,   238,   592,     0,   239,   240,
     241,   655,   656,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   657,
     593,   658,   260,   261,   262,   263,   659,   264,   265,   594,
     266,   660,   661,   268,   662,   270,   271,   272,     0,   273,
     274,     0,     0,   663,   276,   277,     0,     0,   278,   279,
     595,   280,   596,   664,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   665,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   666,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   597,   328,   329,   330,   667,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   668,   346,   347,   348,   349,   350,
     598,   351,   352,   669,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   670,     0,
     368,   369,     0,   370,   599,   371,   372,   373,   374,   375,
       0,   671,   672,     0,     0,   378,   379,   673,   381,   674,
     675,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,   676,     0,   395,   396,   397,
     398,   399,   400,   677,     0,   402,   601,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   678,     0,     0,     0,
       0,     0,     0,   679,   680,     0,     0,     0,     0,     0,
       0,     0,   682,     0,     0,     0,     0,   683,   619,   620,
     467,   621,   622,   623,   624,   625,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,   578,   111,
     112,   113,   114,   626,   579,   627,   628,     0,   118,   119,
     120,   121,   122,   629,   630,   123,   124,   631,   632,   127,
       0,   128,   129,   130,   131,   633,     0,   634,     0,   133,
     134,   135,   136,   137,   581,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   582,   147,   148,   149,
     635,   636,   637,   638,   639,   640,   641,   150,   151,   152,
     153,   154,   155,   642,   643,   158,   644,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   645,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     646,   186,   187,   188,   647,   648,   190,     0,   191,   192,
     649,   194,     0,   195,     0,   196,   584,     0,   585,   197,
     198,   199,   200,     0,   201,   650,     0,   203,   204,     0,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,   587,
     221,   222,   223,   224,   225,   651,   652,     0,   653,     0,
     229,   588,   589,   230,   590,   231,   232,   233,   234,   235,
       0,     0,   236,   654,   591,   238,   592,     0,   239,   240,
     241,   655,   656,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   657,
     593,   658,   260,   261,   262,   263,   659,   264,   265,   594,
     266,   660,   661,   268,   662,   270,   271,   272,     0,   273,
     274,     0,     0,   663,   276,   277,     0,     0,   278,   279,
     595,   280,   596,   664,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   665,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   666,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   597,   328,   329,   330,   667,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   668,   346,   347,   348,   349,   350,
     598,   351,   352,   669,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   670,     0,
     368,   369,     0,   370,   599,   371,   372,   373,   374,   375,
       0,   671,   672,     0,     0,   378,   379,   673,   381,   674,
     675,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,   676,     0,   395,   396,   397,
     398,   399,   400,   677,     0,   402,   601,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   678,     0,     0,     0,
       0,     0,     0,   679,   680,     0,     0,     0,     0,     0,
       0,     0,  2278,     0,     0,     0,     0,   683,   619,   620,
     467,   621,   622,   623,   624,   625,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,   578,   111,
     112,   113,  2512,   626,   579,   627,   628,     0,   118,   119,
     120,   121,   122,   629,   630,   123,   124,   631,   632,   127,
       0,   128,   129,   130,   131,   633,     0,   634,     0,   133,
     134,   135,   136,   137,   581,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   582,   147,   148,  2513,
     635,   636,   637,   638,   639,   640,   641,   150,   151,   152,
     153,   154,   155,   642,   643,   158,   644,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   645,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     646,   186,   187,   188,   647,   648,   190,     0,   191,   192,
     649,   194,     0,   195,     0,   196,   584,     0,   585,   197,
     198,   199,   200,     0,   201,   650,     0,   203,   204,     0,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,   587,
     221,   222,   223,   224,   225,   651,   652,     0,   653,     0,
     229,   588,   589,   230,   590,   231,   232,   233,   234,   235,
       0,     0,   236,   654,   591,   238,   592,     0,   239,   240,
     241,   655,   656,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   657,
     593,   658,   260,   261,   262,   263,   659,   264,   265,   594,
     266,   660,   661,   268,   662,   270,   271,   272,     0,   273,
     274,     0,     0,   663,   276,   277,     0,     0,   278,   279,
     595,   280,   596,   664,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   665,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   666,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   597,   328,   329,   330,   667,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   668,   346,   347,   348,   349,   350,
     598,   351,   352,   669,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   670,     0,
     368,   369,     0,   370,   599,   371,   372,   373,   374,   375,
       0,   671,   672,     0,     0,   378,   379,   673,   381,   674,
     675,   383,   384,   385,   386,  2514,   388,   389,     0,     0,
     390,   391,   392,   393,   394,   676,     0,   395,   396,   397,
     398,   399,   400,   677,     0,   402,   601,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   678,     0,     0,     0,
       0,     0,     0,   679,   680,     0,     0,     0,     0,     0,
       0,     0,   682,     0,     0,     0,     0,   683,   619,   620,
     467,   621,   622,   623,   624,   625,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,   578,   111,
     112,   113,   114,   626,   579,   627,   628,     0,   118,   119,
     120,   121,   122,   629,   630,   123,   124,   631,   632,   127,
       0,   128,   129,   130,   131,   633,     0,   634,     0,   133,
     134,   135,   136,   137,   581,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   582,   147,   148,  2513,
     635,   636,   637,   638,   639,   640,   641,   150,   151,   152,
     153,   154,   155,   642,   643,   158,   644,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   645,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     646,   186,   187,   188,   647,   648,   190,     0,   191,   192,
     649,   194,     0,   195,     0,   196,   584,     0,   585,   197,
     198,   199,   200,     0,   201,   650,     0,   203,   204,     0,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,   587,
     221,   222,   223,   224,   225,   651,   652,     0,   653,     0,
     229,   588,   589,   230,   590,   231,   232,   233,   234,   235,
       0,     0,   236,   654,   591,   238,   592,     0,   239,   240,
     241,   655,   656,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   657,
     593,   658,   260,   261,   262,   263,   659,   264,   265,   594,
     266,   660,   661,   268,   662,   270,   271,   272,     0,   273,
     274,     0,     0,   663,   276,   277,     0,     0,   278,   279,
     595,   280,   596,   664,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   665,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   666,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   597,   328,   329,   330,   667,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   668,   346,   347,   348,   349,   350,
     598,   351,   352,   669,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   670,     0,
     368,   369,     0,   370,   599,   371,   372,   373,   374,   375,
       0,   671,   672,     0,     0,   378,   379,   673,   381,   674,
     675,   383,   384,   385,   386,  2514,   388,   389,     0,     0,
     390,   391,   392,   393,   394,   676,     0,   395,   396,   397,
     398,   399,   400,   677,     0,   402,   601,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   678,     0,     0,     0,
       0,     0,     0,   679,   680,     0,     0,     0,     0,     0,
       0,     0,   682,     0,     0,     0,     0,   683,   619,   620,
     467,   621,   622,   623,   624,   625,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,   578,   111,
     112,   113,   114,   626,   579,   627,   628,     0,   118,   119,
     120,   121,   122,   629,   630,   123,   124,   631,   632,   127,
       0,   128,   129,   130,   131,   633,     0,   634,     0,   133,
     134,   135,   136,   137,   581,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   582,   147,   148,   149,
     635,   636,   637,   638,   639,   640,   641,   150,   151,   152,
     153,   154,   155,   642,   643,   158,     0,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   645,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     646,   186,   187,   188,   647,   648,   190,     0,   191,   192,
     649,   194,     0,   195,     0,   196,   584,     0,   585,   197,
     198,   199,   200,     0,   201,   650,     0,   203,   204,     0,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,   587,
     221,   222,   223,   224,   225,   651,   652,     0,   653,     0,
     229,   588,   589,   230,   590,   231,   232,   233,   234,   235,
       0,     0,   236,   654,   591,   238,   592,     0,   239,   240,
     241,   655,   656,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   657,
     593,   658,   260,   261,   262,   263,     0,   264,   265,   594,
     266,   660,   661,   268,   662,   270,   271,   272,     0,   273,
     274,     0,     0,   663,   276,   277,     0,     0,   278,   279,
     595,   280,   596,   664,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   665,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   666,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   597,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   668,   346,   347,   348,   349,   350,
     598,   351,   352,   669,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   670,     0,
     368,   369,     0,   370,   599,   371,   372,   373,   374,   375,
       0,   671,   672,     0,     0,   378,   379,   673,   381,   674,
     675,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,   676,     0,   395,   396,   397,
     398,   399,   400,   677,     0,   402,   601,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,     0,     0,     0,
       0,     0,     0,  1338,  1339,     0,     0,   619,   620,   467,
     621,   622,  1340,   624,   625,     0,     0,   683,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   103,   104,   105,     0,     0,     0,     0,     0,     0,
       0,   106,   107,     0,   108,   109,   110,   578,   111,   112,
     113,   114,   626,   579,   627,   628,     0,   118,   119,   120,
     121,   122,   629,   630,   123,   124,   631,   632,   127,     0,
     128,   129,   130,   131,   633,     0,   634,     0,   133,   134,
     135,   136,   137,   581,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   582,   147,   148,   149,   635,
     636,   637,   638,   639,   640,   641,   150,   151,   152,   153,
     154,   155,   642,   643,   158,     0,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,     0,
       0,   170,   171,   645,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,   184,   646,
     186,   187,   188,   647,   648,   190,     0,   191,   192,   649,
     194,     0,   195,     0,   196,   584,     0,   585,   197,   198,
     199,   200,     0,   201,   650,     0,   203,   204,     0,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,     0,
     214,   215,   216,   217,   218,   219,     0,   220,   587,   221,
     222,   223,   224,   225,   651,   652,     0,   653,     0,   229,
     588,   589,   230,   590,   231,   232,   233,   234,   235,     0,
       0,   236,   654,   591,   238,   592,     0,   239,   240,   241,
     655,   656,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   657,   593,
     658,   260,   261,   262,   263,     0,   264,   265,   594,   266,
     660,   661,   268,   662,   270,   271,   272,     0,   273,   274,
       0,     0,   275,   276,   277,     0,     0,   278,   279,   595,
     280,   596,   664,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   291,   292,   665,   294,   295,   296,   455,
     298,   299,     0,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   666,   310,   311,   312,   313,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,   597,   328,   329,   330,  1469,  1470,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,   668,   346,   347,   348,   349,   350,   598,
     351,   352,   669,   354,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   670,     0,   368,
     369,     0,   370,   599,   371,   372,   373,   374,   375,     0,
     671,   672,     0,     0,   378,   379,   673,   381,   674,   675,
     383,   384,   385,   386,   387,   388,   389,     0,     0,   390,
     391,   392,   393,   394,   676,     0,   395,   396,   397,   398,
     399,   400,   677,     0,   402,   601,   403,   404,   405,   406,
       0,     0,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,     0,     0,     0,     0,
       0,     0,  1471,  1472,     0,     0,     0,     0,     0,     0,
       0,  1340,     0,     0,     0,     0,   683,   619,   620,   467,
     621,   622,   623,   624,   625,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   103,   104,   105,     0,     0,     0,     0,     0,     0,
       0,   106,   107,     0,   108,   109,   110,   578,   111,   112,
     113,   114,   626,   579,   627,   628,     0,   118,   119,   120,
     121,   122,   629,   630,   123,   124,   631,   632,   127,     0,
     128,   129,   130,   131,   633,     0,   634,     0,   133,   134,
     135,   136,   137,   581,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   582,   147,   148,   149,   635,
     636,   637,   638,   639,   640,   641,   150,   151,   152,   153,
     154,   155,   642,   643,   158,     0,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,     0,
       0,   170,   171,   645,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,   184,   646,
     186,   187,   188,   647,   648,   190,     0,   191,   192,   649,
     194,     0,   195,     0,   196,   584,     0,   585,   197,   198,
     199,   200,     0,   201,   650,     0,   203,   204,     0,   205,
     206,   207,   208,   209,   586,   210,   211,   212,   213,     0,
     214,   215,   216,   217,   218,   219,     0,   220,   587,   221,
     222,   223,   224,   225,   651,   652,     0,   653,     0,   229,
       0,   589,   230,   590,   231,   232,   233,   234,   235,     0,
       0,   236,   654,   591,   238,   592,     0,   239,   240,   241,
     655,   656,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   657,   593,
     658,   260,   261,   262,   263,     0,   264,   265,   594,   266,
     660,   661,   268,   662,   270,   271,   272,     0,   273,   274,
       0,     0,   663,   276,   277,     0,     0,   278,   279,   595,
     280,   596,   664,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   291,   292,   665,   294,   295,   296,   455,
     298,   299,     0,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   666,   310,   311,   312,   313,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,   597,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,   668,   346,   347,   348,   349,   350,   598,
     351,   352,   669,   354,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   670,     0,   368,
     369,     0,   370,   599,   371,   372,   373,   374,   375,     0,
     671,   672,     0,     0,   378,   379,   673,   381,   674,   675,
     383,   384,   385,   386,   387,   388,   389,     0,     0,   390,
     391,   392,   393,   394,   676,     0,   395,   396,   397,   398,
     399,   400,   677,     0,   402,   601,   403,   404,   405,   406,
       0,     0,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,     0,     0,     0,     0,
       0,     0,  1338,  1339,     0,     0,     0,     0,     0,     0,
       0,  1340,     0,     0,     0,     0,   683,   619,   620,   467,
     621,   622,   623,   624,   625,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   103,   104,   105,     0,     0,     0,     0,     0,     0,
       0,   106,   107,     0,   108,   109,   110,   578,   111,   112,
     113, -1455,   626,   579,   627,   628,     0,   118,   119,   120,
     121,   122,   629,   630,   123,   124,   631,   632,   127,     0,
     128,   129,   130,   131,   633,     0,   634,     0,   133,   134,
     135,   136,   137,   581,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   582,   147,   148,  2513,   635,
     636,   637,   638,   639,   640,   641,   150,   151,   152,   153,
     154,   155,   642,   643,   158,   644,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,     0,
       0,   170,   171,   645,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,   184,   646,
     186,   187,   188,   647,   648,   190,     0,   191,   192,   649,
     194,     0,   195,     0,   196,   584,     0,   585,   197,   198,
     199,   200,     0,   201,   650,     0,   203,   204,     0,   205,
     206,   207,   208,   209, -1455,   210,   211,   212,   213,     0,
     214,   215,   216,   217,   218,   219,     0,   220,   587,   221,
     222,   223,   224,   225,   651,   652,     0,   653,     0,   229,
       0,     0,   230,   590,   231,   232,   233,   234,   235,     0,
       0,   236,   654,   591,   238, -1455,     0,   239,   240,   241,
     655,   656,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   657,   593,
     658,   260,   261,   262,   263,     0,   264,   265,     0,   266,
     660,   661,   268,   662,   270,   271,   272,     0,   273,   274,
       0,     0,   663,   276,   277,     0,     0,   278,   279,   595,
     280,   596,   664,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   291,   292,   665,   294,   295,   296,   455,
     298,   299,     0,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   666,   310,   311,   312,   313,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,   597,   328,   329,   330,   667,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,   668,   346,   347,   348,   349,   350, -1455,
     351,   352,   669,   354,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   670,     0,   368,
     369,     0,   370,   599,   371,   372,   373,   374,   375,     0,
     671,   672,     0,     0,   378,   379,   673,   381,   674,   675,
     383,   384,   385,   386,  2514,   388,   389,     0,     0,   390,
     391,   392,   393,   394,   676,     0,   395,   396,   397,   398,
     399,   400,   677,     0,   402,   601,   403,   404,   405,   406,
       0,     0,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427, -1455,     0,     0,     0,     0,
       0,     0,   679,   680,     0,     0,     0,     0,     0,     0,
       0,   682,     0,     0,     0,     0,   683,   619,   620,   467,
     621,   622,   623,   624,   625,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   103,   104,   105,     0,     0,     0,     0,     0,     0,
       0,   106,   107,     0,   108,   109,   110,   578,   111,   112,
     113,     0,   626,   579,   627,   628,     0,   118,   119,   120,
     121,   122,   629,   630,   123,   124,   631,   632,   127,     0,
     128,   129,   130,   131,   633,     0,   634,     0,   133,   134,
     135,   136,   137,   581,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   582,   147,   148,   149,   635,
     636,   637,   638,   639,   640,   641,   150,   151,   152,   153,
     154,   155,   642,   643,   158,   644,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,     0,
       0,   170,   171,   645,   173,   174,     0,   175,   176,   177,
       0,   178,     0,   180,     0,   181,   182,   183,   184,   646,
     186,   187,   188,   647,   648,   190,     0,   191,   192,   649,
     194,     0,   195,     0,   196,   584,     0,   585,   197,   198,
     199,   200,     0,   201,   650,     0,   203,   204,     0,   205,
     206,   207,   208,   209,     0,   210,   211,   212,   213,     0,
     214,   215,   216,   217,   218,   219,     0,   220,   587,   221,
     222,   223,   224,   225,   651,   652,     0,   653,     0,   229,
       0,     0,   230,   590,   231,   232,   233,   234,   235,     0,
       0,   236,   654,   591,   238,     0,     0,   239,   240,   241,
     655,   656,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   657,   593,
     658,   260,   261,   262,   263,     0,   264,   265,     0,   266,
     660,   661,   268,   662,   270,   271,   272,     0,   273,   274,
       0,     0,   663,   276,   277,     0,     0,   278,   279,   595,
     280,   596,   664,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   291,   292,   665,   294,   295,   296,   455,
     298,   299,     0,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   666,   310,   311,   312,   313,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,   597,   328,   329,   330,   667,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,   668,   346,   347,   348,   349,   350,     0,
     351,   352,   669,   354,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   670,     0,   368,
     369,     0,   370,   599,   371,   372,   373,   374,   375,     0,
     671,   672,     0,     0,   378,   379,   673,   381,   674,   675,
     383,   384,   385,   386,   387,   388,   389,     0,     0,   390,
     391,   392,   393,   394,   676,     0,   395,   396,   397,   398,
     399,   400,   677,     0,   402,   601,   403,   404,   405,   406,
       0,     0,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,     0,     0,     0,     0,
       0,     0,   679,   680,    93,     0,     0,     0,     0,     0,
       0,   682,     0,     0,     0,     0,   683,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   103,   104,
     105,     0,     0,     0,     0,     0,  1949,     0,   106,   107,
       0,   108,   109,   110,     0,   111,   112,   113,   114,   115,
       0,   116,   117,     0,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   133,   134,   135,   136,   137,
       0,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,  -550,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   150,   151,   152,   153,   154,   155,   156,
     157,   158,     0,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,     0,     0,   170,   171,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,   184,   185,   186,   187,   188,
     189,     0,   190,     0,   191,   192,   193,   194,     0,   195,
       0,   196,     0,     0,  -550,   197,   198,   199,   200,     0,
     201,   202,     0,   203,   204,     0,   205,   206,   207,   208,
     209,     0,   210,   211,   212,   213,     0,   214,   215,   216,
     217,   218,   219,     0,   220,  -550,   221,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   229,     0,     0,   230,
    -550,   231,   232,   233,   234,   235,     0,     0,   236,   237,
    -550,   238,     0,     0,   239,   240,   241,     0,     0,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,  -550,   259,   260,   261,
     262,   263,     0,   264,   265,     0,   266,     0,   267,   268,
     269,   270,   271,   272,     0,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,   279,     0,   280,     0,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,     0,
     291,   292,   293,   294,   295,   296,   455,   298,   299,     0,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,     0,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,     0,   326,   327,
    -550,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,     0,   370,
       0,   371,   372,   373,   374,   375,     0,   376,   377,     0,
       0,   378,   379,   380,   381,   382,     0,   383,   384,   385,
     386,   387,   388,   389,     0,     0,   390,   391,   392,   393,
     394,     0,     0,   395,   396,   397,   398,   399,   400,   401,
       0,   402,     0,   403,   404,   405,   406,     0,     0,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,     0,     0,   619,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   748,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,   578,   111,   112,   113,   114,
     115,   579,   116,   117,     0,   118,   119,   120,   121,   122,
       0,   630,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   633,     0,   634,     0,   133,   134,   135,   136,
     137,   581,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   582,   147,   148,   149,   635,   636,   637,
     638,   639,   640,   641,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   185,   186,   187,
     188,   647,     0,   190,     0,   191,   192,   193,   194,     0,
     195,     0,   196,   584,     0,   585,   197,   198,   199,   200,
       0,   201,   650,     0,   203,   204,     0,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,   587,   221,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   229,   588,   589,
     230,   590,   231,   232,   233,   234,   235,  1713,     0,   236,
     654,   591,   238,   592,     0,   239,   240,   241,   655,   656,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   593,   259,   260,
     261,   262,   263,     0,   264,   265,   594,   266,     0,   661,
     268,   269,   270,   271,   272,     0,   273,   274,     0,   496,
     275,   276,   277,     0,     0,   278,   279,   595,   280,   596,
     664,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   665,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   597,   328,   329,   330,   331,  1714,   333,   334,   335,
     336,   337,   338,   339,   340,    20,   341,   342,   343,   344,
     345,   668,   346,   347,   348,   349,   350,   598,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   670,     0,   368,   369,    24,
     370,   599,   371,   372,   373,   374,   375,     0,   376,   377,
       0,     0,   378,   379,   673,   381,   674,     0,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   676,     0,   395,   396,   397,   398,   399,   600,
     401,     0,   402,   601,   403,   404,   405,   406,     0,     0,
     407,     0,    27,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,     0,    28,   619,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1715,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,   578,   111,   112,   113,
     114,   115,   579,   116,   117,     0,   118,   119,   120,   121,
     122,     0,   630,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   633,     0,   634,     0,   133,   134,   135,
     136,   137,   581,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,   582,   147,   148,   149,   635,   636,
     637,   638,   639,   640,   641,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,     0,     0,
     170,   171,   172,   173,   174,     0,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,   184,   185,   186,
     187,   188,   647,     0,   190,     0,   191,   192,   193,   194,
       0,   195,     0,   196,   584,     0,   585,   197,   198,   199,
     200,     0,   201,   650,     0,   203,   204,     0,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,     0,   214,
     215,   216,   217,   218,   219,     0,   220,   587,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,   588,
     589,   230,   590,   231,   232,   233,   234,   235,  1713,     0,
     236,   654,   591,   238,   592,     0,   239,   240,   241,   655,
     656,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   593,   259,
     260,   261,   262,   263,     0,   264,   265,   594,   266,     0,
     661,   268,   269,   270,   271,   272,     0,   273,   274,     0,
     496,   275,   276,   277,     0,     0,   278,   279,   595,   280,
     596,   664,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   291,   292,   665,   294,   295,   296,   455,   298,
     299,     0,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   597,   328,   329,   330,   331,  1714,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,   668,   346,   347,   348,   349,   350,   598,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   670,     0,   368,   369,
       0,   370,   599,   371,   372,   373,   374,   375,     0,   376,
     377,     0,     0,   378,   379,   673,   381,   674,     0,   383,
     384,   385,   386,   387,   388,   389,     0,     0,   390,   391,
     392,   393,   394,   676,     0,   395,   396,   397,   398,   399,
     400,   401,     0,   402,   601,   403,   404,   405,   406,     0,
       0,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,     0,   619,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1715,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,   578,   111,   112,   113,
     114,   115,   579,   116,   117,     0,   118,   119,   120,   121,
     122,     0,   630,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   633,     0,   634,     0,   133,   134,   135,
     136,   137,   581,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,   582,   147,   148,   149,   635,   636,
     637,   638,   639,   640,   641,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,     0,     0,
     170,   171,   172,   173,   174,     0,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,   184,   185,   186,
     187,   188,   647,     0,   190,     0,   191,   192,   193,   194,
       0,   195,     0,   196,   584,     0,   585,   197,   198,   199,
     200,     0,   201,   650,     0,   203,   204,     0,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,     0,   214,
     215,   216,   217,   218,   219,     0,   220,   587,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,   588,
     589,   230,   590,   231,   232,   233,   234,   235,     0,     0,
     236,   654,   591,   238,   592,     0,   239,   240,   241,   655,
     656,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   593,   259,
     260,   261,   262,   263,     0,   264,   265,   594,   266,     0,
     661,   268,   269,   270,   271,   272,     0,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,   279,   595,   280,
     596,   664,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   291,   292,   665,   294,   295,   296,   455,   298,
     299,     0,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   597,   328,   329,   330,   331,  1714,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,   668,   346,   347,   348,   349,   350,   598,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   670,     0,   368,   369,
       0,   370,   599,   371,   372,   373,   374,   375,     0,   376,
     377,     0,     0,   378,   379,   673,   381,   674,     0,   383,
     384,   385,   386,   387,   388,   389,     0,     0,   390,   391,
     392,   393,   394,   676,     0,   395,   396,   397,   398,   399,
     400,   401,     0,   402,   601,   403,   404,   405,   406,     0,
       0,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,     0,   619,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,   578,   111,   112,   113,
     114,   115,   579,   116,   117,     0,   118,   119,   120,   121,
     122,     0,   630,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   633,     0,   634,     0,   133,   134,   135,
     136,   137,   581,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,   582,   147,   148,   149,   635,   636,
     637,   638,   639,   640,   641,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,     0,     0,
     170,   171,   172,   173,   174,     0,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,   184,   185,   186,
     187,   188,   647,     0,   190,     0,   191,   192,   193,   194,
       0,   195,     0,   196,   584,     0,   585,   197,   198,   199,
     200,     0,   201,   650,     0,   203,   204,     0,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,     0,   214,
     215,   216,   217,   218,   219,     0,   220,   587,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,   588,
     589,   230,   590,   231,   232,   233,   234,   235,     0,     0,
     236,   654,   591,   238,   592,     0,   239,   240,   241,   655,
     656,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   593,   259,
     260,   261,   262,   263,     0,   264,   265,   594,   266,     0,
     661,   268,   269,   270,   271,   272,     0,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,   279,   595,   280,
     596,   664,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   291,   292,   665,   294,   295,   296,   455,   298,
     299,     0,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   597,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,   668,   346,   347,   348,   349,   350,   598,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   670,     0,   368,   369,
       0,   370,   599,   371,   372,   373,   374,   375,     0,   376,
     377,     0,     0,   378,   379,   673,   381,   674,     0,   383,
     384,   385,   386,   387,   388,   389,     0,     0,   390,   391,
     392,   393,   394,   676,     0,   395,   396,   397,   398,   399,
     400,   401,     0,   402,   601,   403,   404,   405,   406,     0,
       0,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,     0,   577,   850,   467,     0,
       0,     0,   624,     0,     0,     0,     0,     0,     0,     0,
    2290,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,   578,   111,   112,   113,
     114,   115,   579,   116,   117,     0,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,   580,     0,   133,   134,   135,
     136,   137,   581,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,   582,   147,   148,   149,     0,     0,
       0,   583,     0,     0,     0,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,     0,     0,
     170,   171,   172,   173,   174,     0,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   851,   190,     0,   191,   192,   193,   194,
       0,   195,     0,   196,   584,     0,   585,   197,   198,   199,
     200,     0,   201,   202,     0,   203,   204,     0,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,     0,   214,
     215,   216,   217,   218,   219,     0,   220,   587,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,   588,
     589,   230,   590,   231,   232,   233,   234,   235,     0,     0,
     236,   237,   591,   238,   592,     0,   239,   240,   241,     0,
       0,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   593,   259,
     260,   261,   262,   263,     0,   264,   265,   594,   266,     0,
     267,   268,   269,   270,   271,   272,     0,   273,   274,   852,
       0,   275,   276,   277,     0,     0,   278,   279,   595,   280,
     596,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   291,   292,   293,   294,   295,   296,   455,   298,
     299,     0,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   597,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   598,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
       0,   370,   599,   371,   372,   373,   374,   375,     0,   376,
     377,     0,     0,   378,   379,   380,   381,   382,   853,   383,
     384,   385,   386,   387,   388,   389,     0,     0,   390,   391,
     392,   393,   394,     0,     0,   395,   396,   397,   398,   399,
     400,   401,     0,   402,   601,   403,   404,   405,   406,     0,
       0,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,     0,   577,     0,     0,     0,
       0,   854,   855,  2426,     0,     0,     0,     0,     0,     0,
    2427,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     103,   104,   105,     3,     4,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,   578,   111,   112,   113,
     114,   115,   579,   116,   117,     0,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,   580,     0,   133,   134,   135,
     136,   137,   581,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,   582,   147,   148,   149,     0,     0,
       0,   583,     0,     0,     0,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,     0,     0,
     170,   171,   172,   173,   174,     0,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,   184,   185,   186,
     187,   188,   189,     0,   190,     0,   191,   192,   193,   194,
       0,   195,     0,   196,   584,     0,   585,   197,   198,   199,
     200,     0,   201,   202,     0,   203,   204,     0,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,     0,   214,
     215,   216,   217,   218,   219,     0,   220,   587,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,   588,
     589,   230,   590,   231,   232,   233,   234,   235,     0,     0,
     236,   237,   591,   238,   592,     0,   239,   240,   241,     0,
       0,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   593,   259,
     260,   261,   262,   263,     0,   264,   265,   594,   266,     0,
     267,   268,   269,   270,   271,   272,     0,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,   279,   595,   280,
     596,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   291,   292,   293,   294,   295,   296,   455,   298,
     299,     0,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   597,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,    20,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   598,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
      24,   370,   599,   371,   372,   373,   374,   375,     0,   376,
     377,     0,     0,   378,   379,   380,   381,   382,     0,   383,
     384,   385,   386,   387,   388,   389,     0,     0,   390,   391,
     392,   393,   394,     0,     0,   395,   396,   397,   398,   399,
     600,   401,     0,   402,   601,   403,   404,   405,   406,     0,
       0,   407,     0,    27,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,     0,    28,    93,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   103,   104,   105,     0,     0,     0,     0,     0,     0,
       0,   106,   107,     0,   108,   109,   110,     0,   111,   112,
     113,   114,   115,     0,   116,   117,     0,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   133,   134,
     135,   136,   137,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   150,   151,   152,   153,
     154,   155,   156,   157,   158,     0,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,     0,
       0,   170,   171,   172,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,   184,   185,
     186,   187,   188,   189,     0,   190,     0,   191,   192,   193,
     194,     0,   195,     0,   196,     0,     0,     0,   197,   198,
     199,   200,     0,   201,   202,     0,   203,   204,     0,   205,
     206,   207,   208,   209,     0,   210,   211,   212,   213,     0,
     214,   215,   216,   217,   218,   219,     0,   220,     0,   221,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   229,
       0,     0,   230,     0,   231,   232,   233,   234,   235,     0,
       0,   236,   237,     0,   238,     0,     0,   239,   240,   241,
       0,     0,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,     0,
     259,   260,   261,   262,   263,     0,   264,   265,     0,   266,
       0,   267,   268,   269,   270,   271,   272,     0,   273,   274,
       0,     0,   275,   276,   277,     0,     0,   278,   279,     0,
     280,     0,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   291,   292,   293,   294,   295,   296,   455,
     298,   299,     0,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,    20,   341,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,    24,   370,     0,   371,   372,   373,   374,   375,     0,
     376,   377,     0,     0,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,   388,   389,     0,     0,   390,
     391,   392,   393,   394,     0,     0,   395,   396,   397,   398,
     399,   600,   401,     0,   402,     0,   403,   404,   405,   406,
       0,     0,   407,     0,    27,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,     0,    28,    93,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   111,
     112,   113,   114,   115,     0,   116,   117,     0,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   133,
     134,   135,   136,   137,     0,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   150,   151,   152,
     153,   154,   155,   156,   157,   158,     0,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   172,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     185,   186,   187,   188,   189,     0,   190,     0,   191,   192,
     193,   194,     0,   195,     0,   196,     0,     0,     0,   197,
     198,   199,   200,     0,   201,   202,     0,   203,   204,     0,
     205,   206,   207,   208,   209,     0,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,     0,
     221,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     229,     0,     0,   230,     0,   231,   232,   233,   234,   235,
       0,     0,   236,   237,     0,   238,     0,     0,   239,   240,
     241,     0,     0,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
       0,   259,   260,   261,   262,   263,     0,   264,   265,     0,
     266,     0,   267,   268,   269,   270,   271,   272,     0,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,   279,
       0,   280,     0,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   293,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,     0,   370,     0,   371,   372,   373,   374,   375,
       0,   376,   377,     0,     0,   378,   379,   380,   381,   382,
       0,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,     0,     0,   395,   396,   397,
     398,   399,   400,   401,     0,   402,     0,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,     0,    93,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   726,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   111,
     112,   113,   114,   115,     0,   116,   117,     0,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   133,
     134,   135,   136,   137,     0,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   150,   151,   152,
     153,   154,   155,   156,   157,   158,     0,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   172,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     185,   186,   187,   188,   189,     0,   190,     0,   191,   192,
     193,   194,     0,   195,     0,   196,     0,     0,     0,   197,
     198,   199,   200,     0,   201,   202,     0,   203,   204,     0,
     205,   206,   207,   208,   209,     0,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,     0,
     221,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     229,     0,     0,   230,     0,   231,   232,   233,   234,   235,
       0,     0,   236,   237,     0,   238,     0,     0,   239,   240,
     241,     0,     0,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
       0,   259,   260,   261,   262,   263,     0,   264,   265,     0,
     266,     0,   267,   268,   269,   270,   271,   272,     0,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,   279,
       0,   280,     0,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   293,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,     0,   370,     0,   371,   372,   373,   374,   375,
       0,   376,   377,     0,     0,   378,   379,   380,   381,   382,
       0,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,     0,     0,   395,   396,   397,
     398,   399,   400,   401,     0,   402,     0,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,     0,    93,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1459,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   111,
     112,   113,   114,   115,     0,   116,   117,     0,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   133,
     134,   135,   136,   137,     0,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   150,   151,   152,
     153,   154,   155,   156,   157,   158,     0,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   172,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     185,   186,   187,   188,   189,     0,   190,     0,   191,   192,
     193,   194,     0,   195,     0,   196,     0,     0,     0,   197,
     198,   199,   200,     0,   201,   202,     0,   203,   204,     0,
     205,   206,   207,   208,   209,     0,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,     0,
     221,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     229,     0,     0,   230,     0,   231,   232,   233,   234,   235,
       0,     0,   236,   237,     0,   238,     0,     0,   239,   240,
     241,     0,     0,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
       0,   259,   260,   261,   262,   263,     0,   264,   265,     0,
     266,     0,   267,   268,   269,   270,   271,   272,     0,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,   279,
       0,   280,     0,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   293,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,     0,   370,     0,   371,   372,   373,   374,   375,
       0,   376,   377,     0,     0,   378,   379,   380,   381,   382,
       0,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,     0,     0,   395,   396,   397,
     398,   399,   400,   401,     0,   402,     0,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,     0,    93,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1932,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   111,
     112,   113,   114,   115,     0,   116,   117,     0,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   133,
     134,   135,   136,   137,     0,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   150,   151,   152,
     153,   154,   155,   156,   157,   158,     0,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   172,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     185,   186,   187,   188,   189,     0,   190,     0,   191,   192,
     193,   194,     0,   195,     0,   196,     0,     0,     0,   197,
     198,   199,   200,     0,   201,   202,     0,   203,   204,     0,
     205,   206,   207,   208,   209,     0,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,     0,
     221,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     229,     0,     0,   230,     0,   231,   232,   233,   234,   235,
       0,     0,   236,   237,     0,   238,     0,     0,   239,   240,
     241,     0,     0,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
       0,   259,   260,   261,   262,   263,     0,   264,   265,     0,
     266,     0,   267,   268,   269,   270,   271,   272,     0,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,   279,
       0,   280,     0,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   293,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,     0,   370,     0,   371,   372,   373,   374,   375,
       0,   376,   377,     0,     0,   378,   379,   380,   381,   382,
       0,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,     0,     0,   395,   396,   397,
     398,   399,   400,   401,     0,   402,     0,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,     0,     0,     0,
       0,   874,   850,   467,     0,     0,  1320,   624,     0,     0,
       0,     0,  2140,  1321,  1322,  1323,    94,    95,    96,    97,
      98,    99,   100,   101,  1032,   103,   104,   105,  1033,  1034,
    1035,  1036,  1037,  1038,  1039,   106,   107,  1040,   108,   109,
     110,   578,   111,   112,   113,     0,   875,   579,   876,   877,
    1041,   118,   119,   120,   121,   122,  1042,  1043,   123,   124,
     878,   879,   127,  1044,   128,   129,   130,   131,     0,  1045,
     580,  1046,   133,   134,   135,   136,   137,   581,   138,   139,
     140,  1047,   141,   142,   143,   144,   145,   146,  1048,   582,
     147,   148,   149,  1049,  1050,  1051,   583,  1052,  1053,  1054,
     150,   151,   152,   153,   154,   155,   880,   881,   158,  1055,
     159,  1056,   160,   161,   162,   163,   164,   165,  1057,   166,
     167,   168,   169,  1058,  1059,   170,   171,   645,   173,   174,
    1060,   175,   176,   177,  1061,   178,   179,   180,  1062,   181,
     182,   183,   184,     0,   186,   187,   188,     0,  1063,   190,
    1064,   191,   192,   882,   194,  1065,   195,  1066,   196,   584,
    1067,   585,   197,   198,   199,   200,  1068,   201,     0,  1069,
       0,   204,  1070,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,  1071,   214,   215,   216,   217,   218,   219,
    1072,   220,   587,     0,   222,   223,   224,   225,   883,   884,
    1073,   885,  1074,   229,   588,   589,   230,   590,   231,   232,
     233,   234,   235,  1075,  1076,   236,     0,   591,   238,   592,
    1077,   239,   240,   241,  1078,  1079,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   886,   593,   887,   260,   261,   262,  2040,  1080,
     264,   265,   594,   266,  1081,     0,   268,   888,   270,   271,
     272,  1082,   273,   274,  1083,  1084,  2041,   276,   277,  1085,
    1086,   278,     0,   595,   280,   596,     0,   282,   283,   284,
     285,   286,   287,   288,   289,   290,  1087,   291,   292,     0,
     294,   295,     0,   455,   298,   299,  1088,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   889,   310,   311,   312,
     313,  1089,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,  1090,   326,   327,   597,   328,   329,
     330,     0,   332,   333,   334,   335,   336,   337,   338,   339,
     340,  1091,   341,   342,   343,   344,   345,  1092,   346,  2042,
     348,   349,   350,   598,   351,   352,   891,   354,  1093,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,     0,  1094,   368,   369,  1095,   370,   599,   371,   372,
     373,   374,   375,  1096,   892,   893,  1097,  1098,   378,   379,
       0,   381,     0,  1099,   383,   384,   385,   386,   387,   388,
     389,  1100,  1101,   390,   391,   392,   393,   394,  1102,  1103,
     395,   396,   397,   398,   399,     0,   894,  1104,   402,   601,
     403,   404,   405,   406,  1105,  1106,   407,  1107,  1108,   408,
     409,   410,   411,   412,   413,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   425,   426,   427,     0,
      93,     0,  1324,  1325,  1326,  1320,  2043,  2044,  1329,  1330,
    1331,  1332,  1321,  1322,  1323,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   111,   112,   113,   114,   115,     0,   116,   117,     0,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   133,   134,   135,   136,   137,     0,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   150,
     151,   152,   153,   154,   155,   156,   157,   158,     0,   159,
       0,   160,   161,   162,   163,   164,   165,     0,   166,   167,
     168,   169,     0,     0,   170,   171,   172,   173,   174,     0,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,   184,   185,   186,   187,   188,   189,     0,   190,     0,
     191,   192,   193,   194,     0,   195,     0,   196,     0,     0,
       0,   197,   198,   199,   200,     0,   201,   202,     0,   203,
     204,     0,   205,   206,   207,   208,   209,     0,   210,   211,
     212,   213,     0,   214,   215,   216,   217,   218,   219,     0,
     220,     0,   221,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   229,     0,     0,   230,     0,   231,   232,   233,
     234,   235,     0,     0,   236,   237,     0,   238,     0,     0,
     239,   240,   241,     0,     0,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,     0,   259,   260,   261,   262,   263,     0,   264,
     265,     0,   266,     0,   267,   268,   269,   270,   271,   272,
       0,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,   279,     0,   280,     0,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,     0,   291,   292,   293,   294,
     295,   296,   455,   298,   299,     0,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
       0,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,     0,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,     0,   370,     0,   371,   372,   373,
     374,   375,     0,   376,   377,     0,     0,   378,   379,   380,
     381,   382,     0,   383,   384,   385,   386,   387,   388,   389,
       0,     0,   390,   391,   392,   393,   394,     0,     0,   395,
     396,   397,   398,   399,   400,   401,     0,   402,     0,   403,
     404,   405,   406,     0,     0,   407,     0,     0,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,     0,
       0,  1324,  1325,  1326,     0,  1327,  1328,  1329,  1330,  1331,
    1332,   970,     0,     0,   971,     0,     0,     0,   972,   973,
     974,     0,     0,     0,     0,     0,     0,     0,     0,   970,
       0,     0,   971,     0,     0,   975,   972,   973,   974,     0,
       0,     0,     0,   977,     0,     0,     0,     0,   970,     0,
     978,   971,     0,   975,     0,   972,   973,   974,     0,     0,
       0,   977,     0,     0,     0,     0,     0,     0,   978,     0,
       0,     0,   975,     0,   979,     0,     0,     0,     0,     0,
     977,     0,     0,     0,     0,     0,   970,   978,     0,   971,
       0,     0,   979,   972,   973,   974,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   970,     0,     0,   971,     0,
     975,   979,   972,   973,   974,     0,     0,     0,   977,     0,
       0,     0,     0,   970,     0,   978,   971,     0,     0,   975,
     972,   973,   974,     0,     0,     0,     0,   977,     0,     0,
       0,     0,     0,     0,   978,     0,     0,   975,     0,   979,
       0,     0,     0,     0,     0,   977,     0,     0,   970,     0,
       0,   971,   978,     0,     0,   972,   973,   974,   979,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   975,   980,     0,     0,   979,     0,   981,     0,
     977,     0,     0,     0,     0,     0,     0,   978,     0,     0,
       0,   980,     0,     0,     0,     0,   981,     0,     0,   982,
     983,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     980,   979,     0,     0,   984,   981,     0,   982,   983,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   984,     0,     0,     0,   982,   983,     0,     0,
       0,     0,     0,     0,   985,     0,     0,   986,   980,     0,
       0,   984,     0,   981,     0,     0,     0,     0,     0,     0,
       0,   987,   985,     0,   988,   986,     0,   980,     0,     0,
       0,     0,   981,     0,   982,   983,     0,     0,     0,   987,
       0,   985,   988,     0,   986,   980,     0,     0,     0,   984,
     981,     0,     0,   982,   983,     0,     0,     0,   987,     0,
       0,   988,     0,     0,     0,     0,     0,     0,   984,     0,
       0,   982,   983,     0,     0,     0,     0,     0,     0,   985,
     980,     0,   986,     0,     0,   981,   984,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   987,     0,   985,   988,
       0,   986,     0,     0,     0,     0,   982,   983,   989,     0,
       0,     0,     0,     0,     0,   987,   985,     0,   988,   986,
       0,   984,     0,     0,     0,     0,   989,     0,     0,     0,
       0,     0,     0,   987,     0,     0,   988,     0,     0,     0,
     970,     0,     0,   971,     0,   989,     0,   972,   973,   974,
       0,   985,     0,     0,   986,     0,     0,   777,     0,     0,
       0,     0,     0,   778,   975,     0,     0,     0,   987,     0,
     790,   988,   977,     0,     0,     0,     0,     0,     0,   978,
       0,     0,     0,   989,     0,     0,     0,     0,     0,   791,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   989,   979,   990,     0,     0,   991,   992,   993,
       0,   994,   995,   996,   997,   998,   999,     0,     0,     0,
     989,  1909,   990,     0,     0,   991,   992,   993,     0,   994,
     995,   996,   997,   998,   999,     0,     0,     0,   792,  2004,
       0,   990,     0,     0,   991,   992,   993,     0,   994,   995,
     996,   997,   998,   999,     0,   989,     0,     0,  2093,     0,
       0,     0,     0,     0,     0,   779,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   990,
       0,     0,   991,   992,   993,     0,   994,   995,   996,   997,
     998,   999,     0,     0,     0,     0,  2112,     0,   990,     0,
       0,   991,   992,   993,     0,   994,   995,   996,   997,   998,
     999,     0,   980,     0,     0,  2254,   990,   981,     0,   991,
     992,   993,   793,   994,   995,   996,   997,   998,   999,     0,
       0,     0,     0,  2471,     0,     0,     0,     0,   982,   983,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   990,     0,   984,   991,   992,   993,     0,   994,   995,
     996,   997,   998,   999,     0,     0,     0,     0,  2483,     0,
     794,     0,     0,   795,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   985,   796,     0,   986,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     987,     0,     0,   988,     0,   780,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   797,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1529,     0,     0,     0,   782,   799,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   800,
       0,     0,     0,     0,     0,  1530,     0,   989,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   802,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   784,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   990,     0,     0,   991,   992,   993,  1031,
     994,   995,   996,   997,   998,   999,     0,     0,     0,     0,
    2592,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,  1032,   103,   104,   105,  1033,  1034,  1035,  1036,
    1037,  1038,  1039,   106,   107,  1040,   108,   109,   110,   578,
     111,   112,   113,   114,   115,   579,   116,   117,  1041,   118,
     119,   120,   121,   122,  1042,  1043,   123,   124,   125,   126,
     127,  1044,   128,   129,   130,   131,   132,  1045,   580,  1046,
     133,   134,   135,   136,   137,   581,   138,   139,   140,  1047,
     141,   142,   143,   144,   145,   146,  1048,   582,   147,   148,
     149,  1049,  1050,  1051,   583,  1052,  1053,  1054,   150,   151,
     152,   153,   154,   155,   156,   157,   158,  1055,   159,  1056,
     160,   161,   162,   163,   164,   165,  1057,   166,   167,   168,
     169,  1058,  1059,   170,   171,   172,   173,   174,  1060,   175,
     176,   177,  1061,   178,   179,   180,  1062,   181,   182,   183,
     184,   185,   186,   187,   188,   189,  1063,   190,  1064,   191,
     192,   193,   194,  1065,   195,  1066,   196,   584,  1067,   585,
     197,   198,   199,   200,  1068,   201,   202,  1069,   203,   204,
    1070,   205,   206,   207,   208,   209,   586,   210,   211,   212,
     213,  1071,   214,   215,   216,   217,   218,   219,  1072,   220,
     587,   221,   222,   223,   224,   225,   226,   227,  1073,   228,
    1074,   229,   588,   589,   230,   590,   231,   232,   233,   234,
     235,  1075,  1076,   236,   237,   591,   238,   592,  1077,   239,
     240,   241,  1078,  1079,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   593,   259,   260,   261,   262,   263,  1080,   264,   265,
     594,   266,  1081,   267,   268,   269,   270,   271,   272,  1082,
     273,   274,  1083,  1084,   275,   276,   277,  1085,  1086,   278,
     279,   595,   280,   596,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,  1087,   291,   292,   293,   294,   295,
     296,   455,   298,   299,  1088,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,  1089,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,  1090,   326,   327,   597,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,  1091,
     341,   342,   343,   344,   345,  1092,   346,   347,   348,   349,
     350,   598,   351,   352,   353,   354,  1093,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
    1094,   368,   369,  1095,   370,   599,   371,   372,   373,   374,
     375,  1096,   376,   377,  1097,  1098,   378,   379,   380,   381,
     382,  1099,   383,   384,   385,   386,   387,   388,   389,  1100,
    1101,   390,   391,   392,   393,   394,  1102,  1103,   395,   396,
     397,   398,   399,   400,   401,  1104,   402,   601,   403,   404,
     405,   406,  1105,  1106,   407,  1107,  1108,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    93,     0,     0,
       0,     0,     0,     0,     0,     0,  1109,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   103,   104,   105,     0,     0,     0,     0,     0,     0,
       0,   106,   107,     0,   108,   109,   110,     0,   111,   112,
     113,   114,   115,     0,   116,   117,     0,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   133,   134,
     135,   136,   137,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   150,   151,   152,   153,
     154,   155,   156,   157,   158,     0,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,     0,
       0,   170,   171,   172,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,   184,   185,
     186,   187,   188,   189,     0,   190,     0,   191,   192,   193,
     194,     0,   195,     0,   196,     0,     0,     0,   197,   198,
     199,   200,     0,   201,   202,     0,   203,   204,     0,   205,
     206,   207,   208,   209,     0,   210,   211,   212,   213,     0,
     214,   215,   216,   217,   218,   219,     0,   220,     0,   221,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   229,
       0,     0,   230,     0,   231,   232,   233,   234,   235,     0,
       0,   236,   237,     0,   238,     0,     0,   239,   240,   241,
       0,     0,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,     0,
     259,   260,   261,   262,   263,     0,   264,   265,     0,   266,
       0,   267,   268,   269,   270,   271,   272,     0,   273,   274,
       0,     0,   275,   276,   277,     0,     0,   278,   279,     0,
     280,     0,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   291,   292,   293,   294,   295,   296,   455,
     298,   299,     0,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,     0,   370,     0,   371,   372,   373,   374,   375,     0,
     376,   377,     0,     0,   378,   379,   380,   381,   382,     0,
     383,   384,   385,   386,   387,   388,   389,     0,     0,   390,
     391,   392,   393,   394,     0,     0,   395,   396,   397,   398,
     399,   400,   401,     0,   402,     0,   403,   404,   405,   406,
       0,     0,   407,     0,     0,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   577,   850,   467,     0,     0,
       0,   624,     0,     0,  2499,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   103,
     104,   105,     0,     0,     0,     0,     0,     0,     0,   106,
     107,     0,   108,   109,   110,   578,   111,   112,   113,   114,
     115,   579,   116,   117,     0,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,   580,     0,   133,   134,   135,   136,
     137,   581,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   582,   147,   148,   149,     0,     0,     0,
     583,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     156,   157,   158,  1023,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,     0,     0,   170,
     171,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   851,   190,     0,   191,   192,   193,   194,     0,
     195,     0,   196,   584,     0,   585,   197,   198,   199,   200,
       0,   201,   202,     0,   203,   204,     0,   205,   206,   207,
     208,   209,   586,   210,   211,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   220,   587,   221,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   229,   588,   589,
     230,   590,   231,   232,   233,   234,   235,     0,     0,   236,
     237,   591,   238,   592,     0,   239,   240,   241,     0,     0,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   593,   259,   260,
     261,   262,   263,     0,   264,   265,   594,   266,     0,   267,
     268,   269,   270,   271,   272,     0,   273,   274,   852,     0,
     275,   276,   277,     0,     0,   278,   279,   595,   280,   596,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   291,   292,   293,   294,   295,   296,   455,   298,   299,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   597,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,   598,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,     0,
     370,   599,   371,   372,   373,   374,   375,     0,   376,   377,
       0,     0,   378,   379,   380,   381,   382,   853,   383,   384,
     385,   386,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,     0,     0,   395,   396,   397,   398,   399,   400,
     401,     0,   402,   601,   403,   404,   405,   406,     0,     0,
     407,     0,     0,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   577,   850,   467,     0,     0,     0,   624,
     854,   855,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   103,   104,   105,
       0,     0,     0,     0,     0,     0,     0,   106,   107,     0,
     108,   109,   110,   578,   111,   112,   113,   114,   115,   579,
     116,   117,     0,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,   580,     0,   133,   134,   135,   136,   137,   581,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,   582,   147,   148,   149,     0,     0,     0,   583,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,  1025,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,     0,     0,   170,   171,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     851,   190,     0,   191,   192,   193,   194,     0,   195,     0,
     196,   584,     0,   585,   197,   198,   199,   200,     0,   201,
     202,     0,   203,   204,     0,   205,   206,   207,   208,   209,
     586,   210,   211,   212,   213,     0,   214,   215,   216,   217,
     218,   219,     0,   220,   587,   221,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   229,   588,   589,   230,   590,
     231,   232,   233,   234,   235,     0,     0,   236,   237,   591,
     238,   592,     0,   239,   240,   241,     0,     0,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   593,   259,   260,   261,   262,
     263,     0,   264,   265,   594,   266,     0,   267,   268,   269,
     270,   271,   272,     0,   273,   274,   852,     0,   275,   276,
     277,     0,     0,   278,   279,   595,   280,   596,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   291,
     292,   293,   294,   295,   296,   455,   298,   299,     0,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   597,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   598,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,     0,   370,   599,
     371,   372,   373,   374,   375,     0,   376,   377,     0,     0,
     378,   379,   380,   381,   382,   853,   383,   384,   385,   386,
     387,   388,   389,     0,     0,   390,   391,   392,   393,   394,
       0,     0,   395,   396,   397,   398,   399,   400,   401,     0,
     402,   601,   403,   404,   405,   406,     0,     0,   407,     0,
       0,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   577,   850,   467,     0,     0,     0,   624,   854,   855,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   103,   104,   105,     0,     0,
       0,     0,     0,     0,     0,   106,   107,     0,   108,   109,
     110,   578,   111,   112,   113,   114,   115,   579,   116,   117,
       0,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
     580,     0,   133,   134,   135,   136,   137,   581,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,   582,
     147,   148,   149,     0,     0,     0,   583,     0,     0,     0,
     150,   151,   152,   153,   154,   155,   156,   157,   158,     0,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,     0,     0,   170,   171,   172,   173,   174,
       0,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   851,   190,
       0,   191,   192,   193,   194,     0,   195,     0,   196,   584,
       0,   585,   197,   198,   199,   200,     0,   201,   202,     0,
     203,   204,     0,   205,   206,   207,   208,   209,   586,   210,
     211,   212,   213,     0,   214,   215,   216,   217,   218,   219,
       0,   220,   587,   221,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   229,   588,   589,   230,   590,   231,   232,
     233,   234,   235,     0,     0,   236,   237,   591,   238,   592,
       0,   239,   240,   241,     0,     0,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   593,   259,   260,   261,   262,   263,     0,
     264,   265,   594,   266,     0,   267,   268,   269,   270,   271,
     272,     0,   273,   274,   852,     0,   275,   276,   277,     0,
       0,   278,   279,   595,   280,   596,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   291,   292,   293,
     294,   295,   296,   455,   298,   299,     0,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,     0,   326,   327,   597,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,   598,   351,   352,   353,   354,     0,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,     0,   370,   599,   371,   372,
     373,   374,   375,     0,   376,   377,     0,     0,   378,   379,
     380,   381,   382,   853,   383,   384,   385,   386,   387,   388,
     389,     0,     0,   390,   391,   392,   393,   394,     0,     0,
     395,   396,   397,   398,   399,   400,   401,     0,   402,   601,
     403,   404,   405,   406,     0,     0,   407,     0,     0,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
       0,   970,     0,     0,   971,     0,   854,   855,   972,   973,
     974,     0,     0,     0,   970,     0,     0,   971,     0,     0,
       0,   972,   973,   974,     0,   975,     0,     0,     0,  1465,
       0,     0,     0,   977,     0,     0,     0,     0,   975,     0,
     978,     0,     0,     0,     0,     0,   977,     0,     0,     0,
       0,     0,     0,   978,   970,     0,     0,   971,     0,     0,
       0,   972,   973,   974,   979,     0,     0,     0,     0,     0,
       0,     0,     0,   970,     0,     0,   971,   979,   975,     0,
     972,   973,   974,     0,     0,     0,   977,     0,     0,     0,
       0,     0,     0,   978,     0,     0,     0,   975,     0,     0,
    1613,     0,     0,     0,     0,   977,     0,     0,     0,     0,
       0,   970,   978,  1466,   971,     0,     0,   979,   972,   973,
     974,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     970,     0,     0,   971,     0,   975,   979,   972,   973,   974,
       0,     0,     0,   977,     0,     0,     0,     0,     0,     0,
     978,     0,     0,     0,   975,     0,     0,  1664,     0,     0,
       0,     0,   977,  1655,     0,     0,     0,     0,  1656,   978,
       0,     0,     0,   980,   979,     0,     0,     0,   981,     0,
       0,     0,     0,     0,     0,     0,   980,     0,     0,     0,
       0,   981,     0,   979,     0,     0,     0,     0,     0,   982,
     983,     0,  2553,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   982,   983,   984,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   980,   984,     0,     0,
       0,   981,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   985,   980,     0,   986,     0,     0,
     981,     0,   982,   983,     0,     0,     0,   985,     0,     0,
     986,   987,     0,     0,   988,     0,     0,   984,     0,     0,
       0,   982,   983,     0,   987,     0,     0,   988,     0,     0,
       0,     0,     0,   980,     0,     0,   984,     0,   981,     0,
       0,     0,     0,     0,     0,     0,     0,   985,     0,     0,
     986,     0,   980,     0,     0,     0,     0,   981,     0,   982,
     983,     0,     0,     0,   987,     0,   985,   988,     0,   986,
       0,     0,     0,     0,   984,     0,     0,     0,   982,   983,
       0,     0,     0,   987,     0,     0,   988,     0,     0,  2554,
       0,     0,     0,   984,     0,     0,     0,     0,   989,     0,
       0,     0,     0,     0,   985,     0,     0,   986,     0,     0,
       0,   989,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   987,     0,   985,   988,     0,   986,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     987,  1629,     0,   988,     0,     0,     0,     0,     0,     0,
       0,   989,     0,     0,  1467,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     989,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   990,     0,     0,   991,   992,   993,
       0,   994,   995,   996,   997,   998,   999,   990,   989,     0,
     991,   992,   993,     0,   994,   995,   996,   997,   998,   999,
       0,   970,     0,     0,   971,     0,     0,   989,   972,   973,
     974,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   975,     0,   990,     0,     0,
     991,   992,   993,   977,   994,   995,   996,   997,   998,   999,
     978,     0,     0,     0,     0,     0,   990,     0,     0,   991,
     992,   993,     0,   994,   995,   996,   997,   998,   999,     0,
       0,     0,     0,     0,   979,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   990,     0,     0,   991,   992,   993,
       0,   994,   995,   996,   997,   998,   999,     0,     0,     0,
       0,     0,     0,   990,     0,     0,   991,   992,   993,     0,
     994,   995,   996,   997,   998,   999,     0,   970,     0,     0,
     971,     0,     0,     0,   972,   973,   974,     0,     0,     0,
     970,     0,     0,   971,     0,     0,     0,   972,   973,   974,
       0,   975,     0,     0,     0,     0,     0,     0,     0,   977,
       0,     0,     0,     0,   975,  1669,   978,     0,     0,     0,
       0,     0,   977,     0,     0,     0,     0,     0,     0,   978,
       0,     0,     0,   980,     0,     0,     0,     0,   981,     0,
     979,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   979,     0,     0,     0,     0,     0,   982,
     983,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   984,     0,     0,     0,     0,   970,
       0,     0,   971,     0,     0,     0,   972,   973,   974,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   975,   985,     0,     0,   986,     0,     0,
       0,   977,     0,     0,     0,     0,     0,     0,   978,   970,
       0,   987,   971,     0,   988,     0,   972,   973,   974,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   979,     0,     0,     0,     0,     0,     0,   980,
       0,   977,     0,     0,   981,     0,     0,     0,   978,     0,
       0,     0,   980,     0,     0,     0,     0,   981,     0,     0,
       0,     0,     0,     0,     0,   982,   983,     0,     0,     0,
       0,     0,   979,     0,     0,     0,     0,     0,   982,   983,
     984,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   984,     0,     0,     0,     0,   989,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     985,     0,     0,   986,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   985,     0,     0,   986,   987,     0,     0,
     988,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     987,   980,     0,   988,     0,     0,   981,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   982,   983,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   980,   984,     0,     0,     0,   981,     0,     0,     0,
       0,     0,     0,     0,   990,     0,     0,   991,   992,   993,
       0,   994,   995,   996,   997,   998,   999,   982,   983,     0,
       0,     0,   985,     0,   989,   986,     0,     0,     0,     0,
       0,     0,   984,     0,     0,     0,     0,   989,     0,   987,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1870,     0,     0,     0,     0,     0,
       0,     0,   985,     0,     0,   986,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   987,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     990,     0,     0,   991,   992,   993,   989,   994,   995,   996,
     997,   998,   999,   990,     0,     0,   991,   992,   993,     0,
     994,   995,   996,   997,   998,   999,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   989,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   990,     0,     0,   991,   992,   993,     0,   994,
     995,   996,   997,   998,   999,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1031,     0,   990,     0,     0,   991,   992,   993,     0,   994,
     995,   996,   997,   998,   999,    94,    95,    96,    97,    98,
      99,   100,   101,  1032,   103,   104,   105,  1033,  1034,  1035,
    1036,  1037,  1038,  1039,   106,   107,  1040,   108,   109,   110,
     578,   111,   112,   113,   114,   115,   579,   116,   117,  1041,
     118,   119,   120,   121,   122,  1042,  1043,   123,   124,   125,
     126,   127,  1044,   128,   129,   130,   131,   132,  1045,   580,
    1046,   133,   134,   135,   136,   137,   581,   138,   139,   140,
    1047,   141,   142,   143,   144,   145,   146,  1048,   582,   147,
     148,   149,  1049,  1050,  1051,   583,  1052,  1053,  1054,   150,
     151,   152,   153,   154,   155,   156,   157,   158,  1055,   159,
    1056,   160,   161,   162,   163,   164,   165,  1057,   166,   167,
     168,   169,  1058,  1059,   170,   171,   172,   173,   174,  1060,
     175,   176,   177,  1061,   178,   179,   180,  1062,   181,   182,
     183,   184,   185,   186,   187,   188,   189,  1063,   190,  1064,
     191,   192,   193,   194,  1065,   195,  1066,   196,   584,  1067,
     585,   197,   198,   199,   200,  1068,   201,   202,  1069,   203,
     204,  1070,   205,   206,   207,   208,   209,   586,   210,   211,
     212,   213,  1071,   214,   215,   216,   217,   218,   219,  1072,
     220,   587,   221,   222,   223,   224,   225,   226,   227,  1073,
     228,  1074,   229,   588,   589,   230,   590,   231,   232,   233,
     234,   235,  1075,  1076,   236,   237,   591,   238,   592,  1077,
     239,   240,   241,  1078,  1079,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   593,   259,   260,   261,   262,   263,  1080,   264,
     265,   594,   266,  1081,   267,   268,   269,   270,   271,   272,
    1082,   273,   274,  1083,  1084,   275,   276,   277,  1085,  1086,
     278,   279,   595,   280,   596,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,  1087,   291,   292,   293,   294,
     295,   296,   455,   298,   299,  1088,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
    1089,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,  1090,   326,   327,   597,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
    1091,   341,   342,   343,   344,   345,  1092,   346,   347,   348,
     349,   350,   598,   351,   352,   353,   354,  1093,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,  1094,   368,   369,  1095,   370,   599,   371,   372,   373,
     374,   375,  1096,   376,   377,  1097,  1098,   378,   379,   380,
     381,   382,  1099,   383,   384,   385,   386,   387,   388,   389,
    1100,  1101,   390,   391,   392,   393,   394,  1102,  1103,   395,
     396,   397,   398,   399,   400,   401,  1104,   402,   601,   403,
     404,   405,   406,  1105,  1106,   407,  1107,  1108,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,  1031,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,  1514,    99,   100,
     101,  1032,   103,   104,   105,  1033,  1034,  1035,  1036,  1037,
    1038,  1039,   106,   107,  1040,   108,   109,   110,   578,   111,
     112,   113,   114,   115,   579,   116,   117,  1041,   118,   119,
     120,   121,   122,  1042,  1043,   123,   124,   125,   126,   127,
    1044,   128,   129,   130,   131,   132,  1045,   580,  1046,   133,
     134,   135,   136,   137,   581,   138,   139,   140,  1047,   141,
     142,   143,   144,   145,   146,  1048,   582,   147,   148,   149,
    1049,  1050,  1051,   583,  1052,  1053,  1054,   150,   151,   152,
     153,   154,   155,   156,   157,   158,  1055,   159,  1056,   160,
     161,   162,   163,   164,   165,  1057,   166,   167,   168,   169,
    1058,  1059,   170,   171,   172,  1515,   174,  1060,   175,   176,
     177,  1061,   178,   179,   180,  1062,   181,   182,   183,   184,
     185,   186,   187,   188,   189,  1063,   190,  1064,   191,   192,
     193,   194,  1065,   195,  1066,   196,   584,  1067,   585,   197,
     198,   199,   200,  1068,   201,   202,  1069,   203,   204,  1070,
     205,   206,   207,   208,   209,   586,   210,   211,   212,   213,
    1071,   214,   215,   216,   217,   218,   219,  1072,   220,   587,
     221,   222,   223,   224,   225,   226,   227,  1073,   228,  1074,
     229,   588,   589,   230,   590,   231,   232,   233,   234,   235,
    1075,  1076,   236,   237,   591,   238,   592,  1077,   239,   240,
     241,  1078,  1079,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     593,   259,   260,   261,   262,   263,  1080,   264,   265,   594,
     266,  1081,   267,   268,   269,   270,   271,   272,  1082,   273,
     274,  1083,  1084,   275,   276,   277,  1085,  1086,   278,   279,
     595,   280,   596,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,  1087,   291,   292,   293,   294,   295,   296,
     455,   298,   299,  1088,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,  1089,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,  1090,   326,   327,   597,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,  1091,   341,
     342,   343,   344,   345,  1092,  1516,   347,   348,   349,   350,
     598,   351,   352,   353,   354,  1093,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,  1094,
     368,   369,  1095,   370,   599,   371,   372,   373,   374,   375,
    1096,   376,   377,  1097,  1098,   378,   379,   380,   381,   382,
    1099,   383,   384,   385,   386,   387,   388,   389,  1100,  1101,
     390,   391,   392,   393,   394,  1102,  1103,   395,   396,   397,
     398,   399,   400,   401,  1104,   402,   601,   403,   404,   405,
     406,  1105,  1106,   407,  1107,  1108,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   619,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,   578,   111,   112,   113,
     114,   115,   579,   116,   117,     0,   118,   119,   120,   121,
     122,     0,   630,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   633,     0,   634,     0,   133,   134,   135,
     136,   137,   581,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,   582,   147,   148,   149,   635,   636,
     637,   638,   639,   640,   641,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,     0,     0,
     170,   171,   172,   173,   174,     0,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,   184,   185,   186,
     187,   188,   647,     0,   190,     0,   191,   192,   193,   194,
       0,   195,     0,   196,   584,     0,   585,   197,   198,   199,
     200,     0,   201,   650,     0,   203,   204,     0,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,     0,   214,
     215,   216,   217,   218,   219,     0,   220,   587,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,   588,
     589,   230,   590,   231,   232,   233,   234,   235,     0,     0,
     236,   654,   591,   238,   592,     0,   239,   240,   241,   655,
     656,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   593,   259,
     260,   261,   262,   263,     0,   264,   265,   594,   266,     0,
     661,   268,   269,   270,   271,   272,     0,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,   279,   595,   280,
     596,   664,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   291,   292,   665,   294,   295,   296,   455,   298,
     299,     0,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   597,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,   668,   346,   347,   348,   349,   350,   598,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   670,     0,   368,   369,
       0,   370,   599,   371,   372,   373,   374,   375,     0,   376,
     377,     0,     0,   378,   379,   673,   381,   674,     0,   383,
     384,   385,   386,   387,   388,   389,     0,     0,   390,   391,
     392,   393,   394,   676,     0,   395,   396,   397,   398,   399,
     400,   401,     0,   402,   601,   403,   404,   405,   406,     0,
       0,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   577,     0,   467,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,   578,   111,   112,   113,   114,   115,
     579,   116,   117,     0,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,   580,     0,   133,   134,   135,   136,   137,
     581,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,   582,   147,   148,   149,     0,     0,     0,   583,
       0,     0,     0,   150,   151,   152,   153,   154,   155,   156,
     157,   158,     0,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,     0,     0,   170,   171,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   851,   190,     0,   191,   192,   193,   194,     0,   195,
       0,   196,   584,     0,   585,   197,   198,   199,   200,     0,
     201,   202,     0,   203,   204,     0,   205,   206,   207,   208,
     209,   586,   210,   211,   212,   213,     0,   214,   215,   216,
     217,   218,   219,     0,   220,   587,   221,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   229,   588,   589,   230,
     590,   231,   232,   233,   234,   235,     0,     0,   236,   237,
     591,   238,   592,     0,   239,   240,   241,     0,     0,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   593,   259,   260,   261,
     262,   263,     0,   264,   265,   594,   266,     0,   267,   268,
     269,   270,   271,   272,     0,   273,   274,   852,     0,   275,
     276,   277,     0,     0,   278,   279,   595,   280,   596,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,     0,
     291,   292,   293,   294,   295,   296,   455,   298,   299,     0,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,     0,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,     0,   326,   327,
     597,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   598,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,     0,   370,
     599,   371,   372,   373,   374,   375,     0,   376,   377,     0,
       0,   378,   379,   380,   381,   382,   853,   383,   384,   385,
     386,   387,   388,   389,     0,     0,   390,   391,   392,   393,
     394,     0,     0,   395,   396,   397,   398,   399,   400,   401,
       0,   402,   601,   403,   404,   405,   406,     0,     0,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   577,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   103,   104,   105,     3,
       4,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,   578,   111,   112,   113,   114,   115,   579,   116,
     117,     0,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,   580,     0,   133,   134,   135,   136,   137,   581,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
     582,   147,   148,   149,     0,     0,     0,   583,     0,     0,
       0,   150,   151,   152,   153,   154,   155,   156,   157,   158,
       0,   159,     0,   160,   161,   162,   163,   164,   165,     0,
     166,   167,   168,   169,     0,     0,   170,   171,   172,   173,
     174,     0,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,   184,   185,   186,   187,   188,   189,     0,
     190,     0,   191,   192,   193,   194,     0,   195,     0,   196,
     584,     0,   585,   197,   198,   199,   200,     0,   201,   202,
       0,   203,   204,     0,   205,   206,   207,   208,   209,   586,
     210,   211,   212,   213,     0,   214,   215,   216,   217,   218,
     219,     0,   220,   587,   221,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   229,   588,   589,   230,   590,   231,
     232,   233,   234,   235,     0,     0,   236,   237,   591,   238,
     592,     0,   239,   240,   241,     0,     0,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   593,   259,   260,   261,   262,   263,
       0,   264,   265,   594,   266,     0,   267,   268,   269,   270,
     271,   272,     0,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,   279,   595,   280,   596,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,     0,   291,   292,
     293,   294,   295,   296,   455,   298,   299,     0,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,     0,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,     0,   326,   327,   597,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   598,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,     0,   370,   599,   371,
     372,   373,   374,   375,     0,   376,   377,     0,     0,   378,
     379,   380,   381,   382,     0,   383,   384,   385,   386,   387,
     388,   389,     0,     0,   390,   391,   392,   393,   394,     0,
       0,   395,   396,   397,   398,   399,   400,   401,     0,   402,
     601,   403,   404,   405,   406,     0,     0,   407,     0,     0,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     619,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
     578,   111,   112,   113,   114,   115,   579,   116,   117,     0,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,   580,
       0,   133,   134,   135,   136,   137,   581,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,   582,   147,
     148,   149,     0,     0,     0,   583,     0,     0,     0,   150,
     151,   152,   153,   154,   155,   156,   157,   158,     0,   159,
       0,   160,   161,   162,   163,   164,   165,     0,   166,   167,
     168,   169,     0,     0,   170,   171,   172,   173,   174,     0,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,   184,   185,   186,   187,   188,   189,     0,   190,     0,
     191,   192,   193,   194,     0,   195,     0,   196,   584,     0,
     585,   197,   198,   199,   200,     0,   201,   202,     0,   203,
     204,     0,   205,   206,   207,   208,   209,   586,   210,   211,
     212,   213,     0,   214,   215,   216,   217,   218,   219,     0,
     220,   587,   221,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   229,   588,   589,   230,   590,   231,   232,   233,
     234,   235,     0,     0,   236,   237,   591,   238,   592,     0,
     239,   240,   241,     0,     0,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   593,   259,   260,   261,   262,   263,     0,   264,
     265,   594,   266,     0,   267,   268,   269,   270,   271,   272,
       0,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,   279,   595,   280,   596,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,     0,   291,   292,   293,   294,
     295,   296,   455,   298,   299,     0,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
       0,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,     0,   326,   327,   597,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   598,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,     0,   370,   599,   371,   372,   373,
     374,   375,     0,   376,   377,     0,     0,   378,   379,   380,
     381,   382,     0,   383,   384,   385,   386,   387,   388,   389,
       0,     0,   390,   391,   392,   393,   394,     0,     0,   395,
     396,   397,   398,   399,   400,   401,     0,   402,   601,   403,
     404,   405,   406,     0,     0,   407,     0,     0,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    93,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   111,
     112,   113,   114,   115,     0,   116,   117,     0,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
    1169,   128,   129,   130,   131,   132,     0,     0,  1170,   133,
     134,   135,   136,   137,     0,   138,   139,   140,  1171,   141,
     142,   143,   144,   145,   146,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   150,   151,   152,
     153,   154,   155,   156,   157,   158,     0,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   172,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     185,   186,   187,   188,   189,     0,   190,     0,   191,   192,
     193,   194,     0,   195,  1172,   196,     0,     0,     0,   197,
     198,   199,   200,     0,   201,   202,     0,   203,   204,     0,
     205,   206,   207,   208,  1173,     0,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,     0,
     221,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     229,     0,     0,   230,     0,   231,   232,   233,   234,   235,
       0,     0,   236,   237,     0,   238,     0,     0,   239,   240,
     241,     0,     0,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
       0,   259,   260,   261,   262,   263,     0,   264,   265,     0,
     266,     0,   267,   268,   269,   270,   271,   272,     0,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,   279,
       0,   280,     0,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   293,   294,   295,   296,
     455,   298,   299,  1174,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,     0,   370,     0,   371,   372,   373,   374,   375,
       0,   376,   377,     0,     0,   378,   379,   380,   381,   382,
       0,   383,   384,   385,   386,   387,   388,   389,     0,  1175,
     390,   391,   392,   393,   394,     0,     0,   395,   396,   397,
     398,   399,   400,   401,     0,   402,     0,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    93,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   111,   112,   113,
     114,   115,     0,   116,   117,     0,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,  1169,   128,
     129,   130,   131,   132,     0,     0,     0,   133,   134,   135,
     136,   137,     0,   138,   139,   140,  1171,   141,   142,   143,
     144,   145,   146,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,     0,     0,
     170,   171,   172,   173,   174,     0,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,   184,   185,   186,
     187,   188,   189,     0,   190,     0,   191,   192,   193,   194,
       0,   195,  1172,   196,     0,     0,     0,   197,   198,   199,
     200,     0,   201,   202,     0,   203,   204,     0,   205,   206,
     207,   208,   209,     0,   210,   211,   212,   213,     0,   214,
     215,   216,   217,   218,   219,     0,   220,     0,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,     0,
       0,   230,     0,   231,   232,   233,   234,   235,     0,     0,
     236,   237,     0,   238,  1567,     0,   239,   240,   241,     0,
       0,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,     0,   259,
     260,   261,   262,   263,     0,   264,   265,     0,   266,     0,
     267,   268,   269,   270,   271,   272,     0,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,   279,     0,   280,
       0,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   291,   292,   293,   294,   295,   296,   455,   298,
     299,  1174,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
       0,   370,     0,   371,   372,   373,   374,   375,     0,   376,
     377,     0,     0,   378,   379,   380,   381,   382,     0,   383,
     384,   385,   386,   387,   388,   389,     0,  1175,   390,   391,
     392,   393,   394,     0,     0,   395,   396,   397,   398,   399,
     400,   401,     0,   402,     0,   403,   404,   405,   406,     0,
       0,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    93,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   103,   104,
     105,     3,     4,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   111,   112,   113,   114,   115,
       0,   116,   117,     0,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   133,   134,   135,   136,   137,
       0,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   150,   151,   152,   153,   154,   155,   156,
     157,   158,     0,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,     0,     0,   170,   171,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,   184,   185,   186,   187,   188,
     189,     0,   190,     0,   191,   192,   193,   194,     0,   195,
       0,   196,     0,     0,     0,   197,   198,   199,   200,     0,
     201,   202,     0,   203,   204,     0,   205,   206,   207,   208,
     209,     0,   210,   211,   212,   213,     0,   214,   215,   216,
     217,   218,   219,     0,   220,     0,   221,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   229,     0,     0,   230,
       0,   231,   232,   233,   234,   235,     0,     0,   236,   237,
       0,   238,     0,     0,   239,   240,   241,     0,     0,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,   259,   260,   261,
     262,   263,     0,   264,   265,     0,   266,     0,   267,   268,
     269,   270,   271,   272,     0,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,   279,     0,   280,     0,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,     0,
     291,   292,   293,   294,   295,   296,   455,   298,   299,     0,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,     0,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,     0,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,     0,   370,
       0,   371,   372,   373,   374,   375,     0,   376,   377,     0,
       0,   378,   379,   380,   381,   382,     0,   383,   384,   385,
     386,   387,   388,   389,     0,     0,   390,   391,   392,   393,
     394,     0,     0,   395,   396,   397,   398,   399,   400,   401,
       0,   402,     0,   403,   404,   405,   406,     0,     0,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    93,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,     0,   111,   112,   113,   114,   115,     0,   116,
     117,     0,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   133,   134,   135,   136,   137,     0,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   150,   151,   152,   153,   154,   155,   156,   157,   158,
       0,   159,     0,   160,   161,   162,   163,   164,   165,     0,
     166,   167,   168,   169,     0,     0,   170,   171,   172,   173,
     174,     0,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,   184,   185,   186,   187,   188,   189,     0,
     190,     0,   191,   192,   193,   194,     0,   195,     0,   196,
       0,     0,     0,   197,   198,   199,   200,     0,   201,   202,
       0,   203,   204,     0,   205,   206,   207,   208,   209,     0,
     210,   211,   212,   213,     0,   214,   215,   216,   217,   218,
     219,     0,   220,     0,   221,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   229,     0,     0,   230,     0,   231,
     232,   233,   234,   235,     0,     0,   236,   237,     0,   238,
       0,     0,   239,   240,   241,     0,     0,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,     0,   259,   260,   261,   262,   263,
       0,   264,   265,     0,   266,     0,   267,   268,   269,   270,
     271,   272,     0,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,   279,     0,   280,     0,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,     0,   291,   292,
     293,   294,   295,   296,   297,   298,   299,     0,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,     0,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,     0,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,     0,   370,     0,   371,
     372,   373,   374,   375,     0,   376,   377,     0,     0,   378,
     379,   380,   381,   382,     0,   383,   384,   385,   386,   387,
     388,   389,     0,     0,   390,   391,   392,   393,   394,     0,
       0,   395,   396,   397,   398,   399,   400,   401,     0,   402,
       0,   403,   404,   405,   406,     0,     0,   407,     0,     0,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      93,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,   472,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   111,   112,   113,   114,   115,     0,   116,   117,     0,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   133,   134,   135,   136,   137,     0,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   150,
     151,   152,   153,   154,   155,   156,   157,   158,     0,   159,
       0,   160,   161,   162,   163,   164,   165,     0,   166,   167,
     168,   169,     0,     0,   170,   171,   172,   173,   174,     0,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,   184,   185,   186,   187,   188,   189,     0,   190,     0,
     191,   192,   193,   194,     0,   195,     0,   196,     0,     0,
       0,   197,   198,   199,   200,     0,   201,   202,     0,   203,
     204,     0,   205,   206,   207,   208,   209,     0,   210,   211,
     212,   213,     0,   214,   215,   216,   217,   218,   219,     0,
     220,     0,   221,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   229,     0,     0,   230,     0,   231,   232,   233,
     234,   235,     0,     0,   236,   237,     0,   238,     0,     0,
     239,   240,   241,     0,     0,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,     0,   259,   260,   261,   262,   263,     0,   264,
     265,     0,   266,     0,   267,   268,   269,   270,   271,   272,
       0,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,   279,     0,   280,     0,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,     0,   291,   292,   293,   294,
     295,   296,   455,   298,   299,     0,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
       0,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,     0,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,     0,   370,     0,   371,   372,   373,
     374,   375,     0,   473,   377,     0,     0,   474,   379,   380,
     381,   382,     0,   383,   384,   385,   386,   387,   388,   389,
       0,     0,   390,   391,   392,   393,   394,     0,     0,   395,
     396,   397,   398,   399,   400,   401,     0,   402,     0,   403,
     404,   405,   406,     0,     0,   407,     0,     0,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    93,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,   491,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   111,
     112,   113,   114,   115,     0,   116,   117,     0,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   133,
     134,   135,   136,   137,     0,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   150,   151,   152,
     153,   154,   155,   156,   157,   158,     0,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   172,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     185,   186,   187,   188,   189,     0,   190,     0,   191,   192,
     193,   194,     0,   195,     0,   196,     0,     0,     0,   197,
     198,   199,   200,     0,   201,   202,     0,   203,   204,     0,
     205,   206,   207,   208,   209,     0,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,     0,
     221,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     229,     0,     0,   230,     0,   231,   232,   233,   234,   235,
       0,     0,   236,   237,     0,   238,     0,     0,   239,   240,
     241,     0,     0,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
       0,   259,   260,   261,   262,   263,     0,   264,   265,     0,
     266,     0,   267,   268,   269,   270,   271,   272,     0,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,   279,
       0,   280,     0,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   293,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,     0,   370,     0,   371,   372,   373,   374,   375,
       0,   492,   377,     0,     0,   493,   379,   380,   381,   382,
       0,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,     0,     0,   395,   396,   397,
     398,   399,   400,   401,     0,   402,     0,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    93,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   111,   112,   113,
     114,   115,     0,   116,   117,     0,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   133,   134,   135,
     136,   137,     0,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,     0,     0,
     170,   171,   172,   173,   174,     0,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,   184,   185,   186,
     187,   188,   189,     0,   190,     0,   191,   192,   193,   194,
       0,   195,     0,   196,     0,     0,     0,   197,   198,   199,
     200,     0,   201,   202,     0,   203,   204,     0,   205,   206,
     207,   208,   209,     0,   210,   211,   212,   213,     0,   214,
     215,   216,   217,   218,   219,     0,   220,     0,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,     0,
       0,   230,     0,   231,   232,   233,   234,   235,     0,     0,
     236,   237,     0,   238,     0,     0,   239,   240,   241,     0,
       0,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,     0,   259,
     260,   261,   262,   263,     0,   264,   265,     0,   266,     0,
     267,   268,   269,   270,   271,   272,     0,   273,   274,     0,
     496,   275,   276,   277,     0,     0,   278,   279,     0,   280,
       0,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   291,   292,   293,   294,   295,   296,   455,   298,
     299,     0,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
       0,   370,     0,   371,   372,   373,   374,   375,     0,   376,
     377,     0,     0,   378,   379,   380,   381,   382,     0,   383,
     384,   385,   386,   387,   388,   389,     0,     0,   390,   391,
     392,   393,   394,     0,     0,   395,   396,   397,   398,   399,
     400,   401,     0,   402,     0,   403,   404,   405,   406,     0,
       0,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    93,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   111,   112,   113,   114,   115,
       0,   116,   117,     0,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   133,   134,   135,   136,   137,
       0,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   150,   151,   152,   153,   154,   155,   156,
     157,   158,     0,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,     0,     0,   170,   171,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,   184,   185,   186,   187,   188,
     189,     0,   190,     0,   191,   192,   193,   194,     0,   195,
       0,   196,     0,     0,     0,   197,   198,   199,   200,     0,
     201,   202,     0,   203,   204,     0,   205,   206,   207,   208,
     534,     0,   210,   211,   212,   213,     0,   214,   215,   216,
     217,   218,   219,     0,   220,     0,   221,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   229,     0,     0,   230,
       0,   231,   232,   233,   234,   235,     0,     0,   236,   237,
       0,   238,     0,     0,   239,   240,   241,     0,     0,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,   259,   260,   261,
     262,   263,     0,   264,   265,     0,   266,     0,   267,   268,
     269,   270,   271,   272,     0,   273,   274,     0,   496,   275,
     276,   277,     0,     0,   278,   279,     0,   280,     0,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,     0,
     291,   292,   293,   294,   295,   296,   455,   298,   299,     0,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,     0,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,     0,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,     0,   370,
       0,   371,   372,   373,   374,   375,     0,   376,   377,     0,
       0,   378,   379,   380,   381,   382,     0,   383,   384,   385,
     386,   387,   388,   389,     0,     0,   390,   391,   392,   393,
     394,     0,     0,   395,   396,   397,   398,   399,   400,   401,
       0,   402,     0,   403,   404,   405,   406,     0,     0,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    93,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,   556,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,     0,   111,   112,   113,   114,   115,     0,   116,
     117,     0,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   133,   134,   135,   136,   137,     0,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   150,   151,   152,   153,   154,   155,   156,   157,   158,
       0,   159,     0,   160,   161,   162,   163,   164,   165,     0,
     166,   167,   168,   169,     0,     0,   170,   171,   172,   173,
     174,     0,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,   184,   185,   186,   187,   188,   189,     0,
     190,     0,   191,   192,   193,   194,     0,   195,     0,   196,
       0,     0,     0,   197,   198,   199,   200,     0,   201,   202,
       0,   203,   204,     0,   205,   206,   207,   208,   209,     0,
     210,   211,   212,   213,     0,   214,   215,   216,   217,   218,
     219,     0,   220,     0,   221,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   229,     0,     0,   230,     0,   231,
     232,   233,   234,   235,     0,     0,   236,   237,     0,   238,
       0,     0,   239,   240,   241,     0,     0,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,     0,   259,   260,   261,   262,   263,
       0,   264,   265,     0,   266,     0,   267,   268,   269,   270,
     271,   272,     0,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,   279,     0,   280,     0,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,     0,   291,   292,
     293,   294,   295,   296,   455,   298,   299,     0,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,     0,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,     0,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,     0,   370,     0,   371,
     372,   373,   374,   375,     0,   376,   377,     0,     0,   378,
     379,   380,   381,   382,     0,   383,   384,   385,   386,   387,
     388,   389,     0,     0,   390,   391,   392,   393,   394,     0,
       0,   395,   396,   397,   398,   399,   400,   401,     0,   402,
       0,   403,   404,   405,   406,     0,     0,   407,     0,     0,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      93,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   111,   112,   113,   114,   115,     0,   116,   117,     0,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   133,   134,   135,   136,   137,     0,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   150,
     151,   152,   153,   154,   155,   156,   157,   158,     0,   159,
       0,   160,   161,   162,   163,   164,   165,     0,   166,   167,
     168,   169,     0,     0,   170,   171,   172,   173,   174,     0,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,   184,   185,   186,   187,   188,   189,     0,   190,     0,
     191,   192,   193,   194,     0,   195,     0,   196,     0,     0,
       0,   197,   198,   199,  1420,     0,   201,   202,     0,   203,
     204,     0,   205,   206,   207,   208,   209,     0,   210,   211,
     212,   213,     0,   214,   215,   216,   217,   218,   219,     0,
     220,     0,   221,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   229,     0,     0,   230,     0,   231,   232,   233,
     234,   235,     0,     0,   236,   237,     0,   238,     0,     0,
     239,   240,  1421,     0,     0,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,     0,   259,   260,   261,   262,   263,     0,   264,
     265,     0,   266,     0,   267,   268,   269,   270,   271,   272,
       0,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,   279,     0,   280,     0,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,     0,   291,   292,   293,   294,
     295,   296,   455,   298,   299,     0,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
       0,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,     0,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,  1422,   370,     0,   371,  1423,   373,
    1424,   375,     0,   376,   377,     0,     0,   378,   379,   380,
     381,   382,     0,   383,   384,   385,   386,   387,   388,   389,
       0,     0,   390,   391,  1425,   393,   394,     0,     0,   395,
     396,   397,   398,   399,   400,   401,     0,   402,     0,   403,
     404,   405,   406,     0,     0,   407,     0,     0,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    93,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
    1949,     0,   106,   107,     0,   108,   109,   110,     0,   111,
     112,   113,   114,   115,     0,   116,   117,     0,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   133,
     134,   135,   136,   137,     0,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   150,   151,   152,
     153,   154,   155,   156,   157,   158,     0,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   172,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     185,   186,   187,   188,   189,     0,   190,     0,   191,   192,
     193,   194,     0,   195,     0,   196,     0,     0,     0,   197,
     198,   199,   200,     0,   201,   202,     0,   203,   204,     0,
     205,   206,   207,   208,   209,     0,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,     0,
     221,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     229,     0,     0,   230,     0,   231,   232,   233,   234,   235,
       0,     0,   236,   237,     0,   238,     0,     0,   239,   240,
     241,     0,     0,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
       0,   259,   260,   261,   262,   263,     0,   264,   265,     0,
     266,     0,   267,   268,   269,   270,   271,   272,     0,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,   279,
       0,   280,     0,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   293,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,     0,   370,     0,   371,   372,   373,   374,   375,
       0,   376,   377,     0,     0,   378,   379,   380,   381,   382,
       0,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,     0,     0,   395,   396,   397,
     398,   399,   400,   401,     0,   402,     0,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    93,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     103,   104,   105,     0,     0,     0,     0,     0,  1963,     0,
     106,   107,     0,   108,   109,   110,     0,   111,   112,   113,
     114,   115,     0,   116,   117,     0,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   133,   134,   135,
     136,   137,     0,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,     0,     0,
     170,   171,   172,   173,   174,     0,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,   184,   185,   186,
     187,   188,   189,     0,   190,     0,   191,   192,   193,   194,
       0,   195,     0,   196,     0,     0,     0,   197,   198,   199,
     200,     0,   201,   202,     0,   203,   204,     0,   205,   206,
     207,   208,   209,     0,   210,   211,   212,   213,     0,   214,
     215,   216,   217,   218,   219,     0,   220,     0,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,     0,
       0,   230,     0,   231,   232,   233,   234,   235,     0,     0,
     236,   237,     0,   238,     0,     0,   239,   240,   241,     0,
       0,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,     0,   259,
     260,   261,   262,   263,     0,   264,   265,     0,   266,     0,
     267,   268,   269,   270,   271,   272,     0,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,   279,     0,   280,
       0,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   291,   292,   293,   294,   295,   296,   455,   298,
     299,     0,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
       0,   370,     0,   371,   372,   373,   374,   375,     0,   376,
     377,     0,     0,   378,   379,   380,   381,   382,     0,   383,
     384,   385,   386,   387,   388,   389,     0,     0,   390,   391,
     392,   393,   394,     0,     0,   395,   396,   397,   398,   399,
     400,   401,     0,   402,     0,   403,   404,   405,   406,     0,
       0,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    93,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   111,   112,   113,   114,   115,
       0,   116,   117,     0,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   133,   134,   135,   136,   137,
       0,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   150,   151,   152,   153,   154,   155,   156,
     157,   158,     0,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,     0,     0,   170,   171,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,   184,   185,   186,   187,   188,
     189,     0,   190,     0,   191,   192,   193,   194,     0,   195,
       0,   196,     0,     0,     0,   197,   198,   199,   200,     0,
     201,   202,     0,   203,   204,     0,   205,   206,   207,   208,
     209,     0,   210,   211,   212,   213,     0,   214,   215,   216,
     217,   218,   219,     0,   220,     0,   221,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   229,     0,     0,   230,
       0,   231,   232,   233,   234,   235,     0,     0,   236,   237,
       0,   238,     0,     0,   239,   240,   241,     0,     0,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,   259,   260,   261,
     262,   263,     0,   264,   265,     0,   266,     0,   267,   268,
     269,   270,   271,   272,     0,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,   279,     0,   280,     0,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,     0,
     291,   292,   293,   294,   295,   296,   455,   298,   299,     0,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,     0,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,     0,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,     0,   370,
       0,   371,   372,   373,   374,   375,     0,   376,   377,     0,
       0,   378,   379,   380,   381,   382,     0,   383,   384,   385,
     386,   387,   388,   389,     0,     0,   390,   391,   392,   393,
     394,     0,     0,   395,   396,   397,   398,   399,   400,   401,
       0,   402,     0,   403,   404,   405,   406,     0,     0,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    93,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,     0,   111,   112,   113,   114,   115,     0,   116,
     117,     0,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   133,   134,   135,   136,   137,     0,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   150,   151,   152,   153,   154,   155,   156,   157,   158,
       0,   159,     0,   160,   161,   162,   163,   164,   165,     0,
     166,   167,   168,   169,     0,     0,   170,   171,   172,   173,
     174,     0,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,   184,   185,   186,   187,   188,   189,     0,
     190,     0,   191,   192,   193,   194,     0,   195,     0,   196,
       0,     0,     0,   197,   198,   199,   200,     0,   201,   202,
       0,   203,   204,     0,   205,   206,   207,   208,   209,     0,
     210,   211,   212,   213,     0,   214,   215,   216,   217,   218,
     219,     0,   220,     0,   221,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   229,     0,     0,   230,     0,   231,
     232,   233,   234,   235,     0,     0,   236,   237,     0,   238,
       0,     0,   239,   240,   484,     0,     0,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,     0,   259,   260,   261,   262,   263,
       0,   264,   265,     0,   266,     0,   267,   268,   269,   270,
     271,   272,     0,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,   279,     0,   280,     0,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,     0,   291,   292,
     293,   294,   295,   296,   455,   298,   299,     0,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,     0,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,     0,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   485,   336,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   486,     0,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,     0,   370,     0,   371,
     372,   373,   374,   375,     0,   487,   377,     0,     0,   378,
     379,   380,   381,   382,     0,   383,   384,   385,   386,   387,
     388,   389,     0,     0,   390,   391,   392,   393,   394,     0,
       0,   395,   396,   397,   398,   399,   400,   401,     0,   402,
       0,   403,   404,   405,   406,     0,     0,   407,     0,     0,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      93,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   111,   112,   113,   114,   115,     0,   116,   117,     0,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   133,   134,   135,   136,   137,     0,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   150,
     151,   152,   153,   154,   155,   156,   157,   158,     0,   159,
       0,   160,   161,   162,   163,   164,   165,     0,   166,   167,
     168,   169,     0,     0,   170,   171,   172,   173,   174,     0,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,   184,   185,   186,   187,   188,   189,     0,   190,     0,
     191,   192,   193,   194,     0,   195,     0,   196,     0,     0,
       0,   197,   198,   199,   200,     0,   201,   202,     0,   203,
     204,     0,   205,   206,   207,   208,   209,     0,   210,   211,
     212,   213,     0,   214,   215,   216,   217,   218,   219,     0,
     220,     0,   221,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   229,     0,     0,   230,     0,   231,   232,   233,
     234,   235,     0,     0,   236,   237,     0,   238,     0,     0,
     239,   240,   241,     0,     0,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,     0,   259,   260,   261,   262,   263,     0,   264,
     265,     0,   266,     0,   267,   268,   269,   270,   271,   272,
       0,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,   279,     0,   280,     0,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,     0,   291,   292,   293,   294,
     295,   296,   455,   298,   299,     0,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   504,   313,
       0,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,     0,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,     0,   370,     0,   371,   372,   373,
     374,   375,     0,   376,   377,     0,     0,   378,   379,   380,
     381,   382,     0,   383,   384,   385,   386,   387,   388,   389,
       0,     0,   390,   391,   392,   393,   394,     0,     0,   395,
     396,   397,   398,   399,   400,   401,     0,   402,     0,   403,
     404,   405,   406,     0,     0,   407,     0,     0,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    93,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   111,
     112,   113,   114,   115,     0,   116,   117,     0,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   133,
     134,   135,   136,   137,     0,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   150,   151,   152,
     153,   154,   155,   156,   157,   158,     0,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   172,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     185,   186,   187,   188,   189,     0,   190,     0,   191,   192,
     193,   194,     0,   195,     0,   196,     0,     0,     0,   197,
     198,   199,   200,     0,   201,   202,     0,   203,   204,     0,
     205,   206,   207,   208,   529,     0,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,     0,
     221,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     229,     0,     0,   230,     0,   231,   232,   233,   234,   235,
       0,     0,   236,   237,     0,   238,     0,     0,   239,   240,
     241,     0,     0,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
       0,   259,   260,   261,   262,   263,     0,   264,   265,     0,
     266,     0,   267,   268,   269,   270,   271,   272,     0,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,   279,
       0,   280,     0,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   293,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,     0,   370,     0,   371,   372,   373,   374,   375,
       0,   376,   377,     0,     0,   378,   379,   380,   381,   382,
       0,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,     0,     0,   395,   396,   397,
     398,   399,   400,   401,     0,   402,     0,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    93,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   111,   112,   113,
     114,   115,     0,   116,   117,     0,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   133,   134,   135,
     136,   137,     0,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,     0,     0,
     170,   171,   172,   173,   174,     0,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,   184,   185,   186,
     187,   188,   189,     0,   190,     0,   191,   192,   193,   194,
       0,   195,     0,   196,     0,     0,     0,   197,   198,   199,
     200,     0,   201,   202,     0,   203,   204,     0,   205,   206,
     207,   208,   532,     0,   210,   211,   212,   213,     0,   214,
     215,   216,   217,   218,   219,     0,   220,     0,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,     0,
       0,   230,     0,   231,   232,   233,   234,   235,     0,     0,
     236,   237,     0,   238,     0,     0,   239,   240,   241,     0,
       0,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,     0,   259,
     260,   261,   262,   263,     0,   264,   265,     0,   266,     0,
     267,   268,   269,   270,   271,   272,     0,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,   279,     0,   280,
       0,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   291,   292,   293,   294,   295,   296,   455,   298,
     299,     0,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
       0,   370,     0,   371,   372,   373,   374,   375,     0,   376,
     377,     0,     0,   378,   379,   380,   381,   382,     0,   383,
     384,   385,   386,   387,   388,   389,     0,     0,   390,   391,
     392,   393,   394,     0,     0,   395,   396,   397,   398,   399,
     400,   401,     0,   402,     0,   403,   404,   405,   406,     0,
       0,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    93,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   111,   112,   113,   114,   115,
       0,   116,   117,     0,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   133,   134,   135,   136,   137,
       0,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   150,   151,   152,   153,   154,   155,   156,
     157,   158,     0,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,     0,     0,   170,   171,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,   184,   185,   186,   187,   188,
     189,     0,   190,     0,   191,   192,   193,   194,     0,   195,
       0,   196,     0,     0,     0,   197,   198,   199,   200,     0,
     201,   202,     0,   203,   204,     0,   205,   206,   207,   208,
     536,     0,   210,   211,   212,   213,     0,   214,   215,   216,
     217,   218,   219,     0,   220,     0,   221,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   229,     0,     0,   230,
       0,   231,   232,   233,   234,   235,     0,     0,   236,   237,
       0,   238,     0,     0,   239,   240,   241,     0,     0,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,   259,   260,   261,
     262,   263,     0,   264,   265,     0,   266,     0,   267,   268,
     269,   270,   271,   272,     0,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,   279,     0,   280,     0,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,     0,
     291,   292,   293,   294,   295,   296,   455,   298,   299,     0,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,     0,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,     0,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,     0,   370,
       0,   371,   372,   373,   374,   375,     0,   376,   377,     0,
       0,   378,   379,   380,   381,   382,     0,   383,   384,   385,
     386,   387,   388,   389,     0,     0,   390,   391,   392,   393,
     394,     0,     0,   395,   396,   397,   398,   399,   400,   401,
       0,   402,     0,   403,   404,   405,   406,     0,     0,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    93,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,     0,   111,   112,   113,   114,   115,     0,   116,
     117,     0,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   133,   134,   135,   136,   137,     0,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   150,   151,   152,   153,   154,   155,   156,   157,   158,
       0,   159,     0,   160,   161,   162,   163,   164,   165,     0,
     166,   167,   168,   169,     0,     0,   170,   171,   172,   173,
     174,     0,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,   184,   185,   186,   187,   188,   189,     0,
     190,     0,   191,   192,   193,   194,     0,   195,     0,   196,
       0,     0,     0,   197,   198,   199,   200,     0,   201,   202,
       0,   203,   204,     0,   205,   206,   207,   208,   549,     0,
     210,   211,   212,   213,     0,   214,   215,   216,   217,   218,
     219,     0,   220,     0,   221,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   229,     0,     0,   230,     0,   231,
     232,   233,   234,   235,     0,     0,   236,   237,     0,   238,
       0,     0,   239,   240,   241,     0,     0,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,     0,   259,   260,   261,   262,   263,
       0,   264,   265,     0,   266,     0,   267,   268,   269,   270,
     271,   272,     0,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,   279,     0,   280,     0,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,     0,   291,   292,
     293,   294,   295,   296,   455,   298,   299,     0,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,     0,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,     0,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,     0,   370,     0,   371,
     372,   373,   374,   375,     0,   376,   377,     0,     0,   378,
     379,   380,   381,   382,     0,   383,   384,   385,   386,   387,
     388,   389,     0,     0,   390,   391,   392,   393,   394,     0,
       0,   395,   396,   397,   398,   399,   400,   401,     0,   402,
       0,   403,   404,   405,   406,     0,     0,   407,     0,     0,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      93,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   111,   112,   113,   114,   115,     0,   116,   117,     0,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   133,   134,   135,   136,   137,     0,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   150,
     151,   152,   153,   154,   155,   156,   157,   158,     0,   159,
       0,   160,   161,   162,   163,   164,   165,     0,   166,   167,
     168,   169,     0,     0,   170,   171,   172,   173,   174,     0,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,   184,   185,   186,   187,   188,   189,     0,   190,     0,
     191,   192,   193,   194,     0,   195,     0,   196,     0,     0,
       0,   197,   198,   199,   200,     0,   201,   202,     0,   203,
     204,     0,   205,   206,   207,   208,   564,     0,   210,   211,
     212,   213,     0,   214,   215,   216,   217,   218,   219,     0,
     220,     0,   221,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   229,     0,     0,   230,     0,   231,   232,   233,
     234,   235,     0,     0,   236,   237,     0,   238,     0,     0,
     239,   240,   241,     0,     0,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,     0,   259,   260,   261,   262,   263,     0,   264,
     265,     0,   266,     0,   267,   268,   269,   270,   271,   272,
       0,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,   279,     0,   280,     0,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,     0,   291,   292,   293,   294,
     295,   296,   455,   298,   299,     0,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
       0,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,     0,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,     0,   370,     0,   371,   372,   373,
     374,   375,     0,   376,   377,     0,     0,   378,   379,   380,
     381,   382,     0,   383,   384,   385,   386,   387,   388,   389,
       0,     0,   390,   391,   392,   393,   394,     0,     0,   395,
     396,   397,   398,   399,   400,   401,     0,   402,     0,   403,
     404,   405,   406,     0,     0,   407,     0,     0,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    93,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   111,
     112,   113,   114,   115,     0,   116,   117,     0,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   133,
     134,   135,   136,   137,     0,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   150,   151,   152,
     153,   154,   155,   156,   157,   158,     0,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   172,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     185,   186,   187,   188,   189,     0,   190,     0,   191,   192,
     193,   194,     0,   195,     0,   196,     0,     0,     0,   197,
     198,   199,   200,     0,   201,   202,     0,   203,   204,     0,
     205,   206,   207,   208,   568,     0,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,     0,
     221,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     229,     0,     0,   230,     0,   231,   232,   233,   234,   235,
       0,     0,   236,   237,     0,   238,     0,     0,   239,   240,
     241,     0,     0,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
       0,   259,   260,   261,   262,   263,     0,   264,   265,     0,
     266,     0,   267,   268,   269,   270,   271,   272,     0,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,   279,
       0,   280,     0,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   293,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,     0,   370,     0,   371,   372,   373,   374,   375,
       0,   376,   377,     0,     0,   378,   379,   380,   381,   382,
       0,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,     0,     0,   395,   396,   397,
     398,   399,   400,   401,     0,   402,     0,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    93,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   111,   112,   113,
     114,   115,     0,   116,   117,     0,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   133,   134,   135,
     136,   137,     0,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,     0,     0,
     170,   171,   172,   173,   174,     0,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,   184,   185,   186,
     187,   188,   189,     0,   190,     0,   191,   192,   193,   194,
       0,   195,     0,   196,     0,     0,     0,   197,   198,   199,
     200,     0,   201,   202,     0,   203,   204,     0,   205,   206,
     207,   208,   571,     0,   210,   211,   212,   213,     0,   214,
     215,   216,   217,   218,   219,     0,   220,     0,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,     0,
       0,   230,     0,   231,   232,   233,   234,   235,     0,     0,
     236,   237,     0,   238,     0,     0,   239,   240,   241,     0,
       0,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,     0,   259,
     260,   261,   262,   263,     0,   264,   265,     0,   266,     0,
     267,   268,   269,   270,   271,   272,     0,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,   279,     0,   280,
       0,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   291,   292,   293,   294,   295,   296,   455,   298,
     299,     0,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
       0,   370,     0,   371,   372,   373,   374,   375,     0,   376,
     377,     0,     0,   378,   379,   380,   381,   382,     0,   383,
     384,   385,   386,   387,   388,   389,     0,     0,   390,   391,
     392,   393,   394,     0,     0,   395,   396,   397,   398,   399,
     400,   401,     0,   402,     0,   403,   404,   405,   406,     0,
       0,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    93,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   111,   112,   113,   114,   115,
       0,   116,   117,     0,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   133,   134,   135,   136,   137,
       0,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   150,   151,   152,   153,   154,   155,   156,
     157,   158,     0,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,     0,     0,   170,   171,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,   184,   185,   186,   187,   188,
     189,     0,   190,     0,   191,   192,   193,   194,     0,   195,
       0,   196,     0,     0,     0,   197,   198,   199,   200,     0,
     201,   202,     0,   203,   204,     0,   205,   206,   207,   208,
     209,     0,   210,   211,   212,   213,     0,   214,   215,   216,
     217,   218,   219,     0,   220,     0,   221,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   229,     0,     0,   230,
       0,   231,   232,   233,   234,   235,     0,     0,   236,   237,
       0,   238,     0,     0,   239,   240,   241,     0,     0,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,   259,   260,   261,
     262,   263,     0,   264,   265,     0,   266,     0,   267,   268,
     269,   270,   271,   272,     0,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,   279,     0,   280,     0,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,     0,
     291,   292,   293,   294,   295,   296,   455,   298,   299,     0,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,     0,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,     0,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   485,   336,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,     0,   370,
       0,   371,   372,   373,   374,   375,     0,   487,   377,     0,
       0,   378,   379,   380,   381,   382,     0,   383,   384,   385,
     386,   387,   388,   389,     0,     0,   390,   391,   392,   393,
     394,     0,     0,   395,   396,   397,   398,   399,   400,   401,
       0,   402,     0,   403,   404,   405,   406,     0,     0,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    93,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,     0,   111,   112,   113,   114,   115,     0,   116,
     117,     0,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   133,   134,   135,   136,   137,     0,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   150,   151,   152,   153,   154,   155,   156,   157,   158,
       0,   159,     0,   160,   161,   162,   163,   164,   165,     0,
     166,   167,   168,   169,     0,     0,   170,   171,   172,   173,
     174,     0,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,   184,   185,   186,   187,   188,   189,     0,
     190,     0,   191,   192,   193,   194,     0,   195,     0,   196,
       0,     0,     0,   197,   198,   199,   200,     0,   201,   202,
       0,   203,   204,     0,   205,   206,   207,   208,   821,     0,
     210,   211,   212,   213,     0,   214,   215,   216,   217,   218,
     219,     0,   220,     0,   221,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   229,     0,     0,   230,     0,   231,
     232,   233,   234,   235,     0,     0,   236,   237,     0,   238,
       0,     0,   239,   240,   241,     0,     0,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,     0,   259,   260,   261,   262,   263,
       0,   264,   265,     0,   266,     0,   267,   268,   269,   270,
     271,   272,     0,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,   279,     0,   280,     0,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,     0,   291,   292,
     293,   294,   295,   296,   455,   298,   299,     0,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,     0,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,     0,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,     0,   370,     0,   371,
     372,   373,   374,   375,     0,   376,   377,     0,     0,   378,
     379,   380,   381,   382,     0,   383,   384,   385,   386,   387,
     388,   389,     0,     0,   390,   391,   392,   393,   394,     0,
       0,   395,   396,   397,   398,   399,   400,   401,     0,   402,
       0,   403,   404,   405,   406,     0,     0,   407,     0,     0,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      93,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   111,   112,   113,   114,   115,     0,   116,   117,     0,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   133,   134,   135,   136,   137,     0,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   150,
     151,   152,   153,   154,   155,   156,   157,   158,     0,   159,
       0,   160,   161,   162,   163,   164,   165,     0,   166,   167,
     168,   169,     0,     0,   170,   171,   172,   173,   174,     0,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,   184,   185,   186,   187,   188,   189,     0,   190,     0,
     191,   192,   193,   194,     0,   195,     0,   196,     0,     0,
       0,   197,   198,   199,   200,     0,   201,   202,     0,   203,
     204,     0,   205,   206,   207,   208,   823,     0,   210,   211,
     212,   213,     0,   214,   215,   216,   217,   218,   219,     0,
     220,     0,   221,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   229,     0,     0,   230,     0,   231,   232,   233,
     234,   235,     0,     0,   236,   237,     0,   238,     0,     0,
     239,   240,   241,     0,     0,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,     0,   259,   260,   261,   262,   263,     0,   264,
     265,     0,   266,     0,   267,   268,   269,   270,   271,   272,
       0,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,   279,     0,   280,     0,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,     0,   291,   292,   293,   294,
     295,   296,   455,   298,   299,     0,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
       0,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,     0,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,     0,   370,     0,   371,   372,   373,
     374,   375,     0,   376,   377,     0,     0,   378,   379,   380,
     381,   382,     0,   383,   384,   385,   386,   387,   388,   389,
       0,     0,   390,   391,   392,   393,   394,     0,     0,   395,
     396,   397,   398,   399,   400,   401,     0,   402,     0,   403,
     404,   405,   406,     0,     0,   407,     0,     0,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    93,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
    1128,     0,   106,   107,     0,   108,   109,   110,     0,   111,
     112,   113,   114,   115,     0,   116,   117,     0,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   133,
     134,   135,   136,   137,     0,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   150,   151,   152,
     153,   154,   155,   156,   157,   158,     0,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   172,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     185,   186,   187,   188,   189,     0,   190,     0,   191,   192,
     193,   194,     0,   195,     0,   196,     0,     0,     0,   197,
     198,   199,   200,     0,   201,   202,     0,   203,   204,     0,
     205,   206,   207,   208,   209,     0,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,     0,
     221,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     229,     0,     0,   230,     0,   231,   232,   233,   234,   235,
       0,     0,   236,   237,     0,   238,     0,     0,   239,   240,
     241,     0,     0,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
       0,   259,   260,   261,   262,   263,     0,   264,   265,     0,
     266,     0,   267,   268,   269,   270,   271,   272,     0,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,   279,
       0,   280,     0,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   293,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,     0,     0,   347,   348,   349,   350,
       0,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,     0,   370,     0,   371,   372,   373,   374,   375,
       0,   376,   377,     0,     0,   378,   379,   380,   381,   382,
       0,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,     0,     0,   395,   396,   397,
     398,   399,   400,   401,     0,   402,     0,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    93,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   111,   112,   113,
     114,   115,     0,   116,   117,     0,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   133,   134,   135,
     136,   137,     0,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,     0,     0,
     170,   171,   172,   173,   174,     0,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,   184,   185,   186,
     187,   188,   189,     0,   190,     0,   191,   192,   193,   194,
       0,   195,     0,   196,     0,     0,     0,   197,   198,   199,
     200,     0,   201,   202,     0,   203,   204,     0,   205,   206,
     207,   208,  1246,     0,   210,   211,   212,   213,     0,   214,
     215,   216,   217,   218,   219,     0,   220,     0,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,     0,
       0,   230,     0,   231,   232,   233,   234,   235,     0,     0,
     236,   237,     0,   238,     0,     0,   239,   240,   241,     0,
       0,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,     0,   259,
     260,   261,   262,   263,     0,   264,   265,     0,   266,     0,
     267,   268,   269,   270,   271,   272,     0,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,   279,     0,   280,
       0,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   291,   292,   293,   294,   295,   296,   455,   298,
     299,     0,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
       0,   370,     0,   371,   372,   373,   374,   375,     0,   376,
     377,     0,     0,   378,   379,   380,   381,   382,     0,   383,
     384,   385,   386,   387,   388,   389,     0,     0,   390,   391,
     392,   393,   394,     0,     0,   395,   396,   397,   398,   399,
     400,   401,     0,   402,     0,   403,   404,   405,   406,     0,
       0,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    93,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   111,   112,   113,   114,   115,
       0,   116,   117,     0,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   133,   134,   135,   136,   137,
       0,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   150,   151,   152,   153,   154,   155,   156,
     157,   158,     0,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,     0,     0,   170,   171,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,   184,   185,   186,   187,   188,
     189,     0,   190,     0,   191,   192,   193,   194,     0,   195,
       0,   196,     0,     0,     0,   197,   198,   199,   200,     0,
     201,   202,     0,   203,   204,     0,   205,   206,   207,   208,
    1259,     0,   210,   211,   212,   213,     0,   214,   215,   216,
     217,   218,   219,     0,   220,     0,   221,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   229,     0,     0,   230,
       0,   231,   232,   233,   234,   235,     0,     0,   236,   237,
       0,   238,     0,     0,   239,   240,   241,     0,     0,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,   259,   260,   261,
     262,   263,     0,   264,   265,     0,   266,     0,   267,   268,
     269,   270,   271,   272,     0,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,   279,     0,   280,     0,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,     0,
     291,   292,   293,   294,   295,   296,   455,   298,   299,     0,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,     0,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,     0,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,     0,   370,
       0,   371,   372,   373,   374,   375,     0,   376,   377,     0,
       0,   378,   379,   380,   381,   382,     0,   383,   384,   385,
     386,   387,   388,   389,     0,     0,   390,   391,   392,   393,
     394,     0,     0,   395,   396,   397,   398,   399,   400,   401,
       0,   402,     0,   403,   404,   405,   406,     0,     0,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    93,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,     0,   111,   112,   113,   114,   115,     0,   116,
     117,     0,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   133,   134,   135,   136,   137,     0,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   150,   151,   152,   153,   154,   155,   156,   157,   158,
       0,   159,     0,   160,   161,   162,   163,   164,   165,     0,
     166,   167,   168,   169,     0,     0,   170,   171,   172,   173,
     174,     0,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,   184,   185,   186,   187,   188,   189,     0,
     190,     0,   191,   192,   193,   194,     0,   195,     0,   196,
       0,     0,     0,   197,   198,   199,   200,     0,   201,   202,
       0,   203,   204,     0,   205,   206,   207,   208,  1498,     0,
     210,   211,   212,   213,     0,   214,   215,   216,   217,   218,
     219,     0,   220,     0,   221,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   229,     0,     0,   230,     0,   231,
     232,   233,   234,   235,     0,     0,   236,   237,     0,   238,
       0,     0,   239,   240,   241,     0,     0,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,     0,   259,   260,   261,   262,   263,
       0,   264,   265,     0,   266,     0,   267,   268,   269,   270,
     271,   272,     0,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,   279,     0,   280,     0,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,     0,   291,   292,
     293,   294,   295,   296,   455,   298,   299,     0,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,     0,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,     0,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,     0,   370,     0,   371,
     372,   373,   374,   375,     0,   376,   377,     0,     0,   378,
     379,   380,   381,   382,     0,   383,   384,   385,   386,   387,
     388,   389,     0,     0,   390,   391,   392,   393,   394,     0,
       0,   395,   396,   397,   398,   399,   400,   401,     0,   402,
       0,   403,   404,   405,   406,     0,     0,   407,     0,     0,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      93,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   103,   104,   105,     0,     0,     0,
       0,     0,     0,     0,   106,   107,     0,   108,   109,   110,
       0,   111,   112,   113,   114,   115,     0,   116,   117,     0,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   133,   134,   135,   136,   137,     0,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   150,
     151,   152,   153,   154,   155,   156,   157,   158,     0,   159,
       0,   160,   161,   162,   163,   164,   165,     0,   166,   167,
     168,   169,     0,     0,   170,   171,   172,   173,   174,     0,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,   184,   185,   186,   187,   188,   189,     0,   190,     0,
     191,   192,   193,   194,     0,   195,     0,   196,     0,     0,
       0,   197,   198,   199,   200,     0,   201,   202,     0,   203,
     204,     0,   205,   206,   207,   208,  1510,     0,   210,   211,
     212,   213,     0,   214,   215,   216,   217,   218,   219,     0,
     220,     0,   221,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   229,     0,     0,   230,     0,   231,   232,   233,
     234,   235,     0,     0,   236,   237,     0,   238,     0,     0,
     239,   240,   241,     0,     0,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,     0,   259,   260,   261,   262,   263,     0,   264,
     265,     0,   266,     0,   267,   268,   269,   270,   271,   272,
       0,   273,   274,     0,     0,   275,   276,   277,     0,     0,
     278,   279,     0,   280,     0,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,     0,   291,   292,   293,   294,
     295,   296,   455,   298,   299,     0,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
       0,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,     0,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,     0,   370,     0,   371,   372,   373,
     374,   375,     0,   376,   377,     0,     0,   378,   379,   380,
     381,   382,     0,   383,   384,   385,   386,   387,   388,   389,
       0,     0,   390,   391,   392,   393,   394,     0,     0,   395,
     396,   397,   398,   399,   400,   401,     0,   402,     0,   403,
     404,   405,   406,     0,     0,   407,     0,     0,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    93,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   103,   104,   105,     0,     0,     0,     0,     0,
       0,     0,   106,   107,     0,   108,   109,   110,     0,   111,
     112,   113,   114,   115,     0,   116,   117,     0,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   133,
     134,   135,   136,   137,     0,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   150,   151,   152,
     153,   154,   155,   156,   157,   158,     0,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
       0,     0,   170,   171,   172,   173,   174,     0,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,   184,
     185,   186,   187,   188,   189,     0,   190,     0,   191,   192,
     193,   194,     0,   195,     0,   196,     0,     0,     0,   197,
     198,   199,   200,     0,   201,   202,     0,   203,   204,     0,
     205,   206,   207,   208,  1512,     0,   210,   211,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   220,     0,
     221,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     229,     0,     0,   230,     0,   231,   232,   233,   234,   235,
       0,     0,   236,   237,     0,   238,     0,     0,   239,   240,
     241,     0,     0,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
       0,   259,   260,   261,   262,   263,     0,   264,   265,     0,
     266,     0,   267,   268,   269,   270,   271,   272,     0,   273,
     274,     0,     0,   275,   276,   277,     0,     0,   278,   279,
       0,   280,     0,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   291,   292,   293,   294,   295,   296,
     455,   298,   299,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,     0,   370,     0,   371,   372,   373,   374,   375,
       0,   376,   377,     0,     0,   378,   379,   380,   381,   382,
       0,   383,   384,   385,   386,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,     0,     0,   395,   396,   397,
     398,   399,   400,   401,     0,   402,     0,   403,   404,   405,
     406,     0,     0,   407,     0,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    93,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,     0,   111,   112,   113,
     114,   115,     0,   116,   117,     0,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   133,   134,   135,
     136,   137,     0,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,     0,     0,
     170,   171,   172,   173,   174,     0,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,   184,   185,   186,
     187,   188,   189,     0,   190,     0,   191,   192,   193,   194,
       0,   195,     0,   196,     0,     0,     0,   197,   198,   199,
     200,     0,   201,   202,     0,   203,   204,     0,   205,   206,
     207,   208,  2068,     0,   210,   211,   212,   213,     0,   214,
     215,   216,   217,   218,   219,     0,   220,     0,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,     0,
       0,   230,     0,   231,   232,   233,   234,   235,     0,     0,
     236,   237,     0,   238,     0,     0,   239,   240,   241,     0,
       0,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,     0,   259,
     260,   261,   262,   263,     0,   264,   265,     0,   266,     0,
     267,   268,   269,   270,   271,   272,     0,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,   279,     0,   280,
       0,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   291,   292,   293,   294,   295,   296,   455,   298,
     299,     0,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
       0,   370,     0,   371,   372,   373,   374,   375,     0,   376,
     377,     0,     0,   378,   379,   380,   381,   382,     0,   383,
     384,   385,   386,   387,   388,   389,     0,     0,   390,   391,
     392,   393,   394,     0,     0,   395,   396,   397,   398,   399,
     400,   401,     0,   402,     0,   403,   404,   405,   406,     0,
       0,   407,     0,     0,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    93,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   103,   104,
     105,     0,     0,     0,     0,     0,     0,     0,   106,   107,
       0,   108,   109,   110,     0,   111,   112,   113,   114,   115,
       0,   116,   117,     0,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   133,   134,   135,   136,   137,
       0,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   150,   151,   152,   153,   154,   155,   156,
     157,   158,     0,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,     0,     0,   170,   171,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,   184,   185,   186,   187,   188,
     189,     0,   190,     0,   191,   192,   193,   194,     0,   195,
       0,   196,     0,     0,     0,   197,   198,   199,   200,     0,
     201,   202,     0,   203,   204,     0,   205,   206,   207,   208,
     209,     0,   210,   211,   212,   213,     0,   214,   215,   216,
     217,   218,   219,     0,   220,     0,   221,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   229,     0,     0,   230,
       0,   231,   232,   233,   234,   235,     0,     0,   236,   237,
       0,   238,     0,     0,   239,   240,   241,     0,     0,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,   259,   260,   261,
     262,   263,     0,   264,   265,     0,   266,     0,   267,   268,
     269,   270,   271,   272,     0,   273,   274,     0,     0,   275,
     276,   277,     0,     0,   278,   279,     0,   280,     0,   281,
     282,   283,   284,   285,   286,   287,     0,   289,   290,     0,
     291,   292,   293,   294,   295,   296,   455,   298,   299,     0,
     300,   301,   302,   303,   304,   305,   306,     0,   308,   309,
     310,   311,   312,   313,     0,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,     0,   326,   327,
       0,   328,   329,   330,   331,     0,   333,   334,   335,   336,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,     0,   370,
       0,   371,   372,   373,   374,   375,     0,   376,   377,     0,
       0,   378,   379,   380,   381,   382,     0,   383,   384,   385,
     386,   387,   388,   389,     0,     0,   390,   391,   392,   393,
     394,     0,     0,   395,   396,   397,   398,   399,   400,   401,
       0,   402,     0,   403,   404,   405,   406,     0,     0,   407,
       0,     0,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   874,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   103,   104,   105,     0,
       0,     0,     0,     0,     0,     0,   106,   107,     0,   108,
     109,   110,   578,   111,   112,   113,     0,   875,   579,   876,
     877,     0,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   878,   879,   127,     0,   128,   129,   130,   131,     0,
       0,   580,     0,   133,   134,   135,   136,   137,   581,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
     582,   147,   148,   149,     0,     0,     0,   583,     0,     0,
       0,   150,   151,   152,   153,   154,   155,   880,   881,   158,
       0,   159,     0,   160,   161,   162,   163,   164,   165,     0,
     166,   167,   168,   169,     0,     0,   170,   171,   645,   173,
     174,     0,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,   184,     0,   186,   187,   188,     0,     0,
     190,     0,   191,   192,   882,   194,     0,   195,     0,   196,
     584,     0,   585,   197,   198,   199,   200,     0,   201,     0,
       0,     0,   204,     0,   205,   206,   207,   208,   209,   586,
     210,   211,   212,   213,     0,   214,   215,   216,   217,   218,
     219,     0,   220,   587,     0,   222,   223,   224,   225,   883,
     884,     0,   885,     0,   229,   588,   589,   230,   590,   231,
     232,   233,   234,   235,     0,     0,   236,     0,   591,   238,
     592,     0,   239,   240,   241,     0,     0,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   886,   593,   887,   260,   261,   262,     0,
       0,   264,   265,   594,   266,     0,     0,   268,   888,   270,
     271,   272,     0,   273,   274,     0,     0,   275,   276,   277,
       0,     0,   278,     0,   595,   280,   596,     0,   282,   283,
     284,   285,   286,   287,   288,   289,   290,     0,   291,   292,
       0,   294,   295,     0,   455,   298,   299,     0,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   889,   310,   311,
     312,   313,     0,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,     0,   326,   327,   597,   328,
     329,   330,     0,   332,   333,   334,   335,   336,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,     0,   346,
     890,   348,   349,   350,   598,   351,   352,   891,   354,     0,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,     0,     0,   368,   369,     0,   370,   599,   371,
     372,   373,   374,   375,     0,   892,   893,     0,     0,   378,
     379,     0,   381,     0,     0,   383,   384,   385,   386,   387,
     388,   389,     0,     0,   390,   391,   392,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   894,     0,   402,
     601,   403,   404,   405,   406,     0,     0,   407,     0,     0,
     408,   409,   410,   411,   412,   413,   874,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   425,   426,   427,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     103,   104,   105,     0,     0,     0,     0,     0,     0,     0,
     106,   107,     0,   108,   109,   110,   578,   111,   112,   113,
       0,   875,   579,   876,   877,     0,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   878,   879,   127,     0,   128,
     129,   130,   131,     0,     0,   580,     0,   133,   134,   135,
     136,   137,   581,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,   582,   147,   148,   149,     0,     0,
       0,   583,     0,     0,     0,   150,   151,   152,   153,   154,
     155,   880,   881,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,     0,     0,
     170,   171,   645,   173,   174,     0,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,   184,     0,   186,
     187,   188,     0,     0,   190,     0,   191,   192,   882,   194,
       0,   195,     0,   196,   584,     0,   585,   197,   198,   199,
     200,     0,   201,     0,     0,     0,   204,     0,   205,   206,
     207,   208,   209,   586,   210,   211,   212,   213,     0,   214,
     215,   216,   217,   218,   219,     0,   220,   587,     0,   222,
     223,   224,   225,   883,   884,     0,   885,     0,   229,   588,
     589,   230,   590,   231,   232,   233,   234,   235,     0,     0,
     236,     0,   591,   238,   592,     0,   239,   240,   241,     0,
       0,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   886,   593,   887,
     260,   261,   262,     0,     0,   264,   265,   594,   266,     0,
       0,   268,   888,   270,   271,   272,     0,   273,   274,     0,
       0,   275,   276,   277,     0,     0,   278,     0,   595,   280,
     596,     0,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   291,   292,     0,   294,   295,     0,   455,   298,
     299,     0,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   889,   310,   311,   312,   313,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   597,   328,   329,   330,     0,   332,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,     0,   346,     0,   348,   349,   350,   598,   351,
     352,   891,   354,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,     0,     0,   368,   369,
       0,   370,   599,   371,   372,   373,   374,   375,     0,   892,
     893,     0,     0,   378,   379,     0,   381,     0,     0,   383,
     384,   385,   386,   387,   388,   389,     0,     0,   390,   391,
     392,   393,   394,     0,     0,   395,   396,   397,   398,   399,
       0,   894,     0,   402,   601,   403,   404,   405,   406,     0,
       0,   407,     0,     0,   408,   409,   410,   411,   412,   413,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   425,   426,   427
};

static const yytype_int16 yycheck[] =
{
      15,   533,    29,    50,   804,   499,   451,   606,   606,   483,
       0,    10,   730,   944,    13,   503,   543,    16,    17,    18,
     802,   452,    21,    22,   971,    24,   642,   643,    27,    28,
       0,   777,     0,     0,   524,   569,   908,   790,   819,  1437,
     968,   672,   683,     0,  1011,   847,   662,    14,    24,  1270,
      14,   819,   779,   732,   819,   819,  1765,  1514,   457,  1516,
     782,  1508,   775,   910,  1392,  1688,  1813,     9,    52,  1459,
    1847,  1832,     0,    28,    73,    74,    75,    76,    77,     5,
     807,  1840,   459,    82,  1505,   573,    11,    86,  1715,    52,
       5,    81,  1014,   458,     0,    11,  2072,     5,    13,    14,
      76,    10,    49,    56,    13,    13,    14,    56,    17,     9,
    1721,    81,  1149,    81,    81,    40,   459,    22,    27,    28,
    2078,   839,   720,    28,    81,     5,     5,  2075,   839,  1151,
       5,     5,     5,    13,    14,   459,     5,   890,     5,   162,
     118,     5,    56,  1564,     5,     5,    71,     5,    80,   548,
     132,   464,    73,    39,   104,   204,  2142,     5,     4,   163,
       0,    39,    83,     9,  1754,    74,     9,   162,   113,   144,
    2213,   231,    56,  2027,     0,   264,   764,   162,  2345,   533,
     116,   535,    65,   537,    90,    73,   521,    11,    14,  2294,
     122,  1720,     3,   791,   682,    83,   794,   795,   163,    26,
      47,  1657,   272,    29,   111,   613,    33,    11,   188,     3,
       4,     5,  1433,   613,  2243,     9,    40,   711,   266,    30,
      31,   177,     4,   116,    26,   130,    52,     9,   521,   606,
     272,    33,  1179,   156,   611,   914,    40,   333,   104,   252,
     116,   113,   311,  2124,    11,   610,    71,    71,   152,    57,
      90,    11,  1784,  2403,   130,    81,    26,    65,   976,    73,
      36,    75,   893,    77,   880,   881,  2512,    71,    82,  1338,
    1339,  2229,   888,   154,  1343,   114,   159,   337,  2445,   142,
    2161,   237,   606,    26,   963,   964,   774,   611,  2274,   432,
      33,   376,   411,   152,   125,    26,  1919,   427,   297,   826,
    1628,   306,   114,    29,   467,   198,   469,  1376,  1377,  2070,
     453,   456,   720,   390,   324,   746,     5,   111,   222,   284,
    1852,   154,   467,   186,   411,   410,  1953,    53,  2574,   334,
    1957,  2185,  1943,   180,  1013,   249,  1783,     0,   185,  1286,
     350,   471,   181,   467,   120,   722,   723,   407,   467,   256,
     161,   283,   163,   730,   423,   125,   433,   337,   946,  1780,
     266,  1782,  2243,   222,   344,   270,  2471,   248,   343,   181,
     293,   467,   325,   613,   221,  2525,   325,   470,   467,  2546,
     467,   214,   790,   249,   256,   341,   421,  2170,   297,   834,
     790,   356,   837,   388,   125,  1429,   409,   377,   722,   723,
     845,   471,   377,   388,   263,  1995,   730,   467,  2191,   203,
     841,   325,   471,  1942,   319,   298,  1450,   225,   323,   467,
     326,   297,   471,  1879,  1170,   913,   266,   377,   741,   471,
     261,   225,   459,   411,   922,  1472,   350,   772,   926,  2482,
    1240,   325,   417,   423,   426,   350,   934,   935,   471,     8,
     382,  1473,   451,   452,   453,   430,    15,    16,    17,   947,
     948,  1392,   839,   467,  1431,  1432,  2213,   388,   413,  1187,
     485,   456,   849,   409,  2460,  2098,   465,   524,   453,   772,
     469,  2510,   890,   848,   469,   484,   326,   486,   374,  2447,
     890,   458,   467,  2374,   420,   459,   374,   496,  2446,   140,
     388,   321,  2129,   367,   368,   504,   849,  2134,   355,   414,
    2137,  1439,  1733,   456,  2125,   839,   409,   516,   471,  2400,
     467,   404,   471,   513,   430,   849,   469,   511,  2504,   528,
     472,  2314,   188,   360,   979,  1253,  1467,   501,   463,  1461,
     516,   467,  1253,   513,   453,   513,   513,   463,   511,   504,
     790,  1139,   467,   552,   553,   554,   513,  2004,   360,   467,
    2017,   202,   468,   971,   470,   432,   466,  1636,  1637,  1638,
    1639,   971,  2349,  1642,  1643,  1644,  1645,  1646,  1647,  1648,
    1649,  1650,  1651,  2344,   432,   513,   453,   467,   467,  2348,
     430,   606,   467,   467,   467,   504,   611,    90,   467,   976,
     467,  1199,  1449,  1993,   465,   453,   467,   467,   469,   467,
     421,  1209,   458,   459,  1212,   458,   459,   360,   617,   467,
     237,  1630,   125,  1692,  1693,  2248,   231,  1574,   468,  2510,
     470,   272,   458,   459,   458,   459,   460,   461,   462,   463,
     465,  2268,   255,   610,   469,  2066,   111,   113,   430,  1658,
     890,   111,   976,    62,    63,   682,   460,   461,   462,   463,
     236,   103,    22,  1195,   458,   459,  1613,   430,    73,  1997,
     685,   453,  1288,   163,    11,   144,   458,   459,    83,  1713,
     695,  1715,   496,   468,     4,   511,   471,   513,  1635,     9,
     453,  2452,   707,   460,   461,   462,   463,  1628,   458,   459,
     460,   461,   462,   463,   194,   720,   210,   722,   723,   268,
       4,   393,    11,   178,   528,     9,  1250,  1664,    18,   209,
    1254,  1362,    22,  1257,   341,  2172,   192,   726,   210,   219,
    1443,   971,  1532,   167,    71,  2482,   423,     4,   552,   553,
     554,    40,     9,    22,   357,   249,   745,   746,   251,    28,
    1338,  1339,   751,   752,   753,  1343,  1977,   125,   261,    73,
    1205,    91,   403,   467,  1566,  1210,   343,   249,   311,    83,
     130,  1179,    71,   757,   758,   751,   760,   776,   777,  1179,
      13,    14,   150,   249,   610,   251,   251,   340,  1376,  1377,
     789,   225,   231,   235,   757,   758,   238,   760,    13,    14,
     377,   344,   407,   307,  1292,   450,   468,   806,  1185,   471,
    1187,   810,  2573,  1540,  1168,   467,   815,  2526,  2527,   279,
     646,   820,  1463,  1429,  1355,   468,  1357,  1358,   471,   828,
     806,   208,  1231,   163,   377,   834,   745,   469,   837,   329,
     417,  1195,   841,   842,  1450,   844,   845,  2304,   847,   353,
     343,   130,  2299,  1575,   106,   465,   682,   467,  1580,   469,
    1214,  1185,   467,  1187,   194,  1219,  1813,  2576,  1356,   333,
     334,   353,   251,  2475,   343,  2477,  1253,   256,  1286,   209,
     423,   848,  1813,   343,   377,   849,  1286,   106,   256,   219,
     467,  1268,  1380,   261,   266,   454,   455,   456,   337,   458,
     459,   460,   461,   462,   463,   409,   152,     3,   377,     5,
     270,   157,   726,   333,   334,   245,   931,   377,   468,  1953,
     910,   471,    22,  1957,   417,   177,   305,   409,    28,  1253,
    1418,   757,   758,   842,   760,   844,   450,   430,   752,  1179,
     910,   231,   910,   910,  1268,   944,  1436,   381,   417,   383,
    1599,  1600,  1601,   910,    30,    31,  2558,   417,   177,   450,
     453,   430,   776,   323,   324,   432,   468,   231,   407,   471,
     430,   208,   231,   407,   467,   789,   222,  1511,   161,  1513,
     979,   381,  1910,   383,   453,   237,   453,   460,   240,    22,
     350,   270,  1671,   453,  1794,    28,   810,   471,   467,   329,
     467,  2399,  1969,   381,  1019,   383,   820,   467,   432,  1008,
     106,  1793,  1424,  1425,    90,  2436,  2437,   263,   237,  2334,
     467,   240,   848,  2338,   140,  2340,  2095,   395,   467,   453,
     130,  1662,  1663,   847,  1561,  1781,   152,   405,   468,   468,
     319,   157,   471,   467,   323,  1827,  1286,   337,  1636,  1637,
    1638,  1639,  1833,  1855,  1642,  1643,  1644,  1645,  1646,  1647,
    1648,  1649,  1650,  1651,   468,  1833,  1997,   471,  1833,  1833,
    1792,   350,  1794,   337,   468,   468,  2497,   471,   337,   162,
     468,   177,  1761,   471,   910,   204,   202,   152,  2035,   341,
    2124,   430,   157,   432,  1812,  2129,  1814,   130,   468,   468,
    2134,   471,   471,  2137,  1692,  1693,   222,  1713,   231,  1715,
     467,  1752,   469,  2511,  2183,  2562,   462,   407,  1117,   462,
    1119,   467,   341,   469,   467,    53,   469,  2161,    22,  1128,
    2528,  1130,   631,   632,    28,   414,  1126,  1514,  1515,  1516,
     467,   237,  1587,   407,   240,   145,   468,   263,   407,   471,
     468,   319,    22,   471,  1118,   981,   272,   222,    28,   658,
     333,   334,     5,  1162,     7,   468,  1574,   145,   471,    12,
     270,  1170,  1171,   381,  1574,   383,    19,   467,  2247,  2051,
      23,  1669,  1181,  1182,  1183,  1184,  2584,  1186,   333,   334,
    1514,  1515,  1516,  1192,  1008,  1194,   448,   468,   263,   468,
     471,   145,   471,   467,   145,  1613,  1205,  1206,   467,  2243,
     468,  1210,  1211,  1613,   337,  1813,  1215,  1216,  1217,  1218,
      22,  1220,  1221,   323,   125,   468,    28,  1635,   471,   448,
    1229,  1230,  1726,  2033,  2268,  1635,   130,   270,   467,  1729,
    1730,  1731,   251,  1242,   468,   341,   423,   471,   467,   150,
     350,    79,   468,  1268,  1244,   471,  1664,   145,   279,  2005,
     130,   381,  1171,   383,  1664,   468,  2213,   343,   471,   434,
     468,   311,  1181,   471,  1183,   468,   468,  1186,   471,   471,
    1688,   469,  2213,  1192,   407,  1194,   319,   403,  1688,  2042,
     323,  1970,  1704,  1705,  1706,  1707,   468,  1206,   145,   471,
    1126,   377,  1211,  1117,   344,  1119,  1215,  1216,  1217,  1218,
    1989,  1220,  1221,  1340,   414,   468,   468,   350,   471,   471,
    1854,   468,   343,   518,   471,   520,  2273,   468,   130,  2276,
     471,  1958,   145,  1960,  1574,   612,   613,   377,   377,  2211,
    2374,   417,   266,   167,   467,   421,    35,  1953,  1162,    35,
     251,  1957,   448,  1380,   430,   256,   377,   220,   468,   468,
     261,   471,   471,   484,   188,   486,  2400,   468,    54,   468,
     471,   468,   471,  1613,   471,    35,   270,   453,   467,   878,
     879,   414,   468,   423,    26,   471,   468,   468,   887,   471,
     471,   467,     5,  1392,    54,  1635,   417,   722,   723,   468,
     270,   225,   471,     5,   468,  1813,    91,   471,   468,   430,
     467,   471,   467,  1813,   157,  1229,   468,   103,  1244,   471,
     467,   467,   613,  1422,  1664,   319,  2024,  1454,   294,   323,
    1429,  1808,   453,   468,    76,  1812,   471,  1814,  2220,   938,
     939,   467,    84,   103,  2123,   467,   467,   271,  1688,   319,
    1944,  1450,   343,   323,   468,  1454,   350,   471,  1457,  1449,
    1459,   468,   468,   468,   471,   471,   471,     5,   270,   468,
     112,   467,   471,     5,   467,   467,  2510,   467,   163,  1449,
     350,  1449,  1449,   467,  1808,   467,   377,   467,  1812,     5,
    1814,   467,  1449,   467,   395,     5,   467,   467,  2216,   467,
     467,   187,  2036,  2037,   405,  1520,  1505,  2095,   431,   194,
    1984,  1919,   277,   790,  1340,   471,   204,   319,  2124,  1919,
     414,   323,    94,  2129,   209,   220,   417,   187,  2134,    35,
     350,  2137,  2138,   157,   219,  2482,   178,   263,  1553,   430,
     157,   261,   467,   388,   414,   467,    83,   189,   350,   235,
     471,  2482,   238,   388,  1380,  2161,  1555,   381,    53,   383,
     245,  1560,   453,   249,    53,  1564,  1565,  1566,  1567,   388,
     242,  1397,   388,  1813,   388,   235,   467,   430,   238,  1578,
     404,   266,  2300,   407,  1583,   145,    90,  1413,  1587,   249,
     251,   467,   251,    35,   280,  2183,  2212,   469,   471,   790,
    1590,    65,   420,  1429,    34,   467,   467,    71,  1422,   467,
     467,   426,   414,   890,     9,  2213,   386,   386,    11,    83,
     280,   471,   386,  1449,  1450,   467,   256,  2035,  1454,  1628,
     467,   388,   171,   153,  2042,  2035,   162,  2243,   324,   468,
    2017,   473,  2042,   411,   329,   467,    35,   111,   202,   113,
     471,   353,   210,  1700,  2144,   267,   467,   210,   344,  2247,
    1675,  2151,  2268,   471,   324,     8,   251,   210,    11,  1578,
     303,  1698,    15,    16,    17,   264,   423,   467,   364,  1919,
     145,   430,   145,    65,   344,   251,   266,   266,  1715,    32,
    2098,    35,   251,  2017,   971,    34,   388,   388,  2098,   890,
     467,   388,   166,  1702,   364,   465,  2322,  2425,   388,   465,
     468,  1710,  1711,  1712,  1713,   468,  1715,  1716,   468,   162,
     468,  1720,  1721,   468,   366,   469,   411,   369,   192,   111,
    2329,  2329,   468,   468,  1011,   468,  2181,   468,   468,   471,
     450,   450,  2542,   468,   468,   468,  1560,   468,   162,   468,
     468,  1565,  1566,  1567,   450,   467,   388,   276,   427,  1758,
     467,   467,   467,  2481,  1590,   468,  2256,   417,  2374,  1583,
     427,   452,   266,   456,   267,  1774,   267,  1776,   409,   267,
     971,  1780,  1781,  1782,   166,  1784,   230,   251,  2315,   471,
    2278,   388,   256,   251,  2400,  2035,   467,   145,  1813,   270,
    2294,  1800,  2042,  1802,   188,  2213,   388,   145,   468,   145,
     388,   388,   388,  2213,   468,  1830,  1815,  1816,  1817,  1818,
    1819,  1820,  1821,  1822,  1823,  1824,   471,   264,  2427,   430,
    2261,   266,    35,   145,   298,  1834,   145,   465,   341,  2216,
    2248,   240,  1841,  2274,   136,   468,   162,    11,  2248,   313,
     157,   472,   468,  1852,   468,   272,  1855,   468,  2098,   162,
     467,  1851,   468,   206,   427,  2273,   377,  1776,  2276,   251,
     453,   162,  1698,  2273,   256,  2320,  2276,   471,   171,  2406,
     467,   326,   468,  2371,  2482,   466,   416,  1713,    81,  1715,
     267,  1800,  2216,   468,   468,  2383,  1710,  1711,  1712,   467,
     613,   145,  1179,   467,  2510,   166,  1815,  1816,  1817,  1818,
    1819,  1820,  1821,  1822,  1823,  1824,   298,   398,   467,   467,
      35,    77,   466,  2300,   411,   268,   466,  2304,   162,   209,
     275,   313,   468,  1932,    35,   468,  1935,  1936,  1937,  1938,
     404,   468,   467,  1942,  1943,  2544,   468,  1946,   379,  2380,
    1949,   468,  2329,    54,  1953,  2487,  2401,   209,  1957,   467,
    1774,    53,   467,  1978,  1963,  1980,   467,   140,   273,   174,
     468,   468,   468,  2213,   456,   430,  2300,   190,   179,   152,
    2304,   256,   256,   456,   157,   388,   388,   467,  1179,  1988,
      35,   251,   467,  1270,  1993,   104,  1986,  1987,  1997,   266,
     467,   430,   103,   104,    35,  2329,  2005,   466,  2248,  1286,
     111,   162,   285,   467,   467,   209,   467,   429,    83,   126,
    1834,   468,   404,   313,   210,  1851,   467,   467,   111,   202,
      35,  2030,   145,  2273,    71,   145,  2276,   118,    35,   334,
     468,  1855,    53,  1429,    35,   467,   334,   467,  2425,   222,
    2427,   416,   468,   471,    71,   468,    35,   178,   411,    35,
     269,   398,   613,    65,  1450,   166,    65,  2066,    35,   467,
     471,   350,   256,  2072,  2482,   178,   456,   790,   233,   467,
     398,   256,  2482,  2073,  2083,    35,   187,   269,   467,   269,
     263,   467,   249,   468,   467,  1286,   266,   471,   333,   272,
     320,  2425,   190,  2427,  2481,   266,   266,    32,   467,   116,
     409,   454,   455,   456,    21,   458,   459,   460,   461,   462,
     463,  1935,  1936,  1937,  1938,  2124,  2125,  1953,  2127,  1795,
    2129,  1957,  1193,  1808,   235,  2134,  1509,   238,  2137,  2138,
    1758,  2140,   513,  2142,  1988,   167,  2400,  2478,   249,  2157,
     251,  1836,  2029,  2307,  1431,  1432,  1433,  2481,  2484,  2565,
    1986,  1987,  2161,  2541,  2231,     8,   188,  2544,    11,  2529,
     459,  1503,    15,    16,    17,  1515,  1841,   890,   777,   280,
    2481,  1555,  2181,  2182,  2539,  1812,   834,  1500,  2479,  2342,
    2425,  2190,  1559,   482,   483,  2544,  1830,    40,  2213,   745,
     715,  1464,  1165,   225,    47,   767,  1479,  1139,  1736,   766,
    2391,  1979,  1164,   769,   503,  2214,  2215,  1715,  1450,  1943,
    2544,  1959,  2374,   324,  2269,  1713,  2225,  2373,    71,  2228,
     403,  2386,   613,  2223,  2385,  1273,  2153,  2468,  2456,   790,
    2469,  2240,  2482,   344,  2243,  1006,  1467,  2073,  1397,   271,
    1294,  2278,  1442,  1395,  2244,  1009,  1562,  2366,   971,   849,
    1268,   751,  2261,   364,  1118,   366,    -1,  1759,   369,  2268,
    1119,    -1,    -1,  2182,    -1,  2274,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   573,  2284,    -1,    -1,    -1,    -1,
    2289,    -1,   465,    -1,    -1,   468,   469,  1574,    -1,  2298,
      -1,    -1,    -1,  2129,    -1,  2214,  2215,    -1,  2134,    -1,
      -1,  2137,    -1,    -1,  2329,   337,    -1,   606,  2333,  2228,
      -1,  2320,   611,   612,   613,    -1,    -1,  1713,  2343,  1715,
      -1,    -1,    -1,    -1,    -1,    -1,  1613,   180,    -1,   890,
     629,    -1,   185,    -1,    -1,    -1,    -1,  2346,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2347,  1635,   381,
      -1,   383,    -1,    -1,    -1,     8,   467,    -1,    11,    -1,
     659,    -1,    15,    16,    17,  2374,  2190,    -1,   221,    -1,
    2289,  2380,   404,  1574,    -1,   407,  2385,  1664,    -1,   678,
     679,   680,    -1,   682,    -1,    -1,    -1,  2223,    -1,    -1,
      -1,  2400,  2401,  2402,  2403,    -1,  2396,    -1,    -1,   790,
      -1,  1688,  2427,   702,    -1,    -1,    -1,  2432,  2244,  2434,
     971,    -1,  1613,  2438,  2439,   268,  2240,    -1,    -1,    -1,
      -1,    -1,    -1,   722,   723,    -1,    -1,  2436,  2437,    -1,
     729,   730,  2268,    -1,  1635,    -1,    -1,    -1,    -1,    -1,
       0,    -1,  2278,    -1,    -1,    -1,  1733,    -1,    -1,    -1,
      -1,  2460,    -1,    -1,    -1,    -1,  1179,  2482,    18,  2468,
     759,    -1,    -1,  1664,   763,   764,    -1,    -1,    28,  2478,
      30,    31,    -1,    -1,  2298,   774,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    46,  1688,  2497,    -1,
      -1,   790,    -1,    -1,    -1,  2504,    -1,    -1,    -1,   890,
      -1,  2510,   355,  2503,    -1,    -1,    66,    -1,    -1,    -1,
      -1,  2347,    -1,    -1,    -1,    -1,  2525,    77,    -1,  2544,
      -1,    -1,  2346,    -1,    -1,    -1,  1813,    -1,    88,    -1,
      90,    -1,   185,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     839,    -1,    -1,    -1,    -1,    -1,    -1,   107,    -1,    -1,
     849,    -1,    -1,   206,    -1,    -1,    -1,  1953,    -1,    -1,
    2396,  1957,    -1,  1286,    -1,    -1,    -1,    -1,    -1,    -1,
     130,    -1,    -1,    -1,    -1,    -1,   136,    -1,    -1,    -1,
     971,    -1,    -1,    -1,   144,    -1,   146,    -1,    -1,    -1,
      -1,   890,    -1,    -1,    -1,    -1,    -1,    -1,   451,    -1,
      -1,   454,   455,   456,    -1,   458,   459,   460,   461,   462,
     463,    -1,  1813,    -1,   913,   268,    -1,    -1,  1179,    -1,
     919,    -1,    -1,   922,    -1,    -1,    -1,   926,    -1,    -1,
      -1,    -1,  1919,    -1,    -1,   934,   935,    -1,    -1,    35,
      -1,    -1,    -1,   942,    -1,    -1,   945,   946,   947,   948,
      -1,    -1,    -1,    -1,    -1,    -1,   955,   956,    54,    -1,
      -1,    -1,    -1,    -1,   224,    -1,    -1,  2503,    -1,    -1,
      -1,    -1,   971,   972,   973,   974,   975,   976,    -1,    -1,
      -1,   980,  1969,    -1,    -1,   984,    -1,    -1,    -1,   988,
    1977,    -1,   991,   992,   993,   994,   995,   996,   997,   998,
     999,    -1,    -1,  1002,    49,    -1,     8,   103,    -1,    11,
    1009,    -1,  1011,    15,    16,    17,    -1,    -1,  1919,     8,
      -1,    -1,    11,    -1,    -1,  1286,    -1,    -1,  2124,    -1,
      32,    -1,   292,  2129,    -1,   295,    -1,    -1,  2134,    -1,
      -1,  2137,    -1,    -1,    -1,    -1,    -1,    92,  2035,    -1,
      -1,    40,    -1,    -1,    -1,  2042,    -1,    -1,    47,    -1,
      -1,    -1,    -1,   323,    -1,  2161,    -1,    -1,    -1,    -1,
     166,   331,   117,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    71,   343,    -1,    15,    16,    17,  1179,   134,
     350,   187,    -1,   138,   354,    -1,    -1,    -1,    -1,    -1,
      -1,   454,   455,   456,   364,   458,   459,   460,   461,   462,
     463,  2098,    -1,   158,    -1,    -1,   161,   377,    -1,    -1,
      -1,    -1,  1121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     175,    -1,    -1,    -1,  2035,    -1,    -1,    -1,    -1,   235,
    1139,  2042,   238,    -1,    -1,    -1,    -1,  2243,    -1,  1148,
    1149,  1574,   412,   249,    -1,    -1,    -1,   417,    -1,    -1,
     606,    -1,    -1,     0,    -1,   611,    -1,    -1,    -1,    -1,
     430,    -1,  2268,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1179,    -1,    -1,    -1,   280,    -1,  1185,    -1,  1187,    -1,
    1613,   180,    -1,   453,    -1,  1286,   185,  2098,    -1,    -1,
      -1,    -1,    -1,    -1,   206,    -1,    -1,   467,    -1,    -1,
     470,   256,  1635,    -1,    -1,    -1,    -1,    -1,    -1,   264,
      -1,    -1,    -1,    -1,    -1,    -1,  2213,    -1,   324,    -1,
      -1,    -1,   221,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1664,    -1,    -1,    -1,    -1,    -1,    -1,   344,    -1,
      -1,    -1,    -1,    90,  1253,    -1,    -1,    -1,    -1,    -1,
     305,  2248,    -1,    -1,    -1,  1688,   268,    -1,   364,  1268,
      -1,  1270,  1271,  1272,   720,    -1,   722,   723,  2374,   268,
      -1,    -1,    -1,    -1,    -1,    -1,  2273,  1286,    -1,  2276,
      -1,    -1,    -1,  1292,  1293,    -1,    -1,    -1,    -1,  1298,
      -1,    -1,    -1,   140,  2400,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2213,  1574,    -1,   152,    -1,    -1,    -1,    -1,
     157,    -1,    -1,    -1,    -1,   162,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   171,     0,    -1,   174,   268,  1338,
    1339,  1340,    -1,    -1,  1343,   791,    -1,  2248,   794,   795,
      -1,    -1,  1613,    -1,    -1,    -1,  1355,  1356,  1357,  1358,
      -1,    -1,    -1,    -1,  1363,   202,   355,    -1,    -1,    -1,
      -1,    -1,  2273,    -1,  1635,  2276,    -1,  1376,  1377,    -1,
      -1,  1380,    -1,    -1,    -1,   222,    -1,    -1,    -1,    -1,
    1813,    -1,    -1,    -1,    -1,  1394,    -1,  1396,    -1,  1398,
      -1,    -1,    -1,  1664,    -1,    -1,    -1,    -1,   854,   855,
      -1,    -1,    -1,    -1,  2510,    -1,    -1,    -1,    -1,  1418,
      -1,    -1,    -1,    -1,    -1,    90,   263,  1688,    -1,   266,
    1429,    -1,  1431,  1432,  1433,   272,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1442,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1450,   454,   455,   456,    -1,   458,   459,   460,   461,
     462,   463,   451,    -1,    -1,  1464,    -1,    -1,    -1,   458,
     459,   460,   461,   462,   463,   140,    -1,    -1,   924,   925,
    1479,    -1,    -1,  1574,    -1,    -1,   932,   152,    -1,   326,
     936,   937,   157,    -1,    -1,  2482,  1919,   162,  1497,    -1,
      -1,    -1,    -1,    -1,    -1,   951,   171,   953,    -1,   174,
      -1,    -1,    -1,    -1,    -1,  1514,  1515,  1516,    -1,    -1,
     966,   967,  1613,    -1,   454,   455,   456,    -1,   458,   459,
     460,   461,   462,   463,    -1,    -1,    -1,   202,    -1,    -1,
     377,    -1,    -1,    -1,  1635,    -1,     8,    -1,    -1,    11,
      -1,    -1,  1813,    -1,    -1,    -1,    -1,   222,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   403,    -1,    -1,    -1,
      -1,    -1,    -1,  1664,    -1,  1574,    -1,    -1,    40,    -1,
      -1,  2482,    -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,
     427,    -1,   429,   430,    -1,    -1,    -1,  1688,   263,    -1,
      -1,   266,    -1,    -1,    -1,    -1,    -1,   272,    -1,    71,
      -1,  1610,  2035,    -1,  1613,    -1,    -1,    -1,    -1,  2042,
      -1,  1620,    -1,    -1,    -1,    -1,    -1,  1626,   465,    -1,
    1629,   468,   469,   470,    -1,    -1,  1635,  1636,  1637,  1638,
    1639,    -1,    -1,  1642,  1643,  1644,  1645,  1646,  1647,  1648,
    1649,  1650,  1651,    -1,    -1,    -1,  1655,  1656,  1919,    -1,
      -1,   326,    -1,    -1,    -1,  1664,    -1,    -1,    -1,    -1,
    1669,    -1,    -1,    -1,    -1,  2098,   138,  1676,    -1,    -1,
    1679,    -1,  1681,    -1,    -1,    -1,    -1,    -1,    -1,  1688,
    1689,    -1,    -1,  1692,  1693,    -1,    -1,    -1,  1697,  1698,
      -1,    -1,  1148,  1149,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,    -1,  1713,    -1,  1715,     8,   180,    -1,
      11,    -1,  1813,   185,    -1,    -1,    -1,    -1,  1727,    -1,
      -1,    -1,    -1,    -1,  1733,    -1,    -1,    -1,   403,    -1,
      -1,    -1,    -1,    -1,     8,  1744,    -1,    11,    -1,    40,
      -1,    -1,    -1,  1199,    -1,    -1,    47,    -1,    -1,   221,
      -1,  1760,   427,  1209,   429,   430,  1212,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2035,    -1,    40,    -1,    -1,    -1,
      71,  2042,    -1,    47,    -1,    -1,    -1,    -1,     8,    -1,
    2213,    11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,
     465,    -1,    -1,   468,   469,   470,   268,    71,    -1,  1808,
      -1,    -1,    32,  1812,  1813,  1814,    -1,    -1,    -1,    -1,
      -1,    -1,  1268,    -1,    -1,  2248,    -1,    -1,  1919,    -1,
      -1,    -1,    -1,    -1,   482,   483,  1282,  2098,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,
    2273,    -1,    -1,  2276,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1870,    -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   180,
      -1,    -1,    -1,   355,   185,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1913,  1914,   180,    -1,    -1,  1918,
    1919,   185,    -1,    -1,  1923,    -1,    -1,  1926,  1927,    -1,
     221,    -1,  1931,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2035,    -1,    -1,    -1,    -1,    -1,
      -1,  2042,  2213,    -1,  1953,    -1,    -1,   221,  1957,    -1,
      -1,    22,    -1,    -1,   612,    -1,    -1,    28,    -1,    -1,
    1969,    -1,    -1,    -1,    35,    -1,    -1,   268,  1977,    -1,
      -1,   629,    -1,    -1,    -1,  1984,   206,  2248,    -1,   451,
      -1,    -1,  1438,    54,    -1,    -1,   458,   459,   460,   461,
     462,   463,    -1,    -1,   268,    -1,    -1,  2098,    -1,    -1,
      -1,   659,  2273,    -1,    -1,  2276,    -1,    -1,  2017,    -1,
      -1,    -1,    -1,    -1,    -1,  1471,  1472,  2026,    -1,    -1,
     678,   679,   680,    -1,   682,    -1,  2035,    -1,    -1,    -1,
      -1,    -1,   103,  2042,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,   702,    -1,    -1,    -1,    -1,  2482,
      -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,    -1,   130,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   729,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   355,    -1,     0,    -1,    -1,  2095,    -1,    -1,  2098,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2107,  2108,
      -1,   759,  2111,    -1,    -1,   763,   764,    -1,    -1,    -1,
      -1,    -1,  2213,    -1,    -1,  2124,   187,    -1,    -1,    -1,
    2129,    -1,    -1,    -1,    -1,  2134,    -1,    -1,  2137,  2138,
      -1,    -1,    -1,    -1,    -1,    -1,  2145,  2146,    -1,    -1,
      -1,  1597,  1598,    -1,    -1,    -1,  1602,  2248,    -1,    -1,
     451,    -1,  2161,    -1,  2163,    -1,    -1,   458,   459,   460,
     461,   462,   463,    -1,   235,    -1,    -1,   238,    -1,    -1,
      -1,    -1,  2273,    90,  2183,  2276,    -1,   451,   249,    -1,
      -1,    -1,    -1,    -1,   458,   459,   460,   461,   462,   463,
      -1,   696,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,
      -1,    -1,    -1,    -1,  2213,    -1,    -1,  2216,    -1,   280,
      -1,  2482,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,   140,   454,   455,   456,    -1,   458,   459,
     460,   461,   462,   463,  2243,   152,    -1,   742,  2247,  2248,
     157,    -1,    -1,    -1,    -1,   162,    -1,    -1,   319,    40,
      -1,    -1,   323,   324,   171,  2264,    47,   174,    -1,  2268,
      -1,   919,    -1,    -1,  2273,    -1,    -1,  2276,     8,  2278,
      -1,    11,    -1,   344,    -1,    15,    16,    17,    -1,   350,
      71,  2290,    -1,    -1,   942,   202,    -1,   945,    -1,    -1,
     948,  2300,    32,   364,    -1,  2304,  2305,   955,   956,    -1,
      40,    -1,    -1,    -1,    -1,   222,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    -1,   972,   973,   974,   975,    -1,    -1,
    2329,    -1,   980,    -1,    -1,    -1,   984,    -1,    -1,    -1,
     988,    71,    -1,   991,   992,   993,   994,   995,   996,   997,
     998,   999,    -1,   414,  1002,    -1,   263,   138,    -1,   266,
      -1,  1009,    -1,  1011,    -1,   272,    -1,  1813,    -1,    -1,
      -1,    -1,  2371,    -1,   869,  2374,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2383,    -1,    -1,    -1,    -1,    -1,
      -1,  2482,  2391,    -1,    -1,    -1,    -1,    -1,    -1,   180,
      -1,  2400,    -1,    -1,   185,    -1,    -1,    -1,    -1,    -1,
    1856,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   326,
      -1,  2420,   917,    -1,    -1,    -1,  2425,    -1,  2427,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     221,    -1,    -1,    -1,    -1,    -1,   941,    -1,    -1,    -1,
     180,   946,    -1,    -1,    -1,   185,  2455,  2456,    -1,    -1,
      -1,    -1,   957,   958,   959,    -1,   961,    -1,    -1,    -1,
     377,    -1,    -1,  1121,    -1,    -1,   206,   207,    -1,    -1,
      -1,    -1,  2481,  2482,    -1,    -1,    -1,   268,    -1,    -1,
      -1,   221,    -1,    -1,    -1,     8,   403,    -1,    11,    -1,
    1148,  1149,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,
      -1,  2510,  1007,  2512,    -1,    -1,    -1,    -1,    -1,    32,
     427,   251,   429,   430,   254,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1029,    -1,    -1,    -1,   268,    -1,
       8,   271,    -1,    11,    -1,  2544,    -1,    15,    16,    17,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   465,    -1,
      -1,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    -1,   355,  2574,  2575,    -1,  2024,    47,
      -1,    -1,    -1,  2029,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2043,  2044,    -1,
      -1,    -1,    -1,    71,    -1,     3,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,
      -1,    -1,  1270,  1271,  1272,   355,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    32,    -1,    -1,    35,    -1,    -1,
    1135,    -1,    40,    -1,    -1,  1293,    -1,    -1,    -1,    47,
    1298,    -1,  1147,    -1,    -1,    -1,    -1,  1152,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     451,    -1,    -1,    71,    -1,    -1,    -1,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1340,   206,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1355,    -1,  1357,
    1358,    -1,   180,    -1,    -1,  1363,    -1,   185,    -1,    -1,
      -1,   451,    -1,    -1,   454,   455,   456,    -1,   458,   459,
     460,   461,   462,   463,    -1,    -1,    -1,    -1,   206,   207,
      -1,   471,    -1,    -1,    -1,    -1,  1394,    -1,  1396,    -1,
    1398,    -1,    -1,   221,    -1,   268,    -1,     8,  2204,  2205,
      11,    -1,    -1,    -1,    15,    16,    17,  2213,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    32,   180,  1431,  1432,  1433,   254,   185,    -1,    40,
      -1,    -1,    -1,    -1,  1442,    -1,    47,    -1,    -1,    -1,
     268,  1296,    -1,    -1,    -1,    -1,    -1,    -1,   206,   207,
      -1,    -1,    -1,    -1,    -1,    -1,  1464,    -1,    -1,    -1,
      71,    -1,    -1,   221,  1319,    -1,    -1,    -1,    -1,    -1,
      -1,  1479,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1336,    -1,  1338,  1339,    -1,  1341,    -1,  1343,  1497,
      -1,    -1,  1347,   251,    -1,    -1,   254,    -1,    -1,  1354,
      -1,    -1,    -1,    -1,  1359,    -1,    -1,    -1,    -1,    -1,
     268,    -1,    -1,   271,  1369,  1370,  1371,  1372,    -1,    -1,
      -1,  1376,  1377,  2329,  1379,    -1,    -1,   355,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1390,    -1,    -1,  1393,    -1,
       8,    -1,    -1,    11,    -1,  1400,  1401,  1402,  1403,  1404,
    1405,  1406,  1407,  1408,  1409,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,   180,
      -1,    -1,    40,    -1,   185,    -1,    -1,    -1,    -1,    47,
      -1,   454,   455,   456,    -1,   458,   459,   460,   461,   462,
     463,    -1,  1447,    -1,    -1,   206,   207,   355,    -1,    -1,
      -1,    -1,  1610,    71,    -1,    -1,    -1,    -1,    -1,    -1,
     221,    -1,  1620,    -1,    -1,    -1,    -1,    -1,  1626,    -1,
      -1,  1629,    -1,   451,    -1,    -1,   454,   455,   456,    -1,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,    -1,
     251,    -1,    -1,   254,    -1,    -1,    -1,  1655,  1656,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,    -1,
     271,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1676,    -1,
     138,  1679,    -1,  1681,    -1,    -1,  2482,    -1,    -1,    -1,
      -1,  1689,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1697,
    1698,    -1,    -1,   451,    -1,    -1,   454,   455,   456,    -1,
     458,   459,   460,   461,   462,   463,     8,    -1,    -1,    11,
      -1,    -1,   180,    15,    16,    17,    -1,   185,    -1,  1727,
      -1,    -1,    -1,    -1,    -1,  1733,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1744,    -1,  1593,  1594,
      -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1760,   221,  1609,    -1,   206,    -1,    -1,    -1,
    1615,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1632,  1633,  1634,
      -1,  1636,  1637,  1638,  1639,    -1,    -1,  1642,  1643,  1644,
    1645,  1646,  1647,  1648,  1649,  1650,  1651,  1652,    -1,    -1,
     268,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1672,   268,    -1,
      -1,    -1,  1677,  1678,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1691,  1692,  1693,  1694,
     451,  1696,    -1,   454,   455,   456,    -1,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,    -1,   468,    -1,    -1,
      -1,    -1,  1870,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1739,    -1,    -1,   355,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   206,  1913,  1914,    -1,    -1,    -1,
    1918,    -1,    -1,    -1,    -1,  1923,    -1,    -1,  1926,  1927,
      -1,     8,  1777,  1931,    11,    -1,    -1,    -1,    15,    16,
      17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      47,  1969,    -1,    -1,    -1,    -1,   268,    -1,    -1,  1977,
      -1,    -1,    -1,    -1,    -1,    -1,  1984,    -1,    -1,    -1,
      -1,    -1,    -1,   451,    71,    -1,    -1,    -1,    -1,    -1,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   454,   455,   456,    -1,   458,   459,
     460,   461,   462,   463,     8,    -1,  1871,    11,  2026,    -1,
    1875,  1876,    -1,  1878,    -1,    -1,  1881,  1882,  1883,  1884,
      -1,    -1,    -1,  1888,  1889,  1890,  1891,  1892,  1893,  1894,
    1895,  1896,  1897,  1898,  1899,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    47,    -1,    -1,    -1,  1912,    -1,    -1,
    1915,    -1,  1917,    -1,    -1,    -1,  1921,    -1,    -1,  1924,
    1925,    -1,    -1,  1928,  1929,    -1,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   180,    -1,    -1,    -1,    -1,   185,  2107,
    2108,    -1,    -1,  2111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1971,    -1,    -1,   206,
     207,    -1,    -1,    -1,    -1,    20,    -1,    -1,  1983,    -1,
      -1,    -1,    -1,    -1,   221,    -1,    -1,  2145,  2146,     8,
      -1,  1996,    11,    -1,   138,    -1,    15,    16,    17,    -1,
      -1,    -1,   454,   455,   456,  2163,   458,   459,   460,   461,
     462,   463,    -1,    32,   251,    -1,    -1,   254,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    72,    47,    -1,
      -1,   268,    -1,    -1,   271,    -1,   180,    -1,    -1,    -1,
      -1,   185,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   221,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2091,    -1,    -1,    -1,
    2095,    -1,    -1,    -1,   139,    -1,  2101,  2102,  2103,    -1,
      -1,  2106,   147,    -1,  2109,  2110,  2264,    -1,    -1,  2114,
      -1,    -1,    -1,    -1,   159,    -1,    -1,    -1,   355,    -1,
    2278,    -1,    -1,    -1,   268,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   188,    -1,    -1,    -1,  2305,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   180,    -1,    -1,    -1,    -1,   185,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2183,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   206,   207,   234,
      -1,    -1,    -1,    -1,    -1,    -1,  2201,    -1,    -1,    -1,
      -1,    -1,   221,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   355,    -1,    -1,   451,    -1,    -1,   454,   455,   456,
      -1,   458,   459,   460,   461,   462,   463,    -1,    -1,    -1,
      -1,   468,   251,  2391,    -1,   254,    -1,    -1,    -1,    -1,
      -1,  2246,  2247,    -1,    -1,   290,  2251,  2252,  2253,   268,
      -1,    -1,   271,    -1,    -1,    -1,    -1,    -1,    -1,   304,
      -1,    -1,  2420,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2282,  2283,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     335,  2296,   337,    -1,    -1,    -1,    -1,  2455,  2456,   344,
      -1,    -1,   347,  2308,    -1,    -1,    -1,   451,    -1,    -1,
      -1,    -1,    -1,    -1,   458,   459,   460,   461,   462,   463,
      -1,   366,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,    -1,    -1,    -1,   355,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,    -1,
      -1,    -1,    -1,    -1,  2512,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2368,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2379,    -1,    -1,    -1,   423,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2398,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2412,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2574,  2575,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   451,    -1,    -1,   454,   455,   456,    -1,   458,
     459,   460,   461,   462,   463,    -1,    -1,   466,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,  2489,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
    2515,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
     125,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,  2586,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,    -1,   163,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,   460,    -1,    -1,    -1,    -1,
      -1,    -1,   467,   468,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,    -1,   163,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,   468,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,    -1,   163,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,   162,   163,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,   216,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,    -1,   163,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,   460,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,    -1,   163,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,    -1,   163,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,   468,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,   162,   163,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,    -1,   163,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,    -1,   163,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,    -1,   163,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,    -1,   163,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,    -1,   163,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,    -1,   163,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,    -1,   163,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,    -1,   163,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,    -1,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,     3,     4,     5,
       6,     7,   467,     9,    10,    -1,    -1,   472,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    72,    -1,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,    -1,
      -1,   127,   128,   129,   130,   131,    -1,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,    -1,   163,   164,   165,
     166,   167,    -1,   169,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,   219,   220,   221,    -1,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,    -1,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    72,    -1,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,    -1,
      -1,   127,   128,   129,   130,   131,    -1,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,    -1,   163,   164,   165,
     166,   167,    -1,   169,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,   219,   220,   221,    -1,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,    -1,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    72,    -1,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,    -1,
      -1,   127,   128,   129,   130,   131,    -1,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,    -1,   163,   164,   165,
     166,   167,    -1,   169,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,   208,   209,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,   219,   220,   221,    -1,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
     256,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,    -1,    -1,    -1,    -1,
      -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    -1,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    72,    -1,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,    -1,
      -1,   127,   128,   129,   130,   131,    -1,   133,   134,   135,
      -1,   137,    -1,   139,    -1,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,    -1,   163,   164,   165,
     166,   167,    -1,   169,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,    -1,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,   208,   209,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
     256,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   458,   459,     3,    -1,    -1,    -1,    -1,    -1,
      -1,   467,    -1,    -1,    -1,    -1,   472,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    35,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    91,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,    -1,    -1,   127,   128,
     129,   130,   131,    -1,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,   144,   145,   146,   147,   148,
     149,    -1,   151,    -1,   153,   154,   155,   156,    -1,   158,
      -1,   160,    -1,    -1,   163,   164,   165,   166,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,   194,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,
     209,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
     219,   220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,    -1,   252,   253,    -1,   255,    -1,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,    -1,   268,
     269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,    -1,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,    -1,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
      -1,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,    -1,   378,
      -1,   380,   381,   382,   383,   384,    -1,   386,   387,    -1,
      -1,   390,   391,   392,   393,   394,    -1,   396,   397,   398,
     399,   400,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,    -1,   412,   413,   414,   415,   416,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,    -1,    -1,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   468,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,    -1,   252,   253,   254,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,    -1,    -1,   453,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    72,    -1,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,   145,   146,
     147,   148,   149,    -1,   151,    -1,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,    -1,   163,   164,   165,   166,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,    -1,
     217,   218,   219,   220,   221,    -1,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,    -1,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
     267,   268,   269,   270,    -1,    -1,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,    -1,    -1,   390,   391,   392,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,   414,   415,   416,
     417,   418,    -1,   420,   421,   422,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,    -1,    -1,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     467,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    72,    -1,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,   145,   146,
     147,   148,   149,    -1,   151,    -1,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,    -1,   163,   164,   165,   166,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,   219,   220,   221,    -1,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,    -1,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,    -1,    -1,   390,   391,   392,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,   414,   415,   416,
     417,   418,    -1,   420,   421,   422,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,    -1,    -1,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     467,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    72,    -1,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,   145,   146,
     147,   148,   149,    -1,   151,    -1,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,    -1,   163,   164,   165,   166,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,   219,   220,   221,    -1,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,    -1,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,    -1,    -1,   390,   391,   392,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,   414,   415,   416,
     417,   418,    -1,   420,   421,   422,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,    -1,    -1,     3,     4,     5,    -1,
      -1,    -1,     9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     467,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    72,    -1,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,   145,   146,
     147,   148,   149,   150,   151,    -1,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,    -1,   163,   164,   165,   166,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,   219,   220,   221,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,    -1,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,   266,
      -1,   268,   269,   270,    -1,    -1,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,    -1,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,    -1,    -1,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,    -1,   412,   413,   414,   415,   416,
     417,   418,    -1,   420,   421,   422,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,    -1,    -1,     3,    -1,    -1,    -1,
      -1,   458,   459,   460,    -1,    -1,    -1,    -1,    -1,    -1,
     467,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    72,    -1,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,   145,   146,
     147,   148,   149,    -1,   151,    -1,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,    -1,   163,   164,   165,   166,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,   219,   220,   221,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,    -1,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,    -1,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,    -1,    -1,   390,   391,   392,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,    -1,   412,   413,   414,   415,   416,
     417,   418,    -1,   420,   421,   422,   423,   424,   425,    -1,
      -1,   428,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,    -1,    -1,   453,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     467,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,    -1,
      -1,   127,   128,   129,   130,   131,    -1,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,   144,   145,
     146,   147,   148,   149,    -1,   151,    -1,   153,   154,   155,
     156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,
     166,   167,    -1,   169,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,    -1,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,   208,    -1,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,    -1,    -1,   453,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   467,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,    -1,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,   208,    -1,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,    -1,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,    -1,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,    -1,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,    -1,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,   208,    -1,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,    -1,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,    -1,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,    -1,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,    -1,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,   208,    -1,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,    -1,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,    -1,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,    -1,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,    -1,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,   208,    -1,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,    -1,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,    -1,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,    -1,    -1,    -1,    -1,
      -1,     3,     4,     5,    -1,    -1,     8,     9,    -1,    -1,
      -1,    -1,   467,    15,    16,    17,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    46,    -1,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    -1,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,    -1,   146,   147,   148,    -1,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,    -1,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,    -1,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,    -1,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,    -1,   275,   276,   277,    -1,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,    -1,
     292,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
      -1,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,    -1,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   448,   449,   450,    -1,
       3,    -1,   454,   455,   456,     8,   458,   459,   460,   461,
     462,   463,    15,    16,    17,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,    -1,    -1,   127,   128,   129,   130,   131,    -1,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,   144,   145,   146,   147,   148,   149,    -1,   151,    -1,
     153,   154,   155,   156,    -1,   158,    -1,   160,    -1,    -1,
      -1,   164,   165,   166,   167,    -1,   169,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,    -1,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,   190,   191,    -1,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,
     213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,    -1,
     223,   224,   225,    -1,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,    -1,   252,
     253,    -1,   255,    -1,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,    -1,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,    -1,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,    -1,    -1,
      -1,   454,   455,   456,    -1,   458,   459,   460,   461,   462,
     463,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,
      17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,    32,    15,    16,    17,    -1,
      -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,     8,    -1,
      47,    11,    -1,    32,    -1,    15,    16,    17,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,
      -1,    -1,    32,    -1,    71,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,     8,    47,    -1,    11,
      -1,    -1,    71,    15,    16,    17,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      32,    71,    15,    16,    17,    -1,    -1,    -1,    40,    -1,
      -1,    -1,    -1,     8,    -1,    47,    11,    -1,    -1,    32,
      15,    16,    17,    -1,    -1,    -1,    -1,    40,    -1,    -1,
      -1,    -1,    -1,    -1,    47,    -1,    -1,    32,    -1,    71,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,     8,    -1,
      -1,    11,    47,    -1,    -1,    15,    16,    17,    71,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    32,   180,    -1,    -1,    71,    -1,   185,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,
      -1,   180,    -1,    -1,    -1,    -1,   185,    -1,    -1,   206,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,    71,    -1,    -1,   221,   185,    -1,   206,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   221,    -1,    -1,    -1,   206,   207,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,    -1,   254,   180,    -1,
      -1,   221,    -1,   185,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   268,   251,    -1,   271,   254,    -1,   180,    -1,    -1,
      -1,    -1,   185,    -1,   206,   207,    -1,    -1,    -1,   268,
      -1,   251,   271,    -1,   254,   180,    -1,    -1,    -1,   221,
     185,    -1,    -1,   206,   207,    -1,    -1,    -1,   268,    -1,
      -1,   271,    -1,    -1,    -1,    -1,    -1,    -1,   221,    -1,
      -1,   206,   207,    -1,    -1,    -1,    -1,    -1,    -1,   251,
     180,    -1,   254,    -1,    -1,   185,   221,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,   251,   271,
      -1,   254,    -1,    -1,    -1,    -1,   206,   207,   355,    -1,
      -1,    -1,    -1,    -1,    -1,   268,   251,    -1,   271,   254,
      -1,   221,    -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,
      -1,    -1,    -1,   268,    -1,    -1,   271,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,   355,    -1,    15,    16,    17,
      -1,   251,    -1,    -1,   254,    -1,    -1,    22,    -1,    -1,
      -1,    -1,    -1,    28,    32,    -1,    -1,    -1,   268,    -1,
      35,   271,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,
      -1,    -1,    -1,   355,    -1,    -1,    -1,    -1,    -1,    54,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   355,    71,   451,    -1,    -1,   454,   455,   456,
      -1,   458,   459,   460,   461,   462,   463,    -1,    -1,    -1,
     355,   468,   451,    -1,    -1,   454,   455,   456,    -1,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   103,   468,
      -1,   451,    -1,    -1,   454,   455,   456,    -1,   458,   459,
     460,   461,   462,   463,    -1,   355,    -1,    -1,   468,    -1,
      -1,    -1,    -1,    -1,    -1,   130,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   451,
      -1,    -1,   454,   455,   456,    -1,   458,   459,   460,   461,
     462,   463,    -1,    -1,    -1,    -1,   468,    -1,   451,    -1,
      -1,   454,   455,   456,    -1,   458,   459,   460,   461,   462,
     463,    -1,   180,    -1,    -1,   468,   451,   185,    -1,   454,
     455,   456,   187,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,    -1,   468,    -1,    -1,    -1,    -1,   206,   207,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   451,    -1,   221,   454,   455,   456,    -1,   458,   459,
     460,   461,   462,   463,    -1,    -1,    -1,    -1,   468,    -1,
     235,    -1,    -1,   238,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   251,   249,    -1,   254,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     268,    -1,    -1,   271,    -1,   270,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   319,    -1,    -1,    -1,   323,   324,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   344,
      -1,    -1,    -1,    -1,    -1,   350,    -1,   355,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   364,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   414,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   451,    -1,    -1,   454,   455,   456,     3,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,    -1,
     468,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   460,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,    -1,
      -1,   127,   128,   129,   130,   131,    -1,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,   144,   145,
     146,   147,   148,   149,    -1,   151,    -1,   153,   154,   155,
     156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,
     166,   167,    -1,   169,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,    -1,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,   208,    -1,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,     4,     5,    -1,    -1,
      -1,     9,    -1,    -1,   460,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,    -1,   252,   253,   254,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,   266,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,     4,     5,    -1,    -1,    -1,     9,
     458,   459,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,    -1,   163,   164,   165,   166,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,   219,
     220,   221,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,    -1,   252,   253,   254,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,   266,    -1,   268,   269,
     270,    -1,    -1,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,     4,     5,    -1,    -1,    -1,     9,   458,   459,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      72,    -1,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,    -1,    -1,   127,   128,   129,   130,   131,
      -1,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
      -1,   163,   164,   165,   166,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,   194,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,   219,   220,   221,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,    -1,
     252,   253,   254,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,   266,    -1,   268,   269,   270,    -1,
      -1,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,   421,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,    -1,
      -1,     8,    -1,    -1,    11,    -1,   458,   459,    15,    16,
      17,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      -1,    15,    16,    17,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    32,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    47,     8,    -1,    -1,    11,    -1,    -1,
      -1,    15,    16,    17,    71,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    71,    32,    -1,
      15,    16,    17,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    47,    -1,    -1,    -1,    32,    -1,    -1,
      35,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,     8,    47,   120,    11,    -1,    -1,    71,    15,    16,
      17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,    32,    71,    15,    16,    17,
      -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      47,    -1,    -1,    -1,    32,    -1,    -1,    35,    -1,    -1,
      -1,    -1,    40,   157,    -1,    -1,    -1,    -1,   162,    47,
      -1,    -1,    -1,   180,    71,    -1,    -1,    -1,   185,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   180,    -1,    -1,    -1,
      -1,   185,    -1,    71,    -1,    -1,    -1,    -1,    -1,   206,
     207,    -1,   156,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   206,   207,   221,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   180,   221,    -1,    -1,
      -1,   185,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   251,   180,    -1,   254,    -1,    -1,
     185,    -1,   206,   207,    -1,    -1,    -1,   251,    -1,    -1,
     254,   268,    -1,    -1,   271,    -1,    -1,   221,    -1,    -1,
      -1,   206,   207,    -1,   268,    -1,    -1,   271,    -1,    -1,
      -1,    -1,    -1,   180,    -1,    -1,   221,    -1,   185,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,
     254,    -1,   180,    -1,    -1,    -1,    -1,   185,    -1,   206,
     207,    -1,    -1,    -1,   268,    -1,   251,   271,    -1,   254,
      -1,    -1,    -1,    -1,   221,    -1,    -1,    -1,   206,   207,
      -1,    -1,    -1,   268,    -1,    -1,   271,    -1,    -1,   293,
      -1,    -1,    -1,   221,    -1,    -1,    -1,    -1,   355,    -1,
      -1,    -1,    -1,    -1,   251,    -1,    -1,   254,    -1,    -1,
      -1,   355,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   268,    -1,   251,   271,    -1,   254,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     268,   288,    -1,   271,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   355,    -1,    -1,   411,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     355,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   451,    -1,    -1,   454,   455,   456,
      -1,   458,   459,   460,   461,   462,   463,   451,   355,    -1,
     454,   455,   456,    -1,   458,   459,   460,   461,   462,   463,
      -1,     8,    -1,    -1,    11,    -1,    -1,   355,    15,    16,
      17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    32,    -1,   451,    -1,    -1,
     454,   455,   456,    40,   458,   459,   460,   461,   462,   463,
      47,    -1,    -1,    -1,    -1,    -1,   451,    -1,    -1,   454,
     455,   456,    -1,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,    -1,    -1,    71,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   451,    -1,    -1,   454,   455,   456,
      -1,   458,   459,   460,   461,   462,   463,    -1,    -1,    -1,
      -1,    -1,    -1,   451,    -1,    -1,   454,   455,   456,    -1,
     458,   459,   460,   461,   462,   463,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,
      -1,    -1,    -1,    -1,    32,   162,    47,    -1,    -1,    -1,
      -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,
      -1,    -1,    -1,   180,    -1,    -1,    -1,    -1,   185,    -1,
      71,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    71,    -1,    -1,    -1,    -1,    -1,   206,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   221,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    32,   251,    -1,    -1,   254,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,     8,
      -1,   268,    11,    -1,   271,    -1,    15,    16,    17,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,   180,
      -1,    40,    -1,    -1,   185,    -1,    -1,    -1,    47,    -1,
      -1,    -1,   180,    -1,    -1,    -1,    -1,   185,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   206,   207,    -1,    -1,    -1,
      -1,    -1,    71,    -1,    -1,    -1,    -1,    -1,   206,   207,
     221,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   221,    -1,    -1,    -1,    -1,   355,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     251,    -1,    -1,   254,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   251,    -1,    -1,   254,   268,    -1,    -1,
     271,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     268,   180,    -1,   271,    -1,    -1,   185,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   206,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   180,   221,    -1,    -1,    -1,   185,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   451,    -1,    -1,   454,   455,   456,
      -1,   458,   459,   460,   461,   462,   463,   206,   207,    -1,
      -1,    -1,   251,    -1,   355,   254,    -1,    -1,    -1,    -1,
      -1,    -1,   221,    -1,    -1,    -1,    -1,   355,    -1,   268,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   251,    -1,    -1,   254,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     451,    -1,    -1,   454,   455,   456,   355,   458,   459,   460,
     461,   462,   463,   451,    -1,    -1,   454,   455,   456,    -1,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   451,    -1,    -1,   454,   455,   456,    -1,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       3,    -1,   451,    -1,    -1,   454,   455,   456,    -1,   458,
     459,   460,   461,   462,   463,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    72,    -1,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,   145,   146,
     147,   148,   149,    -1,   151,    -1,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,    -1,   163,   164,   165,   166,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,   219,   220,   221,    -1,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,    -1,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,    -1,    -1,   390,   391,   392,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,   414,   415,   416,
     417,   418,    -1,   420,   421,   422,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,     3,    -1,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    72,    -1,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,    -1,    -1,   127,   128,
     129,   130,   131,    -1,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,    -1,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,    -1,   163,   164,   165,   166,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,   194,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
     219,   220,   221,    -1,   223,   224,   225,    -1,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,    -1,   252,   253,   254,   255,    -1,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,   266,    -1,   268,
     269,   270,    -1,    -1,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,    -1,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,    -1,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
      -1,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,    -1,
      -1,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,    -1,   412,   413,   414,   415,   416,   417,   418,
      -1,   420,   421,   422,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    72,    -1,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,    -1,    -1,   127,   128,   129,   130,
     131,    -1,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,   144,   145,   146,   147,   148,   149,    -1,
     151,    -1,   153,   154,   155,   156,    -1,   158,    -1,   160,
     161,    -1,   163,   164,   165,   166,   167,    -1,   169,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,   194,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,    -1,    -1,   217,   218,   219,   220,
     221,    -1,   223,   224,   225,    -1,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
      -1,   252,   253,   254,   255,    -1,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,    -1,   268,   269,   270,
      -1,    -1,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,    -1,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,    -1,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,    -1,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,    -1,    -1,   390,
     391,   392,   393,   394,    -1,   396,   397,   398,   399,   400,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
      -1,   412,   413,   414,   415,   416,   417,   418,    -1,   420,
     421,   422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,    -1,    -1,   127,   128,   129,   130,   131,    -1,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,   144,   145,   146,   147,   148,   149,    -1,   151,    -1,
     153,   154,   155,   156,    -1,   158,    -1,   160,   161,    -1,
     163,   164,   165,   166,   167,    -1,   169,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,    -1,   217,   218,   219,   220,   221,    -1,
     223,   224,   225,    -1,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,    -1,   252,
     253,   254,   255,    -1,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,    -1,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    -1,    -1,    73,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,    -1,   151,    -1,   153,   154,
     155,   156,    -1,   158,   159,   160,    -1,    -1,    -1,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,   208,    -1,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,    -1,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,    -1,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,   402,    -1,   404,
     405,   406,   407,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    83,    84,    85,    86,
      87,    88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,   145,   146,
     147,   148,   149,    -1,   151,    -1,   153,   154,   155,   156,
      -1,   158,   159,   160,    -1,    -1,    -1,   164,   165,   166,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,    -1,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,    -1,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,    -1,
      -1,   208,    -1,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,    -1,   220,   221,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,    -1,   246,
     247,   248,   249,   250,    -1,   252,   253,    -1,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,   276,
      -1,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,    -1,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
      -1,   378,    -1,   380,   381,   382,   383,   384,    -1,   386,
     387,    -1,    -1,   390,   391,   392,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,   402,    -1,   404,   405,   406,
     407,   408,   409,    -1,    -1,   412,   413,   414,   415,   416,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    30,    31,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,    -1,    -1,   127,   128,
     129,   130,   131,    -1,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,   144,   145,   146,   147,   148,
     149,    -1,   151,    -1,   153,   154,   155,   156,    -1,   158,
      -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,
      -1,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
      -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,    -1,   246,   247,   248,
     249,   250,    -1,   252,   253,    -1,   255,    -1,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,    -1,   268,
     269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,    -1,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,    -1,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
      -1,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,    -1,   378,
      -1,   380,   381,   382,   383,   384,    -1,   386,   387,    -1,
      -1,   390,   391,   392,   393,   394,    -1,   396,   397,   398,
     399,   400,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,    -1,   412,   413,   414,   415,   416,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,    -1,    -1,   127,   128,   129,   130,
     131,    -1,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,   144,   145,   146,   147,   148,   149,    -1,
     151,    -1,   153,   154,   155,   156,    -1,   158,    -1,   160,
      -1,    -1,    -1,   164,   165,   166,   167,    -1,   169,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,
     211,   212,   213,   214,    -1,    -1,   217,   218,    -1,   220,
      -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,    -1,   246,   247,   248,   249,   250,
      -1,   252,   253,    -1,   255,    -1,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,    -1,   268,   269,   270,
      -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,    -1,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,    -1,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,    -1,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,    -1,   378,    -1,   380,
     381,   382,   383,   384,    -1,   386,   387,    -1,    -1,   390,
     391,   392,   393,   394,    -1,   396,   397,   398,   399,   400,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
      -1,   412,   413,   414,   415,   416,   417,   418,    -1,   420,
      -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,    -1,    -1,   127,   128,   129,   130,   131,    -1,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,   144,   145,   146,   147,   148,   149,    -1,   151,    -1,
     153,   154,   155,   156,    -1,   158,    -1,   160,    -1,    -1,
      -1,   164,   165,   166,   167,    -1,   169,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,    -1,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,   190,   191,    -1,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,
     213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,    -1,
     223,   224,   225,    -1,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,    -1,   252,
     253,    -1,   255,    -1,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,    -1,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,    -1,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,    -1,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,   208,    -1,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,    -1,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,    -1,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,   145,   146,
     147,   148,   149,    -1,   151,    -1,   153,   154,   155,   156,
      -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,    -1,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,    -1,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,    -1,
      -1,   208,    -1,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,    -1,   246,
     247,   248,   249,   250,    -1,   252,   253,    -1,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
     267,   268,   269,   270,    -1,    -1,   273,   274,    -1,   276,
      -1,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,    -1,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
      -1,   378,    -1,   380,   381,   382,   383,   384,    -1,   386,
     387,    -1,    -1,   390,   391,   392,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,    -1,   412,   413,   414,   415,   416,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,    -1,    -1,   127,   128,
     129,   130,   131,    -1,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,   144,   145,   146,   147,   148,
     149,    -1,   151,    -1,   153,   154,   155,   156,    -1,   158,
      -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,
      -1,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
      -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,    -1,   246,   247,   248,
     249,   250,    -1,   252,   253,    -1,   255,    -1,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,   267,   268,
     269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,    -1,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,    -1,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
      -1,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,    -1,   378,
      -1,   380,   381,   382,   383,   384,    -1,   386,   387,    -1,
      -1,   390,   391,   392,   393,   394,    -1,   396,   397,   398,
     399,   400,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,    -1,   412,   413,   414,   415,   416,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,    -1,    -1,   127,   128,   129,   130,
     131,    -1,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,   144,   145,   146,   147,   148,   149,    -1,
     151,    -1,   153,   154,   155,   156,    -1,   158,    -1,   160,
      -1,    -1,    -1,   164,   165,   166,   167,    -1,   169,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,
     211,   212,   213,   214,    -1,    -1,   217,   218,    -1,   220,
      -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,    -1,   246,   247,   248,   249,   250,
      -1,   252,   253,    -1,   255,    -1,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,    -1,   268,   269,   270,
      -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,    -1,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,    -1,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,    -1,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,    -1,   378,    -1,   380,
     381,   382,   383,   384,    -1,   386,   387,    -1,    -1,   390,
     391,   392,   393,   394,    -1,   396,   397,   398,   399,   400,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
      -1,   412,   413,   414,   415,   416,   417,   418,    -1,   420,
      -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,    -1,    -1,   127,   128,   129,   130,   131,    -1,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,   144,   145,   146,   147,   148,   149,    -1,   151,    -1,
     153,   154,   155,   156,    -1,   158,    -1,   160,    -1,    -1,
      -1,   164,   165,   166,   167,    -1,   169,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,    -1,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,   190,   191,    -1,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,
     213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,    -1,
     223,   224,   225,    -1,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,    -1,   252,
     253,    -1,   255,    -1,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,    -1,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      35,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,    -1,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,   208,    -1,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,    -1,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,    -1,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    35,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,   145,   146,
     147,   148,   149,    -1,   151,    -1,   153,   154,   155,   156,
      -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,    -1,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,    -1,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,    -1,
      -1,   208,    -1,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,    -1,   246,
     247,   248,   249,   250,    -1,   252,   253,    -1,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,   276,
      -1,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,    -1,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
      -1,   378,    -1,   380,   381,   382,   383,   384,    -1,   386,
     387,    -1,    -1,   390,   391,   392,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,    -1,   412,   413,   414,   415,   416,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,    -1,    -1,   127,   128,
     129,   130,   131,    -1,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,   144,   145,   146,   147,   148,
     149,    -1,   151,    -1,   153,   154,   155,   156,    -1,   158,
      -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,
      -1,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
      -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,    -1,   246,   247,   248,
     249,   250,    -1,   252,   253,    -1,   255,    -1,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,    -1,   268,
     269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,    -1,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,    -1,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
      -1,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,    -1,   378,
      -1,   380,   381,   382,   383,   384,    -1,   386,   387,    -1,
      -1,   390,   391,   392,   393,   394,    -1,   396,   397,   398,
     399,   400,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,    -1,   412,   413,   414,   415,   416,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,    -1,    -1,   127,   128,   129,   130,
     131,    -1,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,   144,   145,   146,   147,   148,   149,    -1,
     151,    -1,   153,   154,   155,   156,    -1,   158,    -1,   160,
      -1,    -1,    -1,   164,   165,   166,   167,    -1,   169,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,
     211,   212,   213,   214,    -1,    -1,   217,   218,    -1,   220,
      -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,    -1,   246,   247,   248,   249,   250,
      -1,   252,   253,    -1,   255,    -1,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,    -1,   268,   269,   270,
      -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,    -1,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,    -1,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,    -1,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,    -1,   378,    -1,   380,
     381,   382,   383,   384,    -1,   386,   387,    -1,    -1,   390,
     391,   392,   393,   394,    -1,   396,   397,   398,   399,   400,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
      -1,   412,   413,   414,   415,   416,   417,   418,    -1,   420,
      -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,    -1,    -1,   127,   128,   129,   130,   131,    -1,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,   144,   145,   146,   147,   148,   149,    -1,   151,    -1,
     153,   154,   155,   156,    -1,   158,    -1,   160,    -1,    -1,
      -1,   164,   165,   166,   167,    -1,   169,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,    -1,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,   190,   191,    -1,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,
     213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,    -1,
     223,   224,   225,    -1,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,    -1,   252,
     253,    -1,   255,    -1,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,    -1,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,    -1,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,    -1,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,   208,    -1,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,    -1,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,    -1,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,   145,   146,
     147,   148,   149,    -1,   151,    -1,   153,   154,   155,   156,
      -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,    -1,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,    -1,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,    -1,
      -1,   208,    -1,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,    -1,   246,
     247,   248,   249,   250,    -1,   252,   253,    -1,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,   276,
      -1,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,    -1,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
      -1,   378,    -1,   380,   381,   382,   383,   384,    -1,   386,
     387,    -1,    -1,   390,   391,   392,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,    -1,   412,   413,   414,   415,   416,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,    -1,    -1,   127,   128,
     129,   130,   131,    -1,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,   144,   145,   146,   147,   148,
     149,    -1,   151,    -1,   153,   154,   155,   156,    -1,   158,
      -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,
      -1,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
      -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,    -1,   246,   247,   248,
     249,   250,    -1,   252,   253,    -1,   255,    -1,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,    -1,   268,
     269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,    -1,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,    -1,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
      -1,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,    -1,   378,
      -1,   380,   381,   382,   383,   384,    -1,   386,   387,    -1,
      -1,   390,   391,   392,   393,   394,    -1,   396,   397,   398,
     399,   400,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,    -1,   412,   413,   414,   415,   416,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,    -1,    -1,   127,   128,   129,   130,
     131,    -1,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,   144,   145,   146,   147,   148,   149,    -1,
     151,    -1,   153,   154,   155,   156,    -1,   158,    -1,   160,
      -1,    -1,    -1,   164,   165,   166,   167,    -1,   169,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,
     211,   212,   213,   214,    -1,    -1,   217,   218,    -1,   220,
      -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,    -1,   246,   247,   248,   249,   250,
      -1,   252,   253,    -1,   255,    -1,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,    -1,   268,   269,   270,
      -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,    -1,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,    -1,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,    -1,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,    -1,   378,    -1,   380,
     381,   382,   383,   384,    -1,   386,   387,    -1,    -1,   390,
     391,   392,   393,   394,    -1,   396,   397,   398,   399,   400,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
      -1,   412,   413,   414,   415,   416,   417,   418,    -1,   420,
      -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,    -1,    -1,   127,   128,   129,   130,   131,    -1,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,   144,   145,   146,   147,   148,   149,    -1,   151,    -1,
     153,   154,   155,   156,    -1,   158,    -1,   160,    -1,    -1,
      -1,   164,   165,   166,   167,    -1,   169,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,    -1,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,   190,   191,    -1,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,
     213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,    -1,
     223,   224,   225,    -1,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,    -1,   252,
     253,    -1,   255,    -1,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,    -1,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,    -1,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,    -1,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,   208,    -1,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,    -1,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,    -1,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,   145,   146,
     147,   148,   149,    -1,   151,    -1,   153,   154,   155,   156,
      -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,    -1,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,    -1,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,    -1,
      -1,   208,    -1,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,    -1,   246,
     247,   248,   249,   250,    -1,   252,   253,    -1,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,   276,
      -1,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,    -1,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
      -1,   378,    -1,   380,   381,   382,   383,   384,    -1,   386,
     387,    -1,    -1,   390,   391,   392,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,    -1,   412,   413,   414,   415,   416,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,    -1,    -1,   127,   128,
     129,   130,   131,    -1,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,   144,   145,   146,   147,   148,
     149,    -1,   151,    -1,   153,   154,   155,   156,    -1,   158,
      -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,
      -1,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
      -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,    -1,   246,   247,   248,
     249,   250,    -1,   252,   253,    -1,   255,    -1,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,    -1,   268,
     269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,    -1,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,    -1,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
      -1,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,    -1,   378,
      -1,   380,   381,   382,   383,   384,    -1,   386,   387,    -1,
      -1,   390,   391,   392,   393,   394,    -1,   396,   397,   398,
     399,   400,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,    -1,   412,   413,   414,   415,   416,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,    -1,    -1,   127,   128,   129,   130,
     131,    -1,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,   144,   145,   146,   147,   148,   149,    -1,
     151,    -1,   153,   154,   155,   156,    -1,   158,    -1,   160,
      -1,    -1,    -1,   164,   165,   166,   167,    -1,   169,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,
     211,   212,   213,   214,    -1,    -1,   217,   218,    -1,   220,
      -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,    -1,   246,   247,   248,   249,   250,
      -1,   252,   253,    -1,   255,    -1,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,    -1,   268,   269,   270,
      -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,    -1,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,    -1,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,    -1,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,    -1,   378,    -1,   380,
     381,   382,   383,   384,    -1,   386,   387,    -1,    -1,   390,
     391,   392,   393,   394,    -1,   396,   397,   398,   399,   400,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
      -1,   412,   413,   414,   415,   416,   417,   418,    -1,   420,
      -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,    -1,    -1,   127,   128,   129,   130,   131,    -1,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,   144,   145,   146,   147,   148,   149,    -1,   151,    -1,
     153,   154,   155,   156,    -1,   158,    -1,   160,    -1,    -1,
      -1,   164,   165,   166,   167,    -1,   169,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,    -1,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,   190,   191,    -1,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,
     213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,    -1,
     223,   224,   225,    -1,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,    -1,   252,
     253,    -1,   255,    -1,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,    -1,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,    -1,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      35,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,    -1,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,   208,    -1,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,    -1,    -1,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,    -1,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,   145,   146,
     147,   148,   149,    -1,   151,    -1,   153,   154,   155,   156,
      -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,    -1,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,    -1,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,    -1,
      -1,   208,    -1,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,    -1,   246,
     247,   248,   249,   250,    -1,   252,   253,    -1,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,   276,
      -1,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,    -1,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
      -1,   378,    -1,   380,   381,   382,   383,   384,    -1,   386,
     387,    -1,    -1,   390,   391,   392,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,    -1,   412,   413,   414,   415,   416,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,    -1,    -1,   127,   128,
     129,   130,   131,    -1,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,   144,   145,   146,   147,   148,
     149,    -1,   151,    -1,   153,   154,   155,   156,    -1,   158,
      -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,
      -1,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
      -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,    -1,   246,   247,   248,
     249,   250,    -1,   252,   253,    -1,   255,    -1,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,    -1,   268,
     269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,    -1,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,    -1,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
      -1,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,    -1,   378,
      -1,   380,   381,   382,   383,   384,    -1,   386,   387,    -1,
      -1,   390,   391,   392,   393,   394,    -1,   396,   397,   398,
     399,   400,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,    -1,   412,   413,   414,   415,   416,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,    -1,    -1,   127,   128,   129,   130,
     131,    -1,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,   144,   145,   146,   147,   148,   149,    -1,
     151,    -1,   153,   154,   155,   156,    -1,   158,    -1,   160,
      -1,    -1,    -1,   164,   165,   166,   167,    -1,   169,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,
     211,   212,   213,   214,    -1,    -1,   217,   218,    -1,   220,
      -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,    -1,   246,   247,   248,   249,   250,
      -1,   252,   253,    -1,   255,    -1,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,    -1,   268,   269,   270,
      -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,    -1,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,    -1,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,    -1,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,    -1,   378,    -1,   380,
     381,   382,   383,   384,    -1,   386,   387,    -1,    -1,   390,
     391,   392,   393,   394,    -1,   396,   397,   398,   399,   400,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
      -1,   412,   413,   414,   415,   416,   417,   418,    -1,   420,
      -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,    -1,    -1,   127,   128,   129,   130,   131,    -1,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,   144,   145,   146,   147,   148,   149,    -1,   151,    -1,
     153,   154,   155,   156,    -1,   158,    -1,   160,    -1,    -1,
      -1,   164,   165,   166,   167,    -1,   169,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,    -1,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,   190,   191,    -1,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,
     213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,    -1,
     223,   224,   225,    -1,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,    -1,   252,
     253,    -1,   255,    -1,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,    -1,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,    -1,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,    -1,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,   208,    -1,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,    -1,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,    -1,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,   145,   146,
     147,   148,   149,    -1,   151,    -1,   153,   154,   155,   156,
      -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,    -1,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,    -1,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,    -1,
      -1,   208,    -1,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,    -1,   246,
     247,   248,   249,   250,    -1,   252,   253,    -1,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,   276,
      -1,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,    -1,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
      -1,   378,    -1,   380,   381,   382,   383,   384,    -1,   386,
     387,    -1,    -1,   390,   391,   392,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,    -1,   412,   413,   414,   415,   416,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,    -1,    -1,   127,   128,
     129,   130,   131,    -1,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,   144,   145,   146,   147,   148,
     149,    -1,   151,    -1,   153,   154,   155,   156,    -1,   158,
      -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,
      -1,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
      -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,    -1,   246,   247,   248,
     249,   250,    -1,   252,   253,    -1,   255,    -1,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,    -1,   268,
     269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,
     279,   280,   281,   282,   283,   284,    -1,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,    -1,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,   310,   311,   312,    -1,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
      -1,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
      -1,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,    -1,   378,
      -1,   380,   381,   382,   383,   384,    -1,   386,   387,    -1,
      -1,   390,   391,   392,   393,   394,    -1,   396,   397,   398,
     399,   400,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,    -1,   412,   413,   414,   415,   416,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    -1,
      -1,    72,    -1,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,    -1,    -1,   127,   128,   129,   130,
     131,    -1,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,   144,    -1,   146,   147,   148,    -1,    -1,
     151,    -1,   153,   154,   155,   156,    -1,   158,    -1,   160,
     161,    -1,   163,   164,   165,   166,   167,    -1,   169,    -1,
      -1,    -1,   173,    -1,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,    -1,    -1,   217,    -1,   219,   220,
     221,    -1,   223,   224,   225,    -1,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,    -1,
      -1,   252,   253,   254,   255,    -1,    -1,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,    -1,   268,   269,   270,
      -1,    -1,   273,    -1,   275,   276,   277,    -1,   279,   280,
     281,   282,   283,   284,   285,   286,   287,    -1,   289,   290,
      -1,   292,   293,    -1,   295,   296,   297,    -1,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,    -1,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,    -1,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,    -1,    -1,   375,   376,    -1,   378,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,    -1,    -1,   390,
     391,    -1,   393,    -1,    -1,   396,   397,   398,   399,   400,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
      -1,   412,   413,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   448,   449,   450,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    -1,    -1,    72,    -1,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,    -1,   146,
     147,   148,    -1,    -1,   151,    -1,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,    -1,   163,   164,   165,   166,
     167,    -1,   169,    -1,    -1,    -1,   173,    -1,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,    -1,
     217,    -1,   219,   220,   221,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,    -1,    -1,   252,   253,   254,   255,    -1,
      -1,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,    -1,   275,   276,
     277,    -1,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,    -1,   292,   293,    -1,   295,   296,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,    -1,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,    -1,    -1,   375,   376,
      -1,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,    -1,    -1,   390,   391,    -1,   393,    -1,    -1,   396,
     397,   398,   399,   400,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,    -1,   412,   413,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   448,   449,   450
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    18,    28,    30,    31,    46,    66,    77,    88,    90,
     107,   130,   136,   144,   146,   224,   292,   295,   323,   331,
     343,   350,   354,   364,   377,   412,   417,   430,   453,   467,
     475,   476,   477,   478,   489,   490,   492,   496,   510,   511,
     513,   515,   522,   524,   570,   576,   577,   594,   595,   596,
     597,   598,   599,   636,   753,   756,   759,   766,   767,   768,
     775,   779,   785,   787,   792,   796,   797,   800,   802,   804,
     390,   433,   523,   188,   337,   344,   377,   423,   523,   523,
      49,   467,   589,   167,   225,   271,   337,   381,   383,   404,
     407,   568,   765,     3,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    37,    38,    40,    41,
      42,    44,    45,    46,    47,    48,    50,    51,    53,    54,
      55,    56,    57,    60,    61,    62,    63,    64,    66,    67,
      68,    69,    70,    74,    75,    76,    77,    78,    80,    81,
      82,    84,    85,    86,    87,    88,    89,    92,    93,    94,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   112,
     114,   115,   116,   117,   118,   119,   121,   122,   123,   124,
     127,   128,   129,   130,   131,   133,   134,   135,   137,   138,
     139,   141,   142,   143,   144,   145,   146,   147,   148,   149,
     151,   153,   154,   155,   156,   158,   160,   164,   165,   166,
     167,   169,   170,   172,   173,   175,   176,   177,   178,   179,
     181,   182,   183,   184,   186,   187,   188,   189,   190,   191,
     193,   195,   196,   197,   198,   199,   200,   201,   203,   205,
     208,   210,   211,   212,   213,   214,   217,   218,   220,   223,
     224,   225,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   246,
     247,   248,   249,   250,   252,   253,   255,   257,   258,   259,
     260,   261,   262,   264,   265,   268,   269,   270,   273,   274,
     276,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   327,   328,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   344,   345,   346,   347,   348,   350,   351,   352,   353,
     354,   356,   357,   358,   359,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   375,   376,
     378,   380,   381,   382,   383,   384,   386,   387,   390,   391,
     392,   393,   394,   396,   397,   398,   399,   400,   401,   402,
     405,   406,   407,   408,   409,   412,   413,   414,   415,   416,
     417,   418,   420,   422,   423,   424,   425,   428,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   740,   746,
     807,   808,    20,    72,    87,   139,   147,   159,   188,   234,
     290,   304,   335,   337,   344,   347,   366,   377,   384,   393,
     423,   571,   572,   575,   523,   295,   740,    90,   421,   467,
     492,   576,   594,   771,   775,   792,   804,     5,   745,   786,
     746,   740,    26,   386,   390,   746,   798,   799,   801,   523,
      26,   125,   606,   607,   225,   337,   348,   386,   780,   781,
     801,    26,   386,   390,   801,   523,   267,   647,   738,   746,
     163,   467,   789,   467,   311,   600,   601,   740,   600,   595,
     596,   599,     0,   470,   116,   198,   409,   140,   202,   272,
     403,   608,   609,   595,   597,   598,   471,   421,   769,   179,
     738,   740,   179,   738,   179,   647,   179,   738,   492,   576,
     594,   755,   792,   738,   381,   383,   381,   383,   321,   179,
     746,   311,   344,   377,   423,   188,    26,   740,   236,   393,
     104,   377,   423,   340,   179,   573,   746,   748,   179,   739,
     740,   179,   740,   467,   514,   568,   771,     3,    43,    49,
      72,    79,    91,    98,   161,   163,   180,   194,   206,   207,
     209,   219,   221,   245,   254,   275,   277,   329,   355,   379,
     417,   421,   772,   774,   775,   777,   778,   807,   808,   809,
     769,   456,   467,   467,   754,   450,   208,   469,   266,     3,
       4,     6,     7,     8,     9,    10,    48,    50,    51,    58,
      59,    62,    63,    70,    72,    95,    96,    97,    98,    99,
     100,   101,   108,   109,   111,   129,   145,   149,   150,   155,
     170,   200,   201,   203,   218,   226,   227,   244,   246,   251,
     256,   257,   259,   268,   278,   291,   308,   333,   349,   358,
     373,   386,   387,   392,   394,   395,   410,   418,   451,   458,
     459,   460,   467,   472,   595,   662,   665,   668,   669,   670,
     672,   673,   674,   675,   677,   678,   682,   684,   685,   686,
     688,   701,   705,   723,   728,   735,   736,   742,   743,   744,
     745,   746,   747,   807,   809,   734,   735,   780,   745,   780,
     450,   162,   388,   456,   450,   208,   467,   738,   460,   465,
     469,   729,   731,     3,   161,   163,   421,   775,   788,   790,
     161,   791,   682,   709,   600,   471,   467,   750,   468,   468,
     477,   162,   204,   647,   793,    26,   125,   605,   605,    53,
     605,   152,   157,   222,   263,   614,   616,   617,   629,   631,
     632,   633,   608,   609,   467,   738,   145,    22,    28,   130,
     270,   319,   323,   350,   414,   483,   486,   487,   319,   145,
      35,    54,   103,   187,   235,   238,   249,   280,   319,   324,
     344,   350,   364,   486,   516,   519,   145,   319,   350,   486,
     145,   319,   350,   486,   468,   467,   558,   568,   251,   757,
     423,   179,   738,   179,   738,   806,   738,    79,   762,   434,
      80,   122,   283,   382,   145,    56,   325,   471,   574,   469,
     749,   145,   471,   574,   145,   266,   709,   377,   468,   471,
       4,   150,   266,   395,   458,   459,   518,   521,   744,   745,
     770,   772,   773,   776,   771,   518,   776,   782,   784,   682,
     710,   711,   747,   751,     3,    48,    50,    51,    62,    63,
     108,   109,   155,   200,   201,   203,   244,   246,   259,   308,
     351,   358,   386,   387,   418,   659,   661,   663,   665,   667,
     669,   670,   671,   673,   674,   677,   678,   712,   747,   807,
      35,   220,   746,   467,   732,   420,   676,   682,   727,   467,
     676,   676,   467,   157,   467,   467,   467,   664,   664,   294,
     595,   467,   467,   666,   467,   467,   467,   467,    62,    63,
     676,   682,   467,   664,   467,   467,   467,   467,   467,   432,
     453,   467,   679,   467,   679,   467,   467,   682,   682,   682,
     595,   682,   709,   732,   731,   745,   467,   467,   745,     3,
       8,    11,    15,    16,    17,    32,    35,    40,    47,    71,
     180,   185,   206,   207,   221,   251,   254,   268,   271,   355,
     451,   454,   455,   456,   458,   459,   460,   461,   462,   463,
     703,   704,   705,   707,   431,   689,   277,   682,   204,   471,
     602,   467,   745,   731,   602,     3,   111,   225,   518,   678,
     745,   783,    94,   111,   784,   111,   784,   220,   738,   682,
     730,     3,    26,    30,    31,    32,    33,    34,    35,    36,
      39,    52,    58,    59,    65,    71,    73,    83,    90,    95,
      96,    97,    99,   100,   101,   111,   113,   120,   125,   126,
     132,   136,   140,   150,   152,   157,   159,   162,   168,   171,
     174,   185,   192,   202,   204,   215,   216,   222,   226,   227,
     251,   256,   263,   266,   267,   271,   272,   288,   298,   313,
     326,   343,   349,   360,   374,   377,   385,   388,   389,   395,
     403,   404,   410,   411,   419,   426,   427,   429,   430,   460,
     741,   752,   807,   808,   809,   810,   729,   468,   471,   769,
     468,   471,   601,   739,    35,   793,   494,   738,    35,   746,
     350,   597,   597,   610,   611,   682,   597,   154,   248,   623,
     210,   249,   307,   353,   409,    26,   618,   682,   458,   459,
     619,   620,   682,   684,   629,   630,   617,   616,   614,   615,
     157,   632,   261,   634,   614,   629,   709,   750,   738,    65,
      73,    83,   159,   179,   298,   404,   539,   549,   564,   746,
      73,    83,   491,    83,   491,   467,   388,   467,   537,   231,
     407,   537,    83,   471,   388,   738,   661,   518,    53,   520,
     518,   518,   103,   235,   238,    53,   388,   430,   453,   517,
     242,   337,   517,   519,   647,    83,   388,   491,   337,   738,
     388,   337,   388,   557,   562,   746,   430,   587,   311,   423,
     145,    90,   511,   524,   758,   759,   802,   738,   251,   512,
     516,   251,   467,   558,    35,   558,   179,   552,   746,   763,
     573,   748,   741,   469,   739,   740,   740,   748,   468,   179,
     738,   806,   771,   777,     4,   744,     4,   744,   471,   468,
     471,    13,    14,   661,    34,   660,   106,   177,   237,   240,
     341,   448,   467,   680,   681,   468,   471,   664,   749,   755,
     709,   729,   467,   426,   724,   725,   682,   709,   467,   744,
     744,   709,     3,   106,   177,   237,   240,   341,   448,   713,
     714,   745,   744,   709,   709,   744,   744,   676,   676,   682,
       8,    15,    16,    17,   454,   455,   456,   458,   459,   460,
     461,   462,   463,   703,   708,   746,   682,   715,   458,   459,
     467,   683,   684,   705,   717,   468,   709,   682,   709,   718,
     386,   386,   744,   744,   682,    52,   162,   216,   389,   682,
     709,   721,   468,   471,   744,   472,   744,   680,   659,   682,
     682,   682,   682,   752,   386,    39,   374,   733,   748,   682,
     467,   595,   722,   125,   150,   251,   256,   261,   395,   405,
     682,   256,   467,   682,   388,    47,   180,   185,   221,   355,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
      26,    33,   360,   702,   171,   153,   690,   333,   467,   701,
     167,   225,   377,   381,   383,   407,   603,   738,   736,   162,
     637,    26,   125,   419,   460,   468,   710,   637,   467,   745,
     468,   466,   473,   738,   788,   738,   796,   682,   468,   467,
     411,   795,   111,   279,   467,   493,   594,    35,   746,   467,
     498,   507,   509,   746,   471,    36,   120,   411,   612,   333,
     334,   458,   459,   620,   622,   684,   353,   210,   267,   471,
       4,   621,   744,   621,   333,   334,   622,   737,   738,   255,
     357,   635,   630,   615,   468,   319,   486,   467,   179,   549,
     740,   210,   251,   210,   411,   467,   542,   659,   740,   746,
     179,   740,   179,   746,    22,   130,   350,   482,   485,   532,
     547,   752,   740,   541,   561,   752,   740,   483,   740,   319,
     350,   486,   516,   518,   748,   740,   518,   748,   740,   518,
     319,   350,   486,   740,   740,   740,   740,   319,   350,   486,
     740,   740,   303,   583,   468,   471,   264,   162,   388,   578,
     423,   738,   746,   568,   467,   145,   145,   221,   539,   549,
     553,   556,   565,   567,   746,   430,   432,   544,   144,   594,
     430,   764,   251,   266,   574,   741,   574,   266,   574,   251,
      35,   782,   711,   682,   682,    34,   660,   465,   465,   388,
     388,   388,   467,   388,   744,   659,   664,   468,   709,   682,
     132,   725,   726,    35,   468,   682,   468,   468,   468,   468,
     162,   468,   468,   468,   468,   468,   471,   468,   469,   288,
     716,   468,   683,   683,   682,    11,    15,    16,    17,   185,
     206,   268,   454,   455,   456,   458,   459,   460,   461,   462,
     463,   705,   683,   468,   468,   157,   162,   719,   720,   468,
     450,   450,   468,   468,    35,   721,   709,   721,   721,   162,
     468,   732,   682,   468,   468,   468,   450,   683,   683,   138,
     709,   162,   125,   150,   256,   261,   395,   405,   467,   138,
     708,   682,   374,   733,   682,   722,   682,   388,   467,   595,
     467,   467,   276,   694,   381,   383,   381,   383,   738,   377,
     604,   604,   604,   215,   334,   467,   595,   638,   639,   640,
     647,   650,   685,   687,   688,   742,   746,   427,   655,   710,
     710,   711,   468,   471,   608,   609,   655,   744,   680,   682,
     730,   750,   755,   638,   427,   794,   417,   376,   410,   502,
     497,   506,   746,   266,   499,   746,   503,   509,   471,   637,
     456,   732,   611,   268,   703,   706,   452,   613,     4,   744,
     622,   267,   409,   619,   471,   230,   388,   682,   251,   564,
     467,   145,   467,   542,   188,   562,   525,   270,   535,   525,
      22,   130,   323,   324,   350,   479,   480,   481,   487,   488,
     145,   574,   145,   574,   532,   547,   532,   468,   471,   528,
     745,   468,   471,   456,   469,   388,   337,    83,   388,   491,
     337,   388,   388,   388,   337,   367,   368,   592,   745,   557,
     583,   738,   558,   757,   377,   562,   738,   738,   806,   738,
     468,   471,   264,   537,   264,   266,   536,   740,   430,   805,
     537,    35,   145,   738,   748,   145,   465,   744,   466,   744,
     177,   237,   681,   237,   681,   681,   744,   240,   468,   468,
     385,   682,   136,   659,   468,   682,   682,   708,   682,   719,
     659,   683,   683,   683,   683,   125,   251,   261,   683,   683,
     683,   683,   683,   683,   683,   683,   683,   683,   682,   682,
     720,   719,   679,   679,   659,   468,   468,   468,   709,   468,
     472,   745,   682,    32,    32,   682,   468,   682,   162,   467,
     712,   682,   468,   138,   683,   683,   138,   138,   682,   682,
     609,   427,   467,   695,   746,   604,   604,   604,   604,   738,
     738,   738,   595,   650,   746,   162,   595,   639,   640,    35,
     641,   642,   746,   471,    91,   163,   194,   209,   219,   245,
     329,   644,   642,    35,   641,   643,   746,   453,   654,   467,
     731,   682,   171,   624,   608,   608,   608,   419,   468,   624,
     468,   466,   468,   682,   326,   501,   416,   468,   471,   732,
      81,   501,   468,   471,   498,   794,   682,   467,   613,   154,
     214,   267,   738,   740,   468,   145,   562,   549,   562,   525,
     552,   468,   113,   192,   249,   251,   548,   467,   559,   166,
     111,   178,   251,   537,   517,   104,   111,   166,   251,   366,
     369,   519,   537,   350,   481,   398,   740,   746,   485,   561,
     250,   268,   351,   458,   459,   518,   526,   563,   659,   706,
     745,   747,   810,   752,   740,   740,   740,   740,   740,   740,
     740,   740,   740,   740,   517,   592,   467,   764,   179,   738,
     468,   512,   467,    35,   546,   544,   553,    77,   514,   104,
     249,   594,   552,   411,   761,   574,   806,   744,   466,   466,
     468,   682,   468,   468,   720,   162,   125,   261,   467,   468,
     680,   682,   682,   682,   712,   468,   682,    32,    32,   682,
     682,   138,   468,   468,   682,   696,   746,   738,   738,   738,
     738,   642,   643,   731,   467,   468,   746,   467,   639,   209,
     275,   645,   639,   645,   209,   644,   645,   209,   379,   648,
     467,   746,   467,   273,   710,    53,   174,   628,   468,   468,
     468,   711,   745,   628,   745,   735,   594,   279,   594,   497,
     266,   467,   495,   456,   509,   501,   708,   525,   549,   468,
     468,   430,   555,   114,   181,   190,   113,   413,   532,   550,
      65,    71,    83,   111,   113,   166,   192,   251,   256,   298,
     313,   404,   530,   531,   543,    29,    53,   569,   179,   256,
     518,   682,   569,   256,   458,   459,   521,   746,   659,   574,
     574,   747,   749,   456,   388,   388,   467,   584,   588,   411,
     579,   581,   562,    35,   251,   467,   764,   556,   144,   594,
     142,   186,   536,   116,   130,   297,   805,   104,   430,   803,
     266,   746,   760,   467,    35,   466,   683,   162,   467,   712,
     468,   682,   682,   682,   468,   285,   697,   651,   652,   687,
     641,   467,   739,   639,   266,   411,   646,   639,   209,   639,
     742,   656,   657,   746,   467,   656,   746,   608,   467,   625,
     626,   627,   682,   682,   429,   691,   608,   691,   502,    83,
     467,   500,   508,   687,   746,   126,   682,   468,   313,   555,
     467,   545,   525,   468,   471,   467,   748,   740,   683,   569,
     114,   181,   113,   256,   210,   738,   555,   111,    35,   145,
      71,   658,   749,   462,   526,   740,   740,   586,   593,   752,
      49,    92,   117,   134,   138,   158,   161,   175,   256,   264,
     305,   590,   517,   118,   468,   594,   145,    35,   468,   740,
     805,    26,    76,    84,   112,   178,   189,   366,   369,   540,
     540,   334,   334,    57,    65,   225,   738,   508,   683,   712,
     468,    53,   608,   468,   471,    35,   653,   739,   468,   682,
     467,   639,   646,   467,   468,   471,   659,   656,   468,   468,
     468,   471,   692,   693,   746,   468,   416,   740,   682,   468,
     471,    71,   504,   504,   252,   409,   738,   525,   551,   554,
     752,   532,   682,   251,   531,    35,   555,   558,   178,   748,
     411,   484,   462,   398,   468,   471,   460,   467,   518,   585,
     776,    35,   582,   745,   582,   251,   256,   305,   582,   582,
     584,   745,   764,   803,   738,   594,   544,   514,    65,   269,
      65,   761,   468,   468,   709,   306,   334,   698,   654,   651,
     467,   468,   739,   709,   657,   658,   468,   626,   471,    35,
     594,   468,   655,   500,   748,   505,   748,   505,   350,   558,
     468,   471,   456,   468,   178,   233,   566,   467,   527,   682,
     398,   586,   580,   591,   776,   745,   745,   256,   562,   460,
     562,   745,   745,    35,   467,   803,   536,   805,   269,   269,
     467,   764,    47,    94,   400,   682,   699,   700,   699,   468,
     656,   468,   468,   693,   695,   504,   612,   612,   507,   566,
     554,   526,   249,   538,   527,   163,   284,   356,   266,   533,
     534,   560,   516,   468,   471,   562,   594,   508,   655,   700,
     333,   156,   293,   156,   293,   468,   320,   649,   505,   613,
     613,   655,   534,   190,   116,   409,   266,   560,   266,   533,
     468,   591,   803,   468,    32,   467,   612,   525,    56,   249,
     325,   350,   529,   529,   764,   700,   682,   613,    21,   111,
     256,   655,   468
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 449 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 465 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 477 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 34:
#line 515 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 35:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 36:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 37:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 38:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 39:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 40:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 44:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 45:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 46:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 47:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 48:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 49:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 50:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 51:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 52:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 53:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 54:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 55:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 56:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 57:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 58:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 82:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 83:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 84:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 85:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 86:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 87:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 88:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 89:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 90:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 91:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 92:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 93:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 94:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 95:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 96:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 97:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 98:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 99:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 100:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 101:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 102:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 111:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 112:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 113:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 114:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 115:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 116:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 117:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 118:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 119:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 120:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 121:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 122:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 123:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 124:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 125:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 126:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 127:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 128:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 129:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 130:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 131:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 132:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 133:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 134:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 135:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 136:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 137:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 138:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 139:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 140:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 141:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 142:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 143:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 144:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 145:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 146:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 147:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 148:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 149:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 150:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 151:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 152:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 153:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 154:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 155:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 156:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 157:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 158:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 159:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 160:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 161:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 162:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 163:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 164:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 165:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 166:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 167:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 168:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 169:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 170:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 171:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 172:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 173:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 174:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 175:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 176:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 177:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 178:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 179:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 180:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 181:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 182:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 183:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 184:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 185:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 186:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 187:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 188:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 189:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 190:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 191:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 192:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 193:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 194:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 195:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 196:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 197:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 198:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 199:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 200:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 201:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 202:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 203:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 204:
#line 41 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 205:
#line 43 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 206:
#line 69 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 207:
#line 70 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 208:
#line 71 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 209:
#line 72 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 210:
#line 73 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 211:
#line 74 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 212:
#line 78 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 213:
#line 79 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 214:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 215:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 216:
#line 90 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 217:
#line 91 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 218:
#line 92 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 219:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 220:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 221:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 222:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 223:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 224:
#line 125 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 225:
#line 132 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 226:
#line 139 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 227:
#line 149 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 228:
#line 159 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 229:
#line 171 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 230:
#line 180 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 231:
#line 189 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 232:
#line 208 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 233:
#line 214 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 234:
#line 220 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 235:
#line 222 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 236:
#line 224 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 237:
#line 226 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 238:
#line 228 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 239:
#line 233 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 240:
#line 234 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 241:
#line 238 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 242:
#line 239 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 243:
#line 240 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 244:
#line 241 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 245:
#line 246 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 246:
#line 250 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 247:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 248:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 249:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 250:
#line 268 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 251:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 252:
#line 270 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 253:
#line 271 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 254:
#line 272 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 255:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 256:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 257:
#line 275 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 258:
#line 281 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 259:
#line 282 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 260:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 261:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 262:
#line 299 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 263:
#line 306 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 264:
#line 313 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 265:
#line 324 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 266:
#line 325 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 267:
#line 326 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 268:
#line 327 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 269:
#line 331 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 270:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 271:
#line 337 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 272:
#line 338 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 273:
#line 343 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 274:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 275:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 276:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 277:
#line 351 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 278:
#line 352 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 279:
#line 353 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 280:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 281:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 282:
#line 386 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 283:
#line 392 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 284:
#line 393 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 285:
#line 397 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 286:
#line 401 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 287:
#line 402 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 288:
#line 403 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 289:
#line 408 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 290:
#line 412 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 291:
#line 419 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 292:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 293:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 294:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 295:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 296:
#line 438 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 297:
#line 439 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 298:
#line 444 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 299:
#line 445 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 300:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 301:
#line 455 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 302:
#line 459 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 303:
#line 463 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 304:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 305:
#line 475 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 306:
#line 476 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 307:
#line 480 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 308:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 309:
#line 488 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 310:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 311:
#line 513 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 312:
#line 526 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 313:
#line 541 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 314:
#line 554 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 315:
#line 569 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 316:
#line 591 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 317:
#line 595 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 318:
#line 602 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 319:
#line 606 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 320:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 321:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 322:
#line 626 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 323:
#line 635 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 324:
#line 636 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 325:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 326:
#line 638 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 327:
#line 640 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 328:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 329:
#line 653 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 330:
#line 654 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 331:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 332:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 333:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 334:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 335:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 336:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 337:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 338:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 339:
#line 73 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 340:
#line 74 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 341:
#line 75 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 342:
#line 76 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 343:
#line 77 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 344:
#line 78 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 345:
#line 79 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 346:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 347:
#line 81 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 348:
#line 82 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 349:
#line 83 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 350:
#line 84 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 351:
#line 85 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 352:
#line 90 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 353:
#line 91 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 354:
#line 92 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 355:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 356:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 357:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 358:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 359:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 360:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 361:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 362:
#line 108 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 363:
#line 109 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 364:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 365:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 366:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 367:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 368:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 369:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 370:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 371:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 372:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 373:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 374:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 375:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 376:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 377:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 378:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 379:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 380:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 381:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 382:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 383:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 384:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 385:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 386:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 387:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 388:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 389:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 390:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 391:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 392:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 393:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 394:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 395:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 396:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 397:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 398:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 399:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 400:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 401:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 402:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 403:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 404:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 405:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 406:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 407:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 408:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 409:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 410:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 411:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 412:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 413:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 414:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 415:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 418:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 419:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 420:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 421:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 422:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 423:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 424:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 425:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 426:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 427:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 428:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 429:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 430:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (9)].list);
					n->intoClause = (yyvsp[(4) - (9)].into);
					n->fromClause = (yyvsp[(5) - (9)].list);
					n->whereClause = (yyvsp[(6) - (9)].node);
					n->groupClause = (yyvsp[(7) - (9)].list);
					n->havingClause = (yyvsp[(8) - (9)].node);
					n->windowClause = (yyvsp[(9) - (9)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 431:
#line 172 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (9)].list);
					n->targetList = (yyvsp[(3) - (9)].list);
					n->intoClause = (yyvsp[(4) - (9)].into);
					n->fromClause = (yyvsp[(5) - (9)].list);
					n->whereClause = (yyvsp[(6) - (9)].node);
					n->groupClause = (yyvsp[(7) - (9)].list);
					n->havingClause = (yyvsp[(8) - (9)].node);
					n->windowClause = (yyvsp[(9) - (9)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 432:
#line 184 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 433:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 434:
#line 205 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 435:
#line 209 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 436:
#line 213 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 437:
#line 230 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 438:
#line 237 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 439:
#line 244 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 440:
#line 253 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 441:
#line 254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 442:
#line 258 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 443:
#line 270 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 444:
#line 280 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 445:
#line 289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 446:
#line 294 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 447:
#line 299 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 448:
#line 304 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 449:
#line 309 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 450:
#line 317 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 451:
#line 325 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 452:
#line 330 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 453:
#line 335 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 454:
#line 341 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 455:
#line 342 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 456:
#line 346 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 457:
#line 347 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 458:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 459:
#line 355 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 460:
#line 356 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 461:
#line 360 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 462:
#line 361 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 463:
#line 365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 464:
#line 366 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 465:
#line 370 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 466:
#line 374 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 467:
#line 375 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 468:
#line 379 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 469:
#line 388 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 470:
#line 398 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 471:
#line 399 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 472:
#line 400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 473:
#line 403 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 474:
#line 404 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = SORTBY_NULLS_LAST; ;}
    break;

  case 475:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 476:
#line 409 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 477:
#line 410 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 478:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 479:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 480:
#line 416 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 481:
#line 417 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 482:
#line 422 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 483:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 484:
#line 440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 485:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 486:
#line 447 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 487:
#line 450 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 488:
#line 454 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 489:
#line 456 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 490:
#line 463 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 491:
#line 483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 492:
#line 485 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 493:
#line 487 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 494:
#line 491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 495:
#line 492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 496:
#line 496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 497:
#line 497 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 498:
#line 500 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 499:
#line 501 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 500:
#line 526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 501:
#line 527 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 502:
#line 531 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 503:
#line 532 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 504:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 505:
#line 537 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 506:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 507:
#line 554 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 508:
#line 555 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 509:
#line 559 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 510:
#line 560 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 511:
#line 564 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 512:
#line 565 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 513:
#line 569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 514:
#line 570 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 515:
#line 575 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 516:
#line 585 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 517:
#line 586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 518:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 519:
#line 588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 520:
#line 592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 521:
#line 593 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 522:
#line 598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 523:
#line 599 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 524:
#line 600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 525:
#line 610 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 526:
#line 616 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 527:
#line 633 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 528:
#line 634 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 529:
#line 638 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 530:
#line 639 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 531:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (2)].range)->alias = (yyvsp[(2) - (2)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (2)].range);
				;}
    break;

  case 532:
#line 651 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeTableSample *n = (PGRangeTableSample *) (yyvsp[(3) - (3)].node);
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					/* relation_expr goes inside the PGRangeTableSample node */
					n->relation = (PGNode *) (yyvsp[(1) - (3)].range);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 533:
#line 659 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (2)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (2)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (2)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 534:
#line 666 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 535:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (2)].node);
					n->alias = (yyvsp[(2) - (2)].alias);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[(2) - (2)].alias) == NULL)
					{
						if (IsA((yyvsp[(1) - (2)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(1) - (2)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (2)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (2)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 536:
#line 709 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					/* same comment as above */
					if ((yyvsp[(3) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(2) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(2) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 537:
#line 734 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 538:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 539:
#line 764 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 540:
#line 768 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					(yyval.jexpr) = n;
				;}
    break;

  case 541:
#line 780 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					(yyval.jexpr) = n;
				;}
    break;

  case 542:
#line 793 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					(yyval.jexpr) = n;
				;}
    break;

  case 543:
#line 807 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					(yyval.jexpr) = n;
				;}
    break;

  case 544:
#line 818 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					(yyval.jexpr) = n;
				;}
    break;

  case 545:
#line 833 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 546:
#line 839 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 547:
#line 844 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 548:
#line 850 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 549:
#line 856 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 550:
#line 857 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 551:
#line 866 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 552:
#line 870 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 553:
#line 874 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 554:
#line 880 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 555:
#line 886 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 556:
#line 891 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 557:
#line 892 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 558:
#line 893 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 559:
#line 894 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 560:
#line 898 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 561:
#line 899 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 562:
#line 911 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 563:
#line 912 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 564:
#line 918 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 565:
#line 925 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 566:
#line 932 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 567:
#line 939 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 568:
#line 962 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeTableSample *n = makeNode(PGRangeTableSample);
					/* n->relation will be filled in later */
					n->method = (yyvsp[(2) - (6)].list);
					n->args = (yyvsp[(4) - (6)].list);
					n->repeatable = (yyvsp[(6) - (6)].node);
					n->location = (yylsp[(2) - (6)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 569:
#line 974 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].node); ;}
    break;

  case 570:
#line 975 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 571:
#line 991 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 572:
#line 1001 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 573:
#line 1013 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 574:
#line 1017 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 575:
#line 1018 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 576:
#line 1021 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 577:
#line 1022 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 578:
#line 1025 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 579:
#line 1026 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 580:
#line 1031 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 581:
#line 1032 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 582:
#line 1038 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 583:
#line 1042 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 584:
#line 1048 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 585:
#line 1069 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 586:
#line 1076 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 587:
#line 1089 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 588:
#line 1094 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 589:
#line 1101 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 590:
#line 1106 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 591:
#line 1112 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 592:
#line 1117 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 593:
#line 1126 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 594:
#line 1128 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 595:
#line 1130 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 596:
#line 1134 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 597:
#line 1135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 598:
#line 1136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 599:
#line 1137 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 600:
#line 1138 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 601:
#line 1140 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 602:
#line 1145 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 603:
#line 1164 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 604:
#line 1165 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 605:
#line 1166 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 606:
#line 1167 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 607:
#line 1179 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 608:
#line 1185 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(2) - (3)].list)));
					(yyval.typnam)->typmods = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 609:
#line 1192 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 610:
#line 1193 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 611:
#line 1200 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 612:
#line 1205 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 613:
#line 1210 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 614:
#line 1215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 615:
#line 1220 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 616:
#line 1225 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 617:
#line 1230 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 618:
#line 1235 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 619:
#line 1241 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 620:
#line 1247 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 621:
#line 1253 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 622:
#line 1260 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 623:
#line 1281 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
				;}
    break;

  case 624:
#line 1291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 625:
#line 1295 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 626:
#line 1303 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 627:
#line 1307 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 628:
#line 1315 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 629:
#line 1327 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 630:
#line 1348 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 631:
#line 1352 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 632:
#line 1358 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 633:
#line 1362 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 634:
#line 1375 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 635:
#line 1383 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 636:
#line 1393 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 637:
#line 1395 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 638:
#line 1397 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 639:
#line 1399 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 640:
#line 1401 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 641:
#line 1403 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 642:
#line 1407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 643:
#line 1408 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 644:
#line 1416 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 645:
#line 1425 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 646:
#line 1433 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 647:
#line 1442 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 648:
#line 1453 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 649:
#line 1460 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 650:
#line 1461 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 651:
#line 1462 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 652:
#line 1467 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 653:
#line 1469 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 654:
#line 1471 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 655:
#line 1473 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 656:
#line 1475 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 657:
#line 1477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 658:
#line 1479 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 659:
#line 1484 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 660:
#line 1489 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 661:
#line 1495 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(DAY) |
												INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 662:
#line 1503 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 663:
#line 1508 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 664:
#line 1515 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 665:
#line 1521 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 666:
#line 1526 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)])));
				;}
    break;

  case 667:
#line 1530 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (4)])),
									makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 668:
#line 1565 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 669:
#line 1567 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 670:
#line 1569 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 671:
#line 1577 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 672:
#line 1592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 673:
#line 1594 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 674:
#line 1596 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 675:
#line 1598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 676:
#line 1600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 677:
#line 1602 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 678:
#line 1604 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 679:
#line 1606 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 680:
#line 1608 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 681:
#line 1610 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 682:
#line 1612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 683:
#line 1614 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 684:
#line 1616 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 685:
#line 1618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 686:
#line 1621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 687:
#line 1623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 688:
#line 1625 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 689:
#line 1628 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 690:
#line 1630 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 691:
#line 1632 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 692:
#line 1634 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 693:
#line 1637 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 694:
#line 1642 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 695:
#line 1650 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 696:
#line 1655 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 697:
#line 1663 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 698:
#line 1668 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 699:
#line 1676 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 700:
#line 1681 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 701:
#line 1690 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 702:
#line 1698 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 703:
#line 1706 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 704:
#line 1714 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 705:
#line 1732 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 706:
#line 1740 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 707:
#line 1748 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 708:
#line 1756 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 709:
#line 1764 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 710:
#line 1772 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 711:
#line 1788 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 712:
#line 1796 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 713:
#line 1804 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 714:
#line 1812 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 715:
#line 1820 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 716:
#line 1828 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 717:
#line 1836 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 718:
#line 1840 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 719:
#line 1844 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 720:
#line 1848 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 721:
#line 1852 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 722:
#line 1860 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 723:
#line 1868 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 724:
#line 1876 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 725:
#line 1884 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 726:
#line 1904 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 727:
#line 1926 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 728:
#line 1937 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 729:
#line 1944 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 730:
#line 1969 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 731:
#line 1971 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 732:
#line 1973 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 733:
#line 1975 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 734:
#line 1977 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 735:
#line 1979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 736:
#line 1981 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 737:
#line 1983 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 738:
#line 1985 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 739:
#line 1987 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 740:
#line 1989 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 741:
#line 1991 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 742:
#line 1993 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 743:
#line 1995 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 744:
#line 1997 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 745:
#line 1999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 746:
#line 2001 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 747:
#line 2003 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 748:
#line 2005 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 749:
#line 2007 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 750:
#line 2011 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 751:
#line 2015 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 752:
#line 2019 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 753:
#line 2032 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 754:
#line 2033 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 755:
#line 2035 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 756:
#line 2047 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 757:
#line 2062 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 758:
#line 2074 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 759:
#line 2076 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 760:
#line 2078 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 761:
#line 2089 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 762:
#line 2113 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 763:
#line 2126 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 764:
#line 2130 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 765:
#line 2136 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 766:
#line 2143 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 767:
#line 2150 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 768:
#line 2160 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 769:
#line 2167 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 770:
#line 2195 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 771:
#line 2230 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 772:
#line 2240 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 773:
#line 2241 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 774:
#line 2249 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 775:
#line 2255 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 776:
#line 2259 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 777:
#line 2263 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 778:
#line 2267 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 779:
#line 2271 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 780:
#line 2275 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 781:
#line 2279 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 782:
#line 2283 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 783:
#line 2287 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 784:
#line 2291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 785:
#line 2295 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 786:
#line 2299 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 787:
#line 2303 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 788:
#line 2307 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 789:
#line 2311 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 790:
#line 2315 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); ;}
    break;

  case 791:
#line 2317 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 792:
#line 2321 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 793:
#line 2330 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 794:
#line 2335 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 795:
#line 2342 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 796:
#line 2357 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("btrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 797:
#line 2364 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 798:
#line 2368 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 799:
#line 2372 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("btrim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 800:
#line 2376 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 801:
#line 2380 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 802:
#line 2387 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGMinMaxExpr *v = makeNode(PGMinMaxExpr);
					v->args = (yyvsp[(3) - (4)].list);
					v->op = PG_IS_GREATEST;
					v->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)v;
				;}
    break;

  case 803:
#line 2395 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGMinMaxExpr *v = makeNode(PGMinMaxExpr);
					v->args = (yyvsp[(3) - (4)].list);
					v->op = IS_LEAST;
					v->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)v;
				;}
    break;

  case 804:
#line 2409 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 805:
#line 2410 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 806:
#line 2414 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 807:
#line 2415 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 808:
#line 2423 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 809:
#line 2424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 810:
#line 2428 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 811:
#line 2430 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 812:
#line 2435 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 813:
#line 2443 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 814:
#line 2445 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 815:
#line 2458 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 816:
#line 2463 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 817:
#line 2488 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 818:
#line 2489 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 819:
#line 2492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 820:
#line 2493 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 821:
#line 2505 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.windef) = n;
				;}
    break;

  case 822:
#line 2523 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 823:
#line 2529 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 824:
#line 2539 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 825:
#line 2556 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 826:
#line 2601 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 827:
#line 2609 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 828:
#line 2617 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 829:
#line 2625 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 830:
#line 2633 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 831:
#line 2653 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 832:
#line 2654 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 833:
#line 2655 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 834:
#line 2658 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 835:
#line 2659 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 836:
#line 2660 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 837:
#line 2663 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 838:
#line 2664 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 839:
#line 2667 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 840:
#line 2668 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 841:
#line 2669 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 842:
#line 2670 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 843:
#line 2671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 844:
#line 2672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 845:
#line 2673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 846:
#line 2674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 847:
#line 2675 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 848:
#line 2676 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 849:
#line 2677 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 850:
#line 2678 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 851:
#line 2682 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 852:
#line 2684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 853:
#line 2689 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 854:
#line 2691 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 855:
#line 2696 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 856:
#line 2698 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 857:
#line 2700 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 858:
#line 2702 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 859:
#line 2704 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 860:
#line 2706 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 861:
#line 2720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 862:
#line 2722 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 863:
#line 2726 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 864:
#line 2730 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 865:
#line 2737 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 866:
#line 2741 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 867:
#line 2747 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 868:
#line 2751 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 869:
#line 2760 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 870:
#line 2770 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 871:
#line 2771 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 872:
#line 2776 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 873:
#line 2779 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 874:
#line 2786 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 875:
#line 2787 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 876:
#line 2788 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 877:
#line 2789 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 878:
#line 2790 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 879:
#line 2791 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 880:
#line 2792 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 881:
#line 2793 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 882:
#line 2804 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 883:
#line 2808 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 884:
#line 2815 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 885:
#line 2821 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 886:
#line 2822 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 887:
#line 2839 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 888:
#line 2843 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 889:
#line 2848 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 890:
#line 2852 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), -1));
				;}
    break;

  case 891:
#line 2867 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 892:
#line 2871 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 893:
#line 2875 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 894:
#line 2878 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 895:
#line 2881 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 896:
#line 2882 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 897:
#line 2883 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 898:
#line 2887 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 899:
#line 2893 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 900:
#line 2904 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 901:
#line 2917 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 902:
#line 2918 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 903:
#line 2923 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 904:
#line 2933 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 905:
#line 2934 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 906:
#line 2937 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 907:
#line 2938 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 908:
#line 2942 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 909:
#line 2946 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 910:
#line 2953 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 911:
#line 2957 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeNode(PGAStar);
				;}
    break;

  case 912:
#line 2961 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 913:
#line 2969 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 914:
#line 2979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 915:
#line 2980 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 916:
#line 2984 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 917:
#line 2985 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 918:
#line 2989 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 919:
#line 2990 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 922:
#line 3004 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 923:
#line 3005 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 924:
#line 3009 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 925:
#line 3010 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 926:
#line 3014 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 927:
#line 3030 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 928:
#line 3038 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 929:
#line 3046 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					n->fields = list_make1(makeNode(PGAStar));
					n->location = (yylsp[(1) - (1)]);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 930:
#line 3067 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 931:
#line 3068 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 932:
#line 3080 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 933:
#line 3084 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 934:
#line 3111 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 935:
#line 3113 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 936:
#line 3117 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 937:
#line 3119 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 938:
#line 3130 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 939:
#line 3132 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 940:
#line 3143 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 941:
#line 3147 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 942:
#line 3151 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 943:
#line 3155 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 944:
#line 3159 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 945:
#line 3168 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 946:
#line 3175 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 947:
#line 3207 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 948:
#line 3211 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 949:
#line 3217 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 950:
#line 3225 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGTypeName *t = (yyvsp[(1) - (6)].typnam);
					if ((yyvsp[(6) - (6)].list) != NIL)
					{
						t->typmods = lappend((yyvsp[(6) - (6)].list), makeParamRef(0, (yylsp[(3) - (6)])));
					}
					else
						t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
												makeParamRef(0, (yylsp[(3) - (6)])));
					(yyval.node) = makeParamRefCast(0, (yylsp[(5) - (6)]), t);
				;}
    break;

  case 951:
#line 3237 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 952:
#line 3241 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 953:
#line 3245 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 954:
#line 3250 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 955:
#line 3251 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 956:
#line 3267 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 957:
#line 3268 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 958:
#line 3269 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 959:
#line 3274 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 960:
#line 3275 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 961:
#line 3276 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 962:
#line 3279 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 963:
#line 3280 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 964:
#line 3284 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 965:
#line 3286 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 966:
#line 3290 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 967:
#line 3291 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 969:
#line 3302 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 970:
#line 3303 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 971:
#line 3304 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 972:
#line 3305 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 973:
#line 3306 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 974:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 975:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 976:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 981:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 982:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 983:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 984:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 989:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 990:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 991:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 992:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 993:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 994:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 995:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 996:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 997:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 998:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 999:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1000:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1001:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1002:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1003:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1004:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1005:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1006:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1007:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1008:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1009:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1010:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1011:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1012:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1013:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1014:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1015:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1016:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1017:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1023:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1024:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1025:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1026:
#line 68 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1027:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1028:
#line 74 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1029:
#line 80 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1030:
#line 84 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1031:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1032:
#line 92 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1033:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1034:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1035:
#line 99 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1036:
#line 105 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1037:
#line 111 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1038:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1039:
#line 119 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1040:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1041:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = true;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1042:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1043:
#line 32 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1044:
#line 34 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1045:
#line 42 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1046:
#line 53 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1047:
#line 65 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1048:
#line 73 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1049:
#line 81 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1050:
#line 88 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1051:
#line 98 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1052:
#line 100 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1053:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1054:
#line 110 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1055:
#line 114 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1056:
#line 129 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1057:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1058:
#line 136 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1059:
#line 137 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1060:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1061:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1062:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1063:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1064:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1065:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1066:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1067:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1068:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1069:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1070:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1071:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1072:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1073:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1074:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1075:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1076:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1077:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1078:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1079:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1080:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1081:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1082:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1083:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1084:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1085:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1086:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1087:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1088:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1089:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1090:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1091:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1092:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1093:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1094:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1095:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1096:
#line 4 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1097:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "timezone";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1098:
#line 16 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "transaction_isolation";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1099:
#line 22 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "all";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1100:
#line 30 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1101:
#line 32 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1102:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->replace = false;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1103:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->replace = true;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1104:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->replace = false;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1105:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->replace = true;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1106:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1107:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1108:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1109:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1110:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1111:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1112:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1113:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1114:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1115:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 21790 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 67 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, -1);
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}

static PGNode *
makeParamRefCast(int number, int location, PGTypeName *tpname)
{
	PGNode *p = makeParamRef(number, location);
	return makeTypeCast(p, tpname, -1);
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

